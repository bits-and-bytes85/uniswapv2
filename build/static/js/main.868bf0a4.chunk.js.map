{"version":3,"sources":["Theme/background.jpeg","assets/eth.png","assets/openexa_logonew.png","assets/logo_white.svg","assets/logo.svg","pages/background.jpeg","contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","hooks/index.ts","components/Popover/index.tsx","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/ButtonStyled/index.js","components/GlobalChart/index.js","components/Search/index.js","components/Panel/index.js","components/UniPrice/index.js","components/GlobalStats/index.js","components/Checkbox/index.js","pages/GlobalPage.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","components/HoverText/index.tsx","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","components/MiningPositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","components/Title/index.js","components/Toggle/index.tsx","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","components/analytics/GoogleAnalyticsReporter.jsx","App.js","index.js"],"names":["module","exports","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","ThemeProvider","darkMode","theme","color","customColor","textColor","backgroundImage","background","panelColor","uniswapPink","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","blue","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","ThemedBackground","div","a","attrs","target","rel","backgroundColor","GlobalStyle","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","healthClient","stakingClient","blockClient","timeframeOptions","WEEK","MONTH","HALF_YEAR","ALL_TIME","SUPPORTED_LIST_URLS__NO_ENS","TOKEN_BLACKLIST","PAIR_BLACKLIST","BLOCKED_WARNINGS","FEE_WARNING_TOKENS","UNTRACKED_COPY","TRACKED_OVERRIDES_PAIRS","TRACKED_OVERRIDES_TOKENS","SUBGRAPH_HEALTH","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","MINING_POSITIONS","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKEN_TOP_DAY_DATAS","TOKENS_HISTORICAL_BULK","tokens","tokenString","token","TOKEN_DATA","FILTERED_TRANSACTIONS","uriToHttp","split","toLowerCase","substr","hash","match","name","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","urls","i","url","isLast","response","fetch","console","debug","ok","json","validationErrors","errors","reduce","memo","error","add","dataPath","message","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","useLatestBlocks","latestBlock","headBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","e","log","useTimeframe","useListedTokens","fetchedTokens","tokensSoFar","newTokens","Promise","resolve","allFetched","formatted","t","fetchList","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","getSwapLink","getUniswapAppLink","linkVariable","localNumber","val","Numeral","format","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","shortenAddress","chars","isAddress","substring","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","push","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","toNiceDateYear","ethers","utils","getAddress","toK","num","tx","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","toString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","updateNameData","id","includes","safeAccess","object","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","oneWeekVolumeUntracked","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","offsetVolumes","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","oneDayPrice","ethPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateAllPairsInUniswap","updateAllTokensInUniswap","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","uniswapFactories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","checked","getChartData","oldestDateToFetch","offsetData","weeklyData","uniswapDayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getAllPairsOnUniswap","getAllTokensOnUniswap","useGlobalData","useGlobalChartData","useState","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","combinedData","tokenAddresses","useTokenDataContext","datas","acc","isMissingData","formattedByDate","dayDatas","getTokenChartData","fetchDatas","useTokenChartDataCombined","newChartData","newWeeklyData","ethPriceOld","newPrice","priceChange","checkForEthPrice","TokenDataContext","topTokens","combinedVol","interval","updateTopTokens","updateCombinedVolume","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","currentDate","tokenids","ids","tokenDayDatas","accum","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","aaveData","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","tokenAddr","latestPriceUSD","latestPairDatas","mostLiquidPairs","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","uniswap_return","netValueT0","hodleReturn","netReturn","uniswapReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","round","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","uniswap","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","pulse","keyframes","Wrapper","fill","height","css","AnimatedImg","LocalLoader","src","require","alt","Link","external","rest","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","BlockedWrapper","BlockedMessageWrapper","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","BAD_IMAGES","Inline","Image","img","size","StyledEthereumLogo","TokenLogo","header","setError","role","aria-label","EthereumLogo","boxShadow","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","HigherLogo","CoveredLogo","useColor","setColor","Vibrant","from","getPalette","err","palette","detectedHex","hex","AAscore","shade","PopoverContainer","show","transparentize","ReferenceElement","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","Arrow","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","field","useTracked","formatDataText","trackedValue","supressWarning","showUntracked","opacity","textAlign","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","weekVolume","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","item","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","base","baseChange","title","useWeekly","chartCreated","setChartCreated","dataPrev","usePrevious","tooltip","document","getElementById","removeChild","resize","formattedData","topScale","previousTheme","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","className","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ope","ButtonDark","OptionButton","CHART_VIEW","VOLUME","LIQUIDITY","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","setVolumeWindow","dailyData","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","zIndex","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInUniswap","allTokenData","useAllPairsInUniswap","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","replace","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","PriceCard","formatPercent","rawPercent","UniPrice","daiPair","usdcPair","usdtPair","daiPerEth","usdcPerEth","usdtPerEth","Header","Medium","GlobalStats","below1295","below1180","below1024","below400","below816","showPriceCard","setShowPriceCard","pairCount","formattedEthPrice","oneDayFees","mr","StyleCheckbox","ButtonText","CheckBox","setChecked","ml","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","setUseTracked","backgroundRepeat","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","CandleStickChart","valueFormatter","low","high","min","max","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","label","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","strokeWidth","dot","stroke","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","minWidth","HoverText","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningIcon","AlertCircle","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","dismissed","markAsDismissed","savedTokens","addToken","listedTokens","flexWrap","alingItems","alignSelf","gridColumn","gridRow","Checkbox","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","pairTxns","usePairTransactions","formattedLiquidity","usingUntrackedLiquidity","showUSDWaning","token0USD","token1USD","token0Rate","token1Rate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","UNISWAP_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","miningPosition","pairPercentage","balance","valueFirstPair","valueSecondPair","firstPairName","miningPool","secondPairName","firstPairAddress","secondPairAddress","miningPositionsSorted","AccountWrapper","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","miningPositionData","useMiningPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","setSavedOpen","removePair","removeToken","TitleWrapper","UniIcon","Option","activeText","Title","useHistory","Logo","StyledToggle","Toggle","toggle","isMobile","DesktopWrapper","MobileWrapper","HeaderText","Polling","PollingDot","seconds","sessionStart","setSeconds","useSessionStart","isDark","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","GoogleAnalyticsReporter","search","ReactGA","pageview","AppWrapper","Right","Center","WarningBanner","LayoutWrapper","savedOpen","App","globalChartData","component","exacts","strict","render","params","accountAddress","ContextProviders","Updaters","initialize","process","gaOptions","storage","storeGac","anonymizeIp","customBrowserType","ReactDOM"],"mappings":"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","file":"static/js/main.868bf0a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c19bcc64.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/eth.5fc0c9bd.png\";","module.exports = __webpack_public_path__ + \"static/media/openexa_logonew.56abb131.png\";","module.exports = __webpack_public_path__ + \"static/media/logo_white.0e48903e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f14b1d2f.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.c19bcc64.jpeg\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nconst UNISWAP = 'UNISWAP'\r\n\r\nconst VERSION = 'VERSION'\r\nconst CURRENT_VERSION = 0\r\nconst LAST_SAVED = 'LAST_SAVED'\r\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\r\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\r\nconst SAVED_TOKENS = 'SAVED_TOKENS'\r\nconst SAVED_PAIRS = 'SAVED_PAIRS'\r\n\r\nconst DARK_MODE = 'DARK_MODE'\r\n\r\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\r\n\r\nconst UPDATE_KEY = 'UPDATE_KEY'\r\n\r\nconst LocalStorageContext = createContext()\r\n\r\nfunction useLocalStorageContext() {\r\n  return useContext(LocalStorageContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_KEY: {\r\n      const { key, value } = payload\r\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\r\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [key]: value,\r\n        }\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  const defaultLocalStorage = {\r\n    [VERSION]: CURRENT_VERSION,\r\n    [DARK_MODE]: true,\r\n    [DISMISSED_PATHS]: {},\r\n    [SAVED_ACCOUNTS]: [],\r\n    [SAVED_TOKENS]: {},\r\n    [SAVED_PAIRS]: {},\r\n  }\r\n\r\n  try {\r\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP))\r\n    if (parsed[VERSION] !== CURRENT_VERSION) {\r\n      // this is where we could run migration logic\r\n      return defaultLocalStorage\r\n    } else {\r\n      return { ...defaultLocalStorage, ...parsed }\r\n    }\r\n  } catch {\r\n    return defaultLocalStorage\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, undefined, init)\r\n\r\n  const updateKey = useCallback((key, value) => {\r\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\r\n  }, [])\r\n\r\n  return (\r\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\r\n      {children}\r\n    </LocalStorageContext.Provider>\r\n  )\r\n}\r\n\r\nexport function Updater() {\r\n  const [state] = useLocalStorageContext()\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\r\n  })\r\n\r\n  return null\r\n}\r\n\r\nexport function useDarkModeManager() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  let isDarkMode = state[DARK_MODE]\r\n  const toggleDarkMode = useCallback(\r\n    (value) => {\r\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\r\n    },\r\n    [updateKey, isDarkMode]\r\n  )\r\n  return [isDarkMode, toggleDarkMode]\r\n}\r\n\r\nexport function usePathDismissed(path) {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\r\n  function dismiss() {\r\n    let newPaths = state?.[DISMISSED_PATHS]\r\n    newPaths[path] = true\r\n    updateKey(DISMISSED_PATHS, newPaths)\r\n  }\r\n\r\n  return [pathDismissed, dismiss]\r\n}\r\n\r\nexport function useSavedAccounts() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\r\n\r\n  const addAccount = useCallback(\r\n    (account) => {\r\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  const removeAccount = useCallback(\r\n    (account) => {\r\n      let index = savedAccounts?.indexOf(account) ?? -1\r\n      if (index > -1) {\r\n        updateKey(SAVED_ACCOUNTS, [\r\n          ...savedAccounts.slice(0, index),\r\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\r\n        ])\r\n      }\r\n    },\r\n    [savedAccounts, updateKey]\r\n  )\r\n\r\n  return [savedAccounts, addAccount, removeAccount]\r\n}\r\n\r\nexport function useSavedPairs() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedPairs = state?.[SAVED_PAIRS]\r\n\r\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = {\r\n      address,\r\n      token0Address,\r\n      token1Address,\r\n      token0Symbol,\r\n      token1Symbol,\r\n    }\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  function removePair(address) {\r\n    let newList = state?.[SAVED_PAIRS]\r\n    newList[address] = null\r\n    updateKey(SAVED_PAIRS, newList)\r\n  }\r\n\r\n  return [savedPairs, addPair, removePair]\r\n}\r\n\r\nexport function useSavedTokens() {\r\n  const [state, { updateKey }] = useLocalStorageContext()\r\n  const savedTokens = state?.[SAVED_TOKENS]\r\n\r\n  function addToken(address, symbol) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = {\r\n      symbol,\r\n    }\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  function removeToken(address) {\r\n    let newList = state?.[SAVED_TOKENS]\r\n    newList[address] = null\r\n    updateKey(SAVED_TOKENS, newList)\r\n  }\r\n\r\n  return [savedTokens, addToken, removeToken]\r\n}\r\n","import React from 'react'\r\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\r\nimport { useDarkModeManager } from '../contexts/LocalStorage'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport background from '../Theme/background.jpeg'\r\nexport default function ThemeProvider({ children }) {\r\n  const [darkMode] = useDarkModeManager()\r\n\r\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\r\n}\r\n\r\nconst theme = (darkMode, color) => ({\r\n  customColor: color,\r\n  textColor: darkMode ? color : 'black',\r\n  backgroundImage: background,\r\n  panelColor: darkMode ? 'rgba(255, 255, 255, 0)' : 'rgba(255, 255, 255, 0)',\r\n  // backgroundColor: darkMode ? '#212429' : '#F7F8FA',\r\n\r\n  uniswapPink: darkMode ? '#2960fa' : 'black',\r\n\r\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\r\n  inputBackground: darkMode ? '#1F1F1F' : '#FAFAFA',\r\n  shadowColor: darkMode ? '#000' : '#2F80ED',\r\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\r\n\r\n  text1: darkMode ? '#FAFAFA' : '#1F1F1F',\r\n  text2: darkMode ? '#C3C5CB' : '#565A69',\r\n  text3: darkMode ? '#6C7284' : '#888D9B',\r\n  text4: darkMode ? '#565A69' : '#C3C5CB',\r\n  text5: darkMode ? '#2C2F36' : '#EDEEF2',\r\n\r\n  // special case text types\r\n  white: '#FFFFFF',\r\n\r\n  // backgrounds / greys\r\n  bg1: darkMode ? '#212429' : '#FAFAFA',\r\n  bg2: darkMode ? '#2C2F36' : '#F7F8FA',\r\n  bg3: darkMode ? '#40444F' : '#EDEEF2',\r\n  bg4: darkMode ? '#565A69' : '#CED0D9',\r\n  bg5: darkMode ? '#565A69' : '#888D9B',\r\n  bg6: darkMode ? '#000' : '#FFFFFF',\r\n\r\n  //specialty colors\r\n  modalBG: darkMode ? 'rgba(0,0,0,0.85)' : 'rgba(0,0,0,0.6)',\r\n  advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.4)',\r\n  onlyLight: darkMode ? '#22242a' : 'transparent',\r\n  divider: darkMode ? 'rgba(43, 43, 43, 0.435)' : 'rgba(43, 43, 43, 0.035)',\r\n\r\n  //primary colors\r\n  primary1: darkMode ? '#2172E5' : '#2960fa',\r\n  primary2: darkMode ? '#3680E7' : '#2960fa',\r\n  primary3: darkMode ? '#4D8FEA' : '#6699ff',\r\n  primary4: darkMode ? '#376bad70' : '#2596be',\r\n  primary5: darkMode ? '#153d6f70' : '#2596be',\r\n\r\n  // color text\r\n  primaryText1: darkMode ? '#6da8ff' : '#2960fa',\r\n\r\n  // secondary colors\r\n  secondary1: darkMode ? '#2172E5' : '#2960fa',\r\n  secondary2: darkMode ? '#17000b26' : '#F6DDE8',\r\n  secondary3: darkMode ? '#17000b26' : '#2596be',\r\n\r\n  shadow1: darkMode ? '#000' : '#2F80ED',\r\n\r\n  // other\r\n  red1: '#1782a9',\r\n  green1: '#27AE60',\r\n  yellow1: '#FFE270',\r\n  yellow2: '#F3841E',\r\n  link: '#2172E5',\r\n  blue: '#2960fa',\r\n\r\n  //background: darkMode ? 'black' : `radial-gradient(50% 50% at 50% 50%, ##3680E730 0%, #fff 0%)`,\r\n})\r\n\r\nconst TextWrapper = styled(Text)`\r\n  color: ${({ color, theme }) => theme[color]};\r\n`\r\n\r\nexport const TYPE = {\r\n  main(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  body(props) {\r\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\r\n  },\r\n\r\n  small(props) {\r\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\r\n  },\r\n\r\n  header(props) {\r\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\r\n  },\r\n\r\n  largeHeader(props) {\r\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={30} {...props} />\r\n  },\r\n\r\n  light(props) {\r\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\r\n  },\r\n\r\n  pink(props) {\r\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\r\n  },\r\n}\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Link = styled.a.attrs({\r\n  target: '_blank',\r\n  rel: 'noopener noreferrer',\r\n})`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.primary1};\r\n  font-weight: 500;\r\n  :hover {\r\n    text-decoration: underline;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n    text-decoration: underline;\r\n  }\r\n  :active {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport const ThemedBackground = styled.div`\r\nbody {\r\n  backgroundImage: \r\n  \"url(${background})\",\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 14px;    \r\n  background-color: ${({ theme }) => theme.bg6};\r\n}\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  pointer-events: none;\r\n  max-width: 100vw !important;\r\n  height: 200vh;\r\n  mix-blend-mode: color;\r\n  background: ${({ backgroundColor }) =>\r\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  /* z-index: ; */\r\n\r\n  transform: translateY(-110vh);\r\n`\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  @import url('https://rsms.me/inter/inter.css');\r\n  html { font-family: 'Inter', sans-serif; }\r\n  @supports (font-variation-settings: normal) {\r\n    html { font-family: 'Inter var', sans-serif; }\r\n  }\r\n  \r\n  html,\r\n  body {\r\n    backgroundImage: \r\n    \"url(${background})\",\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    font-size: 14px;    \r\n    background-color: ${({ theme }) => theme.bg6};\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n\r\n    :hover {\r\n      text-decoration: none\r\n    }\r\n  }\r\n\r\n  \r\n.three-line-legend {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: #20262E;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n.three-line-legend-dark {\r\n\twidth: 100%;\r\n\theight: 70px;\r\n\tposition: absolute;\r\n\tpadding: 8px;\r\n\tfont-size: 12px;\r\n\tcolor: white;\r\n\tbackground-color: rgba(255, 255, 255, 0.23);\r\n\ttext-align: left;\r\n\tz-index: 10;\r\n  pointer-events: none;\r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n  .three-line-legend {\r\n    display: none !important;\r\n  }\r\n}\r\n\r\n.tv-lightweight-charts{\r\n  width: 100% !important;\r\n  \r\n\r\n  & > * {\r\n    width: 100% !important;\r\n  }\r\n}\r\n\r\n\r\n  html {\r\n    font-size: 1rem;\r\n    font-variant: none;\r\n    color: 'black';\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n    height: 100%;\r\n  }\r\n`\r\n","import { ApolloClient } from 'apollo-client'\r\nimport { InMemoryCache } from 'apollo-cache-inmemory'\r\nimport { HttpLink } from 'apollo-link-http'\r\n\r\nexport const client = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const healthClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/index-node/graphql',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const v1Client = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const stakingClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/way2rach/talisman',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n  shouldBatch: true,\r\n})\r\n\r\nexport const blockClient = new ApolloClient({\r\n  link: new HttpLink({\r\n    uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\r\n  }),\r\n  cache: new InMemoryCache(),\r\n})\r\n","export const FACTORY_ADDRESS = '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f'\r\n\r\nexport const BUNDLE_ID = '1'\r\n\r\nexport const timeframeOptions = {\r\n  WEEK: '1 week',\r\n  MONTH: '1 month',\r\n  // THREE_MONTHS: '3 months',\r\n  // YEAR: '1 year',\r\n  HALF_YEAR: '6 months',\r\n  ALL_TIME: 'All time',\r\n}\r\n\r\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\r\nexport const SUPPORTED_LIST_URLS__NO_ENS = [\r\n  'https://gateway.ipfs.io/ipns/tokens.uniswap.org',\r\n  'https://www.coingecko.com/tokens_list/uniswap/defi_100/v_0_0_0.json',\r\n]\r\n\r\n// hide from overview list\r\nexport const TOKEN_BLACKLIST = [\r\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\r\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\r\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\r\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\r\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76',\r\n  '0x93b2fff814fcaeffb01406e80b4ecd89ca6a021b',\r\n\r\n  // rebass tokens\r\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\r\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\r\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\r\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\r\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\r\n]\r\n\r\n// pair blacklist\r\nexport const PAIR_BLACKLIST = [\r\n  '0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5',\r\n  '0x97cb8cbe91227ba87fc21aaf52c4212d245da3f8',\r\n  '0x1acba73121d5f63d8ea40bdc64edb594bd88ed09',\r\n  '0x7d7e813082ef6c143277c71786e5be626ec77b20',\r\n]\r\n\r\n// warnings to display if page contains info about blocked token\r\nexport const BLOCKED_WARNINGS = {\r\n  '0xf4eda77f0b455a12f3eb44f8653835f377e36b76':\r\n    'TikTok Inc. has asserted this token is violating its trademarks and therefore is not available.',\r\n}\r\n\r\n/**\r\n * For tokens that cause erros on fee calculations\r\n */\r\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\r\n\r\nexport const UNTRACKED_COPY = 'Derived USD values may be inaccurate without liquid stablecoin or ETH pairings.'\r\n\r\n// pairs that should be tracked but arent due to lag in subgraph\r\nexport const TRACKED_OVERRIDES_PAIRS = [\r\n  '0x9928e4046d7c6513326ccea028cd3e7a91c7590a',\r\n  '0x87da823b6fc8eb8575a235a824690fda94674c88',\r\n  '0xcd7989894bc033581532d2cd88da5db0a4b12859',\r\n  '0xe1573b9d29e2183b1af0e743dc2754979a40d237',\r\n  '0x45804880de22913dafe09f4980848ece6ecbaf78',\r\n  '0x709f7b10f22eb62b05913b59b92ddd372d4e2152',\r\n]\r\n\r\n// tokens that should be tracked but arent due to lag in subgraph\r\n// all pairs that include token will be tracked\r\nexport const TRACKED_OVERRIDES_TOKENS = ['0x956f47f50a910163d8bf957cf5846d573e7f87ca']\r\n","import gql from 'graphql-tag'\r\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\r\n\r\nexport const SUBGRAPH_HEALTH = gql`\r\n  query health {\r\n    indexingStatusForCurrentVersion(subgraphName: \"uniswap/uniswap-v2\") {\r\n      synced\r\n      health\r\n      chains {\r\n        chainHeadBlock {\r\n          number\r\n        }\r\n        latestBlock {\r\n          number\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const V1_DATA_QUERY = gql`\r\n  query uniswap($date: Int!, $date2: Int!) {\r\n    current: uniswap(id: \"1\") {\r\n      totalVolumeUSD\r\n      totalLiquidityUSD\r\n      txCount\r\n    }\r\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\r\n      totalVolumeUSD\r\n      totalLiquidityUSD\r\n      txCount\r\n    }\r\n    twoDay: uniswapHistoricalDatas(\r\n      where: { timestamp_lt: $date2 }\r\n      first: 1\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n    ) {\r\n      totalVolumeUSD\r\n      totalLiquidityUSD\r\n      txCount\r\n    }\r\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\r\n      ethBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCK = gql`\r\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\r\n    blocks(\r\n      first: 1\r\n      orderBy: timestamp\r\n      orderDirection: asc\r\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\r\n    ) {\r\n      id\r\n      number\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_BLOCKS = (timestamps) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += timestamps.map((timestamp) => {\r\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${\r\n      timestamp + 600\r\n    } }) {\r\n      number\r\n    }`\r\n  })\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \r\n        liquidityTokenBalance\r\n        pair  {\r\n          id\r\n          totalSupply\r\n          reserveUSD\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \r\n        derivedETH\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOP_LPS_PER_PAIRS = gql`\r\n  query lps($pair: Bytes!) {\r\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\r\n      user {\r\n        id\r\n      }\r\n      pair {\r\n        id\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        token0Price\r\n        token1Price\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const SHARE_VALUE = (pairAddress, blocks) => {\r\n  let queryString = 'query blocks {'\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        totalSupply \r\n        token0{\r\n          derivedETH\r\n        }\r\n        token1{\r\n          derivedETH\r\n        }\r\n      }\r\n    `\r\n  )\r\n  queryString += ','\r\n  queryString += blocks.map(\r\n    (block) => `\r\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \r\n        ethPrice\r\n      }\r\n    `\r\n  )\r\n\r\n  queryString += '}'\r\n  return gql(queryString)\r\n}\r\n\r\nexport const ETH_PRICE = (block) => {\r\n  const queryString = block\r\n    ? `\r\n    query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n    : ` query bundles {\r\n      bundles(where: { id: ${BUNDLE_ID} }) {\r\n        id\r\n        ethPrice\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER = (block, account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\", block: {number: ${block}}) {\r\n        liquidityPositions\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\r\n  query events($user: Bytes!, $pair: Bytes!) {\r\n    mints(where: { to: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n    burns(where: { sender: $user, pair: $pair }) {\r\n      amountUSD\r\n      amount0\r\n      amount1\r\n      timestamp\r\n      pair {\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const FIRST_SNAPSHOT = gql`\r\n  query snapshots($user: Bytes!) {\r\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\r\n      timestamp\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_HISTORY = gql`\r\n  query snapshots($user: Bytes!, $skip: Int!) {\r\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\r\n      timestamp\r\n      reserveUSD\r\n      liquidityTokenBalance\r\n      liquidityTokenTotalSupply\r\n      reserve0\r\n      reserve1\r\n      token0PriceUSD\r\n      token1PriceUSD\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n        }\r\n        token1 {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_POSITIONS = gql`\r\n  query liquidityPositions($user: Bytes!) {\r\n    liquidityPositions(where: { user: $user }) {\r\n      pair {\r\n        id\r\n        reserve0\r\n        reserve1\r\n        reserveUSD\r\n        token0 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n          derivedETH\r\n        }\r\n        totalSupply\r\n      }\r\n      liquidityTokenBalance\r\n    }\r\n  }\r\n`\r\n\r\nexport const USER_TRANSACTIONS = gql`\r\n  query transactions($user: Bytes!) {\r\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        id\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\r\n      id\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          symbol\r\n        }\r\n        token1 {\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_CHART = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\r\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA = gql`\r\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\r\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\r\n      id\r\n      date\r\n      dailyVolumeToken0\r\n      dailyVolumeToken1\r\n      dailyVolumeUSD\r\n      totalSupply\r\n      reserveUSD\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  const queryString = `\r\n    query days {\r\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\r\n        id\r\n        pairAddress\r\n        date\r\n        dailyVolumeToken0\r\n        dailyVolumeToken1\r\n        dailyVolumeUSD\r\n        totalSupply\r\n        reserveUSD\r\n      }\r\n    } \r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_CHART = gql`\r\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\r\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\r\n      id\r\n      date\r\n      totalVolumeUSD\r\n      dailyVolumeUSD\r\n      dailyVolumeETH\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n    }\r\n  }\r\n`\r\n\r\nexport const GLOBAL_DATA = (block) => {\r\n  const queryString = ` query uniswapFactories {\r\n      uniswapFactories(\r\n       ${block ? `block: { number: ${block}}` : ``} \r\n       where: { id: \"${FACTORY_ADDRESS}\" }) {\r\n        id\r\n        totalVolumeUSD\r\n        totalVolumeETH\r\n        untrackedVolumeUSD\r\n        totalLiquidityUSD\r\n        totalLiquidityETH\r\n        txCount\r\n        pairCount\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const GLOBAL_TXNS = gql`\r\n  query transactions {\r\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\r\n      mints(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        to\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      burns(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        sender\r\n        liquidity\r\n        amount0\r\n        amount1\r\n        amountUSD\r\n      }\r\n      swaps(orderBy: timestamp, orderDirection: desc) {\r\n        transaction {\r\n          id\r\n          timestamp\r\n        }\r\n        pair {\r\n          token0 {\r\n            id\r\n            symbol\r\n          }\r\n          token1 {\r\n            id\r\n            symbol\r\n          }\r\n        }\r\n        amount0In\r\n        amount0Out\r\n        amount1In\r\n        amount1Out\r\n        amountUSD\r\n        to\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_TOKENS = gql`\r\n  query tokens($skip: Int!) {\r\n    tokens(first: 500, skip: $skip) {\r\n      id\r\n      name\r\n      symbol\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKEN_SEARCH = gql`\r\n  query tokens($value: String, $id: String) {\r\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_SEARCH = gql`\r\n  query pairs($tokens: [Bytes]!, $id: String) {\r\n    as0: pairs(where: { token0_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    as1: pairs(where: { token1_in: $tokens }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n    asAddress: pairs(where: { id: $id }) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const ALL_PAIRS = gql`\r\n  query pairs($skip: Int!) {\r\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      token0 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n      token1 {\r\n        id\r\n        symbol\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst PairFields = `\r\n  fragment PairFields on Pair {\r\n    id\r\n    txCount\r\n    token0 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    token1 {\r\n      id\r\n      symbol\r\n      name\r\n      totalLiquidity\r\n      derivedETH\r\n    }\r\n    reserve0\r\n    reserve1\r\n    reserveUSD\r\n    totalSupply\r\n    trackedReserveETH\r\n    reserveETH\r\n    volumeUSD\r\n    untrackedVolumeUSD\r\n    token0Price\r\n    token1Price\r\n    createdAtTimestamp\r\n  }\r\n`\r\n\r\nexport const PAIRS_CURRENT = gql`\r\n  query pairs {\r\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIR_DATA = (pairAddress, block) => {\r\n  const queryString = `\r\n    ${PairFields}\r\n    query pairs {\r\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\r\n        ...PairFields\r\n      }\r\n    }`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const MINING_POSITIONS = (account) => {\r\n  const queryString = `\r\n    query users {\r\n      user(id: \"${account}\") {\r\n        miningPosition {\r\n          id\r\n          user {\r\n            id\r\n          }\r\n          miningPool {\r\n              pair {\r\n                id\r\n                token0\r\n                token1\r\n              }\r\n          }\r\n          balance\r\n        }\r\n      }\r\n    }\r\n`\r\n  return gql(queryString)\r\n}\r\n\r\nexport const PAIRS_BULK = gql`\r\n  ${PairFields}\r\n  query pairs($allPairs: [Bytes]!) {\r\n    pairs(first: 500, where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      ...PairFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\r\n  let pairsString = `[`\r\n  pairs.map((pair) => {\r\n    return (pairsString += `\"${pair}\"`)\r\n  })\r\n  pairsString += ']'\r\n  let queryString = `\r\n  query pairs {\r\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\r\n      id\r\n      reserveUSD\r\n      trackedReserveETH\r\n      volumeUSD\r\n      untrackedVolumeUSD\r\n    }\r\n  }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_CHART = gql`\r\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\r\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\r\n      id\r\n      date\r\n      priceUSD\r\n      totalLiquidityToken\r\n      totalLiquidityUSD\r\n      totalLiquidityETH\r\n      dailyVolumeETH\r\n      dailyVolumeToken\r\n      dailyVolumeUSD\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenFields = `\r\n  fragment TokenFields on Token {\r\n    id\r\n    name\r\n    symbol\r\n    derivedETH\r\n    tradeVolume\r\n    tradeVolumeUSD\r\n    untrackedVolumeUSD\r\n    totalLiquidity\r\n    txCount\r\n  }\r\n`\r\n\r\n// used for getting top tokens by daily volume\r\nexport const TOKEN_TOP_DAY_DATAS = gql`\r\n  query tokenDayDatas($date: Int) {\r\n    tokenDayDatas(first: 50, orderBy: totalLiquidityUSD, orderDirection: desc, where: { date_gt: $date }) {\r\n      id\r\n      date\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKENS_BULK = gql`\r\n  ${TokenFields}\r\n  query tokens($tokenAddresses: [Bytes]!) {\r\n    pairs(where: { id_in: $tokenAddresses }) {\r\n      ...TokenFields\r\n    }\r\n  }\r\n`\r\nexport const TOKENS_HISTORICAL_BULK = (tokens, block) => {\r\n  let tokenString = `[`\r\n  tokens.map((token) => {\r\n    return (tokenString += `\"${token}\",`)\r\n  })\r\n  tokenString += ']'\r\n  let queryString = `\r\n  query tokens {\r\n    tokens(first: 50, where: {id_in: ${tokenString}}, ${block ? 'block: {number: ' + block + '}' : ''}  ) {\r\n      id\r\n      name\r\n      symbol\r\n      derivedETH\r\n      tradeVolume\r\n      tradeVolumeUSD\r\n      untrackedVolumeUSD\r\n      totalLiquidity\r\n      txCount\r\n    }\r\n  }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKENS_CURRENT = gql`\r\n  ${TokenFields}\r\n  query tokens {\r\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n      ...TokenFields\r\n    }\r\n  }\r\n`\r\n\r\nexport const TOKENS_DYNAMIC = (block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\r\n        ...TokenFields\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const TOKEN_DATA = (tokenAddress, block) => {\r\n  const queryString = `\r\n    ${TokenFields}\r\n    query tokens {\r\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\r\n        ...TokenFields\r\n      }\r\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\r\n        id\r\n      }\r\n    }\r\n  `\r\n  return gql(queryString)\r\n}\r\n\r\nexport const FILTERED_TRANSACTIONS = gql`\r\n  query ($allPairs: [Bytes]!) {\r\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      to\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      sender\r\n      liquidity\r\n      amount0\r\n      amount1\r\n      amountUSD\r\n    }\r\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\r\n      transaction {\r\n        id\r\n        timestamp\r\n      }\r\n      id\r\n      pair {\r\n        token0 {\r\n          id\r\n          symbol\r\n        }\r\n        token1 {\r\n          id\r\n          symbol\r\n        }\r\n      }\r\n      amount0In\r\n      amount0Out\r\n      amount1In\r\n      amount1Out\r\n      amountUSD\r\n      to\r\n    }\r\n  }\r\n`\r\n","import { TokenList } from '@uniswap/token-lists'\r\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\r\nimport Ajv from 'ajv'\r\n\r\n/**\r\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\r\n * @param uri to convert to fetch-able http url\r\n */\r\nfunction uriToHttp(uri: string): string[] {\r\n  const protocol = uri.split(':')[0].toLowerCase()\r\n  switch (protocol) {\r\n    case 'https':\r\n      return [uri]\r\n    case 'http':\r\n      return ['https' + uri.substr(4), uri]\r\n    case 'ipfs':\r\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\r\n    case 'ipns':\r\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\r\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\r\n    default:\r\n      return []\r\n  }\r\n}\r\n\r\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\r\n\r\n/**\r\n * Contains the logic for resolving a list URL to a validated token list\r\n * @param listUrl list url\r\n */\r\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\r\n  const urls = uriToHttp(listUrl)\r\n  for (let i = 0; i < urls.length; i++) {\r\n    const url = urls[i]\r\n    const isLast = i === urls.length - 1\r\n    let response\r\n    try {\r\n      response = await fetch(url)\r\n    } catch (error) {\r\n      console.debug('Failed to fetch list', listUrl, error)\r\n\r\n      continue\r\n    }\r\n\r\n    if (!response.ok) {\r\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\r\n      continue\r\n    }\r\n\r\n    const json = await response.json()\r\n    if (!tokenListValidator(json)) {\r\n      const validationErrors: string =\r\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\r\n          const add = `${error.dataPath} ${error.message ?? ''}`\r\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\r\n        }, '') ?? 'unknown error'\r\n      throw new Error(`Token list failed validation: ${validationErrors}`)\r\n    }\r\n    return json\r\n  }\r\n  // throw new Error('Unrecognized list URL protocol.')\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\r\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport getTokenList from '../utils/tokenLists'\r\nimport { healthClient } from '../apollo/client'\r\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\r\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\r\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\r\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\r\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\r\n\r\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\r\nconst TIME_KEY = 'TIME_KEY'\r\nconst CURRENCY = 'CURRENCY'\r\nconst SESSION_START = 'SESSION_START'\r\nconst LATEST_BLOCK = 'LATEST_BLOCK'\r\nconst HEAD_BLOCK = 'HEAD_BLOCK'\r\n\r\nconst ApplicationContext = createContext()\r\n\r\nfunction useApplicationContext() {\r\n  return useContext(ApplicationContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { currency } = payload\r\n      return {\r\n        ...state,\r\n        [CURRENCY]: currency,\r\n      }\r\n    }\r\n    case UPDATE_TIMEFRAME: {\r\n      const { newTimeFrame } = payload\r\n      return {\r\n        ...state,\r\n        [TIME_KEY]: newTimeFrame,\r\n      }\r\n    }\r\n    case UPDATE_SESSION_START: {\r\n      const { timestamp } = payload\r\n      return {\r\n        ...state,\r\n        [SESSION_START]: timestamp,\r\n      }\r\n    }\r\n\r\n    case UPDATE_LATEST_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [LATEST_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATE_HEAD_BLOCK: {\r\n      const { block } = payload\r\n      return {\r\n        ...state,\r\n        [HEAD_BLOCK]: block,\r\n      }\r\n    }\r\n\r\n    case UPDATED_SUPPORTED_TOKENS: {\r\n      const { supportedTokens } = payload\r\n      return {\r\n        ...state,\r\n        [SUPPORTED_TOKENS]: supportedTokens,\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  CURRENCY: 'USD',\r\n  TIME_KEY: timeframeOptions.ALL_TIME,\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n  const update = useCallback((currency) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        currency,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // global time window for charts - see timeframe options in constants\r\n  const updateTimeframe = useCallback((newTimeFrame) => {\r\n    dispatch({\r\n      type: UPDATE_TIMEFRAME,\r\n      payload: {\r\n        newTimeFrame,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  // used for refresh button\r\n  const updateSessionStart = useCallback((timestamp) => {\r\n    dispatch({\r\n      type: UPDATE_SESSION_START,\r\n      payload: {\r\n        timestamp,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateSupportedTokens = useCallback((supportedTokens) => {\r\n    dispatch({\r\n      type: UPDATED_SUPPORTED_TOKENS,\r\n      payload: {\r\n        supportedTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateLatestBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_LATEST_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateHeadBlock = useCallback((block) => {\r\n    dispatch({\r\n      type: UPDATE_HEAD_BLOCK,\r\n      payload: {\r\n        block,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <ApplicationContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateSessionStart,\r\n            updateTimeframe,\r\n            updateSupportedTokens,\r\n            updateLatestBlock,\r\n            updateHeadBlock,\r\n          },\r\n        ],\r\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\r\n      )}\r\n    >\r\n      {children}\r\n    </ApplicationContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useLatestBlocks() {\r\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\r\n\r\n  const latestBlock = state?.[LATEST_BLOCK]\r\n  const headBlock = state?.[HEAD_BLOCK]\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      healthClient\r\n        .query({\r\n          query: SUBGRAPH_HEALTH,\r\n        })\r\n        .then((res) => {\r\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\r\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\r\n          if (syncedBlock && headBlock) {\r\n            updateLatestBlock(syncedBlock)\r\n            updateHeadBlock(headBlock)\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        })\r\n    }\r\n    if (!latestBlock) {\r\n      fetch()\r\n    }\r\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\r\n\r\n  return [latestBlock, headBlock]\r\n}\r\n\r\nexport function useCurrentCurrency() {\r\n  const [state, { update }] = useApplicationContext()\r\n  const toggleCurrency = useCallback(() => {\r\n    if (state.currency === 'ETH') {\r\n      update('USD')\r\n    } else {\r\n      update('ETH')\r\n    }\r\n  }, [state, update])\r\n  return [state[CURRENCY], toggleCurrency]\r\n}\r\n\r\nexport function useTimeframe() {\r\n  const [state, { updateTimeframe }] = useApplicationContext()\r\n  const activeTimeframe = state?.[`TIME_KEY`]\r\n  return [activeTimeframe, updateTimeframe]\r\n}\r\n\r\nexport function useStartTimestamp() {\r\n  const [activeWindow] = useTimeframe()\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    let startTime =\r\n      dayjs\r\n        .utc()\r\n        .subtract(\r\n          1,\r\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\r\n        )\r\n        .startOf('day')\r\n        .unix() - 1\r\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\r\n    setStartDateTimestamp(startTime)\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  return startDateTimestamp\r\n}\r\n\r\n// keep track of session length for refresh ticker\r\nexport function useSessionStart() {\r\n  const [state, { updateSessionStart }] = useApplicationContext()\r\n  const sessionStart = state?.[SESSION_START]\r\n\r\n  useEffect(() => {\r\n    if (!sessionStart) {\r\n      updateSessionStart(Date.now())\r\n    }\r\n  })\r\n\r\n  const [seconds, setSeconds] = useState(0)\r\n\r\n  useEffect(() => {\r\n    let interval = null\r\n    interval = setInterval(() => {\r\n      setSeconds(Date.now() - sessionStart ?? Date.now())\r\n    }, 1000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [seconds, sessionStart])\r\n\r\n  return parseInt(seconds / 1000)\r\n}\r\n\r\nexport function useListedTokens() {\r\n  const [state, { updateSupportedTokens }] = useApplicationContext()\r\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\r\n\r\n  useEffect(() => {\r\n    async function fetchList() {\r\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\r\n        const tokensSoFar = await fetchedTokens\r\n        const newTokens = await getTokenList(url)\r\n        if (newTokens?.tokens) {\r\n          return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\r\n        }\r\n      }, Promise.resolve([]))\r\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\r\n      updateSupportedTokens(formatted)\r\n    }\r\n    if (!supportedTokens) {\r\n      try {\r\n        fetchList()\r\n      } catch {\r\n        console.log('Error fetching')\r\n      }\r\n    }\r\n  }, [updateSupportedTokens, supportedTokens])\r\n\r\n  return supportedTokens\r\n}\r\n","import React from 'react'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport dayjs from 'dayjs'\r\nimport { ethers } from 'ethers'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { client, blockClient } from '../apollo/client'\r\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\r\nimport { Text } from 'rebass'\r\nimport _Decimal from 'decimal.js-light'\r\nimport toFormat from 'toformat'\r\nimport { timeframeOptions } from '../constants'\r\nimport Numeral from 'numeral'\r\n\r\n// format libraries\r\nconst Decimal = toFormat(_Decimal)\r\nBigNumber.set({ EXPONENTIAL_AT: 50 })\r\ndayjs.extend(utc)\r\n\r\nexport function getTimeframe(timeWindow) {\r\n  const utcEndTime = dayjs.utc()\r\n  // based on window, get starttime\r\n  let utcStartTime\r\n  switch (timeWindow) {\r\n    case timeframeOptions.WEEK:\r\n      utcStartTime = utcEndTime.subtract(1, 'week').endOf('day').unix() - 1\r\n      break\r\n    case timeframeOptions.MONTH:\r\n      utcStartTime = utcEndTime.subtract(1, 'month').endOf('day').unix() - 1\r\n      break\r\n    case timeframeOptions.ALL_TIME:\r\n      utcStartTime = utcEndTime.subtract(1, 'year').endOf('day').unix() - 1\r\n      break\r\n    default:\r\n      utcStartTime = utcEndTime.subtract(1, 'year').startOf('year').unix() - 1\r\n      break\r\n  }\r\n  return utcStartTime\r\n}\r\n\r\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\r\n  if (!token1Address) {\r\n    return (\r\n      `https://app.uniswap.org/#/` +\r\n      (remove ? `remove` : `add`) +\r\n      `/v2/${token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address}/${'ETH'}`\r\n    )\r\n  } else {\r\n    return (\r\n      `https://app.uniswap.org/#/` +\r\n      (remove ? `remove` : `add`) +\r\n      `/v2/${token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address}/${\r\n        token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address\r\n      }`\r\n    )\r\n  }\r\n}\r\n\r\nexport function getSwapLink(token0Address, token1Address = null) {\r\n  if (!token1Address) {\r\n    return `https://app.uniswap.org/#/swap?inputCurrency=${token0Address}`\r\n  } else {\r\n    return `https://app.uniswap.org/#/swap?inputCurrency=${\r\n      token0Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token0Address\r\n    }&outputCurrency=${token1Address === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2' ? 'ETH' : token1Address}`\r\n  }\r\n}\r\n\r\nexport function getMiningPoolLink(token0Address) {\r\n  return `https://app.uniswap.org/#/uni/ETH/${token0Address}`\r\n}\r\n\r\nexport function getUniswapAppLink(linkVariable) {\r\n  let baseUniswapUrl = 'https://app.uniswap.org/#/uni'\r\n  if (!linkVariable) {\r\n    return baseUniswapUrl\r\n  }\r\n\r\n  return `${baseUniswapUrl}/ETH/${linkVariable}`\r\n}\r\n\r\nexport function localNumber(val) {\r\n  return Numeral(val).format('0,0')\r\n}\r\n\r\nexport const toNiceDate = (date) => {\r\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\r\n  return x\r\n}\r\n\r\n// shorten the checksummed version of the input address to have 0x + 4 characters at start and end\r\nexport function shortenAddress(address, chars = 4) {\r\n  const parsed = isAddress(address)\r\n  if (!parsed) {\r\n    throw Error(`Invalid 'address' parameter '${address}'.`)\r\n  }\r\n  return `${parsed.substring(0, chars + 2)}...${parsed.substring(42 - chars)}`\r\n}\r\n\r\nexport const toWeeklyDate = (date) => {\r\n  const formatted = dayjs.utc(dayjs.unix(date))\r\n  date = new Date(formatted)\r\n  const day = new Date(formatted).getDay()\r\n  var lessDays = day === 6 ? 0 : day + 1\r\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\r\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\r\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\r\n}\r\n\r\nexport function getTimestampsForChanges() {\r\n  const utcCurrentTime = dayjs()\r\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\r\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\r\n  return [t1, t2, tWeek]\r\n}\r\n\r\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\r\n  let fetchedData = {}\r\n  let allFound = false\r\n  let skip = 0\r\n\r\n  while (!allFound) {\r\n    let end = list.length\r\n    if (skip + skipCount < list.length) {\r\n      end = skip + skipCount\r\n    }\r\n    let sliced = list.slice(skip, end)\r\n    let result = await localClient.query({\r\n      query: query(...vars, sliced),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    fetchedData = {\r\n      ...fetchedData,\r\n      ...result.data,\r\n    }\r\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\r\n      allFound = true\r\n    } else {\r\n      skip += skipCount\r\n    }\r\n  }\r\n\r\n  return fetchedData\r\n}\r\n\r\n/**\r\n * @notice Fetches first block after a given timestamp\r\n * @dev Query speed is optimized by limiting to a 600-second period\r\n * @param {Int} timestamp in seconds\r\n */\r\nexport async function getBlockFromTimestamp(timestamp) {\r\n  let result = await blockClient.query({\r\n    query: GET_BLOCK,\r\n    variables: {\r\n      timestampFrom: timestamp,\r\n      timestampTo: timestamp + 600,\r\n    },\r\n    fetchPolicy: 'cache-first',\r\n  })\r\n  return result?.data?.blocks?.[0]?.number\r\n}\r\n\r\n/**\r\n * @notice Fetches block objects for an array of timestamps.\r\n * @dev blocks are returned in chronological order (ASC) regardless of input.\r\n * @dev blocks are returned at string representations of Int\r\n * @dev timestamps are returns as they were provided; not the block time.\r\n * @param {Array} timestamps\r\n */\r\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\r\n  if (timestamps?.length === 0) {\r\n    return []\r\n  }\r\n\r\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\r\n\r\n  let blocks = []\r\n  if (fetchedData) {\r\n    for (var t in fetchedData) {\r\n      if (fetchedData[t].length > 0) {\r\n        blocks.push({\r\n          timestamp: t.split('t')[1],\r\n          number: fetchedData[t][0]['number'],\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return blocks\r\n}\r\n\r\n// export async function getLiquidityTokenBalanceOvertime(account, timestamps) {\r\n//   // get blocks based on timestamps\r\n//   const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n//   // get historical share values with time travel queries\r\n//   let result = await client.query({\r\n//     query: SHARE_VALUE(account, blocks),\r\n//     fetchPolicy: 'cache-first',\r\n//   })\r\n\r\n//   let values = []\r\n//   for (var row in result?.data) {\r\n//     let timestamp = row.split('t')[1]\r\n//     if (timestamp) {\r\n//       values.push({\r\n//         timestamp,\r\n//         balance: 0,\r\n//       })\r\n//     }\r\n//   }\r\n// }\r\n\r\n/**\r\n * @notice Example query using time travel queries\r\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\r\n * @param {String} pairAddress\r\n * @param {Array} timestamps\r\n */\r\nexport async function getShareValueOverTime(pairAddress, timestamps) {\r\n  if (!timestamps) {\r\n    const utcCurrentTime = dayjs()\r\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\r\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\r\n  }\r\n\r\n  // get blocks based on timestamps\r\n  const blocks = await getBlocksFromTimestamps(timestamps)\r\n\r\n  // get historical share values with time travel queries\r\n  let result = await client.query({\r\n    query: SHARE_VALUE(pairAddress, blocks),\r\n    fetchPolicy: 'cache-first',\r\n  })\r\n\r\n  let values = []\r\n  for (var row in result?.data) {\r\n    let timestamp = row.split('t')[1]\r\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\r\n    if (timestamp) {\r\n      values.push({\r\n        timestamp,\r\n        sharePriceUsd,\r\n        totalSupply: result.data[row].totalSupply,\r\n        reserve0: result.data[row].reserve0,\r\n        reserve1: result.data[row].reserve1,\r\n        reserveUSD: result.data[row].reserveUSD,\r\n        token0DerivedETH: result.data[row].token0.derivedETH,\r\n        token1DerivedETH: result.data[row].token1.derivedETH,\r\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\r\n        ethPrice: 0,\r\n        token0PriceUSD: 0,\r\n        token1PriceUSD: 0,\r\n      })\r\n    }\r\n  }\r\n\r\n  // add eth prices\r\n  let index = 0\r\n  for (var brow in result?.data) {\r\n    let timestamp = brow.split('b')[1]\r\n    if (timestamp) {\r\n      values[index].ethPrice = result.data[brow].ethPrice\r\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\r\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\r\n      index += 1\r\n    }\r\n  }\r\n\r\n  return values\r\n}\r\n\r\n/**\r\n * @notice Creates an evenly-spaced array of timestamps\r\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\r\n * @param {Int} timestamp_from in seconds\r\n * @param {Int} period_length in seconds\r\n * @param {Int} periods\r\n */\r\nexport function getTimestampRange(timestamp_from, period_length, periods) {\r\n  let timestamps = []\r\n  for (let i = 0; i <= periods; i++) {\r\n    timestamps.push(timestamp_from + i * period_length)\r\n  }\r\n  return timestamps\r\n}\r\n\r\nexport const toNiceDateYear = (date) => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\r\n\r\nexport const isAddress = (value) => {\r\n  try {\r\n    return ethers.utils.getAddress(value.toLowerCase())\r\n  } catch {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const toK = (num) => {\r\n  return Numeral(num).format('0.[00]a')\r\n}\r\n\r\nexport const setThemeColor = (theme) => document.documentElement.style.setProperty('--c-token', theme || '#333333')\r\n\r\nexport const Big = (number) => new BigNumber(number)\r\n\r\nexport const urls = {\r\n  showTransaction: (tx) => `https://etherscan.io/tx/${tx}/`,\r\n  showAddress: (address) => `https://www.etherscan.io/address/${address}/`,\r\n  showToken: (address) => `https://www.etherscan.io/token/${address}/`,\r\n  showBlock: (block) => `https://etherscan.io/block/${block}/`,\r\n}\r\n\r\nexport const formatTime = (unix) => {\r\n  const now = dayjs()\r\n  const timestamp = dayjs.unix(unix)\r\n\r\n  const inSeconds = now.diff(timestamp, 'second')\r\n  const inMinutes = now.diff(timestamp, 'minute')\r\n  const inHours = now.diff(timestamp, 'hour')\r\n  const inDays = now.diff(timestamp, 'day')\r\n\r\n  if (inHours >= 24) {\r\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\r\n  } else if (inMinutes >= 60) {\r\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\r\n  } else if (inSeconds >= 60) {\r\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\r\n  } else {\r\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\r\n  }\r\n}\r\n\r\nexport const formatNumber = (num) => {\r\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n}\r\n\r\n// using a currency library here in case we want to add more in future\r\nexport const formatDollarAmount = (num, digits) => {\r\n  const formatter = new Intl.NumberFormat([], {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: digits,\r\n    maximumFractionDigits: digits,\r\n  })\r\n  return formatter.format(num)\r\n}\r\n\r\nexport const toSignificant = (number, significantDigits) => {\r\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\r\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\r\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\r\n}\r\n\r\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\r\n  if (isNaN(number) || number === '' || number === undefined) {\r\n    return usd ? '$0' : 0\r\n  }\r\n  let num = parseFloat(number)\r\n\r\n  if (num > 500000000) {\r\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\r\n  }\r\n\r\n  if (num === 0) {\r\n    if (usd) {\r\n      return '$0'\r\n    }\r\n    return 0\r\n  }\r\n\r\n  if (num < 0.0001 && num > 0) {\r\n    return usd ? '< $0.0001' : '< 0.0001'\r\n  }\r\n\r\n  if (num > 1000) {\r\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\r\n  }\r\n\r\n  if (usd) {\r\n    if (num < 0.1) {\r\n      return formatDollarAmount(num, 4)\r\n    } else {\r\n      return formatDollarAmount(num, 2)\r\n    }\r\n  }\r\n\r\n  return Number(parseFloat(num).toFixed(4)).toString()\r\n}\r\n\r\nexport function rawPercent(percentRaw) {\r\n  let percent = parseFloat(percentRaw * 100)\r\n  if (!percent || percent === 0) {\r\n    return '0%'\r\n  }\r\n  if (percent < 1 && percent > 0) {\r\n    return '< 1%'\r\n  }\r\n  return percent.toFixed(0) + '%'\r\n}\r\n\r\nexport function formattedPercent(percent, useBrackets = false) {\r\n  percent = parseFloat(percent)\r\n  if (!percent || percent === 0) {\r\n    return <Text fontWeight={500}>0%</Text>\r\n  }\r\n\r\n  if (percent < 0.0001 && percent > 0) {\r\n    return (\r\n      <Text fontWeight={500} color=\"green\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  if (percent < 0 && percent > -0.0001) {\r\n    return (\r\n      <Text fontWeight={500} color=\"red\">\r\n        {'< 0.0001%'}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  let fixedPercent = percent.toFixed(2)\r\n  if (fixedPercent === '0.00') {\r\n    return '0%'\r\n  }\r\n  if (fixedPercent > 0) {\r\n    if (fixedPercent > 100) {\r\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\r\n    } else {\r\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\r\n    }\r\n  } else {\r\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\r\n  }\r\n}\r\n\r\n/**\r\n * gets the amoutn difference plus the % change in change itself (second order change)\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n * @param {*} value48HoursAgo\r\n */\r\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\r\n  // get volume info for both 24 hour periods\r\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\r\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\r\n\r\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\r\n\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return [currentChange, 0]\r\n  }\r\n  return [currentChange, adjustedPercentChange]\r\n}\r\n\r\n/**\r\n * get standard percent change between two values\r\n * @param {*} valueNow\r\n * @param {*} value24HoursAgo\r\n */\r\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\r\n  const adjustedPercentChange =\r\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\r\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\r\n    return 0\r\n  }\r\n  return adjustedPercentChange\r\n}\r\n\r\nexport function isEquivalent(a, b) {\r\n  var aProps = Object.getOwnPropertyNames(a)\r\n  var bProps = Object.getOwnPropertyNames(b)\r\n  if (aProps.length !== bProps.length) {\r\n    return false\r\n  }\r\n  for (var i = 0; i < aProps.length; i++) {\r\n    var propName = aProps[i]\r\n    if (a[propName] !== b[propName]) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n","interface BasicData {\r\n  token0?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n  token1?: {\r\n    id: string\r\n    name: string\r\n    symbol: string\r\n  }\r\n}\r\n\r\n// Override data return from graph - usually because proxy token has changed\r\n// names since entitiy was created in subgraph\r\n// keys are lowercase token addresses <--------\r\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\r\n  '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2': {\r\n    name: 'Ether (Wrapped)',\r\n    symbol: 'ETH',\r\n  },\r\n  '0x1416946162b1c2c871a73b07e932d2fb6c932069': {\r\n    name: 'Energi',\r\n    symbol: 'NRGE',\r\n  },\r\n}\r\n\r\n// override tokens with incorrect symbol or names\r\nexport function updateNameData(data: BasicData): BasicData | undefined {\r\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\r\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\r\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\r\n  }\r\n\r\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\r\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\r\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\r\n  }\r\n\r\n  return data\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  PAIR_DATA,\r\n  PAIR_CHART,\r\n  FILTERED_TRANSACTIONS,\r\n  PAIRS_CURRENT,\r\n  PAIRS_BULK,\r\n  PAIRS_HISTORICAL_BULK,\r\n  HOURLY_PAIR_RATES,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  getPercentChange,\r\n  get2DayPercentChange,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  getTimestampsForChanges,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions, TRACKED_OVERRIDES_PAIRS, TRACKED_OVERRIDES_TOKENS } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\r\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport function safeAccess(object, path) {\r\n  return object\r\n    ? path.reduce(\r\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\r\n        object\r\n      )\r\n    : null\r\n}\r\n\r\nconst PairDataContext = createContext()\r\n\r\nfunction usePairDataContext() {\r\n  return useContext(PairDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [pairAddress]: {\r\n          ...state?.[pairAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_PAIRS: {\r\n      const { topPairs } = payload\r\n      let added = {}\r\n      topPairs.map((pair) => {\r\n        return (added[pair.id] = pair)\r\n      })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_PAIR_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...(safeAccess(state, [address]) || {}),\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_HOURLY_DATA: {\r\n      const { address, hourlyData, timeWindow } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          hourlyData: {\r\n            ...state?.[address]?.hourlyData,\r\n            [timeWindow]: hourlyData,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n\r\n  // update pair specific data\r\n  const update = useCallback((pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopPairs = useCallback((topPairs) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_PAIRS,\r\n      payload: {\r\n        topPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePairTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_PAIR_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\r\n    dispatch({\r\n      type: UPDATE_HOURLY_DATA,\r\n      payload: { address, hourlyData, timeWindow },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <PairDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updatePairTxns,\r\n            updateChartData,\r\n            updateTopPairs,\r\n            updateHourlyData,\r\n          },\r\n        ],\r\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\r\n      )}\r\n    >\r\n      {children}\r\n    </PairDataContext.Provider>\r\n  )\r\n}\r\n\r\nasync function getBulkPairData(pairList, ethPrice) {\r\n  const [t1, t2, tWeek] = getTimestampsForChanges()\r\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\r\n\r\n  try {\r\n    let current = await client.query({\r\n      query: PAIRS_BULK,\r\n      variables: {\r\n        allPairs: pairList,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\r\n      [b1, b2, bWeek].map(async (block) => {\r\n        let result = client.query({\r\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\r\n          fetchPolicy: 'cache-first',\r\n        })\r\n        return result\r\n      })\r\n    )\r\n\r\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let pairData = await Promise.all(\r\n      current &&\r\n        current.data.pairs.map(async (pair) => {\r\n          let data = pair\r\n          let oneDayHistory = oneDayData?.[pair.id]\r\n          if (!oneDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b1),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = newData.data.pairs[0]\r\n          }\r\n          let twoDayHistory = twoDayData?.[pair.id]\r\n          if (!twoDayHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, b2),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = newData.data.pairs[0]\r\n          }\r\n          let oneWeekHistory = oneWeekData?.[pair.id]\r\n          if (!oneWeekHistory) {\r\n            let newData = await client.query({\r\n              query: PAIR_DATA(pair.id, bWeek),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneWeekHistory = newData.data.pairs[0]\r\n          }\r\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\r\n          return data\r\n        })\r\n    )\r\n    return pairData\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\r\n  const pairAddress = data.id\r\n\r\n  // get volume changes\r\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n    data?.volumeUSD,\r\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\r\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\r\n  )\r\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\r\n    data?.untrackedVolumeUSD,\r\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\r\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\r\n  )\r\n\r\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\r\n\r\n  const oneWeekVolumeUntracked = parseFloat(\r\n    oneWeekData ? data?.untrackedVolumeUSD - oneWeekData?.untrackedVolumeUSD : data.untrackedVolumeUSD\r\n  )\r\n\r\n  // set volume properties\r\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\r\n  data.volumeChangeUSD = volumeChangeUSD\r\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\r\n  data.oneWeekVolumeUntracked = oneWeekVolumeUntracked\r\n  data.volumeChangeUntracked = volumeChangeUntracked\r\n\r\n  // set liquidity properties\r\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\r\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\r\n\r\n  // format if pair hasnt existed for a day or a week\r\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneDayData && data) {\r\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n  if (!oneWeekData && data) {\r\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\r\n  }\r\n\r\n  if (\r\n    TRACKED_OVERRIDES_PAIRS.includes(pairAddress) ||\r\n    TRACKED_OVERRIDES_TOKENS.includes(data.token0.id) ||\r\n    TRACKED_OVERRIDES_TOKENS.includes(data.token1.id)\r\n  ) {\r\n    data.oneDayVolumeUSD = oneDayVolumeUntracked\r\n    data.oneWeekVolumeUSD = oneWeekVolumeUntracked\r\n    data.volumeChangeUSD = volumeChangeUntracked\r\n    data.trackedReserveUSD = data.reserveUSD\r\n  }\r\n\r\n  // format incorrect names\r\n  updateNameData(data)\r\n\r\n  return data\r\n}\r\n\r\nconst getPairTransactions = async (pairAddress) => {\r\n  const transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: [pairAddress],\r\n      },\r\n      fetchPolicy: 'no-cache',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\nconst getPairChartData = async (pairAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\r\n  let startTime = utcStartTime.unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: PAIR_CHART,\r\n        variables: {\r\n          pairAddress: pairAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.pairDayDatas)\r\n      if (result.data.pairDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\r\n    })\r\n\r\n    if (data[0]) {\r\n      // fill in empty days\r\n      let timestamp = data[0].date ? data[0].date : startTime\r\n      let latestLiquidityUSD = data[0].reserveUSD\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dayString: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            reserveUSD: latestLiquidityUSD,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\r\n  try {\r\n    const utcEndTime = dayjs.utc()\r\n    let time = startTime\r\n\r\n    // create an array of hour start times until we reach current hour\r\n    const timestamps = []\r\n    while (time <= utcEndTime.unix() - 3600) {\r\n      timestamps.push(time)\r\n      time += 3600\r\n    }\r\n\r\n    // backout if invalid timestamp format\r\n    if (timestamps.length === 0) {\r\n      return []\r\n    }\r\n\r\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n    let blocks\r\n\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks?.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          rate0: parseFloat(result[row]?.token0Price),\r\n          rate1: parseFloat(result[row]?.token1Price),\r\n        })\r\n      }\r\n    }\r\n\r\n    let formattedHistoryRate0 = []\r\n    let formattedHistoryRate1 = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistoryRate0.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate0),\r\n        close: parseFloat(values[i + 1].rate0),\r\n      })\r\n      formattedHistoryRate1.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].rate1),\r\n        close: parseFloat(values[i + 1].rate1),\r\n      })\r\n    }\r\n\r\n    return [formattedHistoryRate0, formattedHistoryRate1]\r\n  } catch (e) {\r\n    console.log(e)\r\n    return [[], []]\r\n  }\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopPairs }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs by reserves\r\n      let {\r\n        data: { pairs },\r\n      } = await client.query({\r\n        query: PAIRS_CURRENT,\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n\r\n      // format as array of addresses\r\n      const formattedPairs = pairs.map((pair) => {\r\n        return pair.id\r\n      })\r\n\r\n      // get data for every pair in list\r\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\r\n      topPairs && updateTopPairs(topPairs)\r\n    }\r\n    ethPrice && getData()\r\n  }, [ethPrice, updateTopPairs])\r\n  return null\r\n}\r\n\r\nexport function useHourlyRateData(pairAddress, timeWindow) {\r\n  const [state, { updateHourlyData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\r\n      updateHourlyData(pairAddress, data, timeWindow)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\n/**\r\n * @todo\r\n * store these updates to reduce future redundant calls\r\n */\r\nexport function useDataForList(pairList) {\r\n  const [state] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  const [stale, setStale] = useState(false)\r\n  const [fetched, setFetched] = useState([])\r\n\r\n  // reset\r\n  useEffect(() => {\r\n    if (pairList) {\r\n      setStale(false)\r\n      setFetched()\r\n    }\r\n  }, [pairList])\r\n\r\n  useEffect(() => {\r\n    async function fetchNewPairData() {\r\n      let newFetched = []\r\n      let unfetched = []\r\n\r\n      pairList.map(async (pair) => {\r\n        let currentData = state?.[pair.id]\r\n        if (!currentData) {\r\n          unfetched.push(pair.id)\r\n        } else {\r\n          newFetched.push(currentData)\r\n        }\r\n      })\r\n\r\n      let newPairData = await getBulkPairData(\r\n        unfetched.map((pair) => {\r\n          return pair\r\n        }),\r\n        ethPrice\r\n      )\r\n      setFetched(newFetched.concat(newPairData))\r\n    }\r\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\r\n      setStale(true)\r\n      fetchNewPairData()\r\n    }\r\n  }, [ethPrice, state, pairList, stale, fetched])\r\n\r\n  let formattedFetch =\r\n    fetched &&\r\n    fetched.reduce((obj, cur) => {\r\n      return { ...obj, [cur?.id]: cur }\r\n    }, {})\r\n\r\n  return formattedFetch\r\n}\r\n\r\n/**\r\n * Get all the current and 24hr changes for a pair\r\n */\r\nexport function usePairData(pairAddress) {\r\n  const [state, { update }] = usePairDataContext()\r\n  const [ethPrice] = useEthPrice()\r\n  const pairData = state?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!pairData && pairAddress) {\r\n        let data = await getBulkPairData([pairAddress], ethPrice)\r\n        data && update(pairAddress, data[0])\r\n      }\r\n    }\r\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [pairAddress, pairData, update, ethPrice])\r\n\r\n  return pairData || {}\r\n}\r\n\r\n/**\r\n * Get most recent txns for a pair\r\n */\r\nexport function usePairTransactions(pairAddress) {\r\n  const [state, { updatePairTxns }] = usePairDataContext()\r\n  const pairTxns = state?.[pairAddress]?.txns\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!pairTxns) {\r\n        let transactions = await getPairTransactions(pairAddress)\r\n        updatePairTxns(pairAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [pairTxns, pairAddress, updatePairTxns])\r\n  return pairTxns\r\n}\r\n\r\nexport function usePairChartData(pairAddress) {\r\n  const [state, { updateChartData }] = usePairDataContext()\r\n  const chartData = state?.[pairAddress]?.chartData\r\n\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getPairChartData(pairAddress)\r\n        updateChartData(pairAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, pairAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * Get list of all pairs in Uniswap\r\n */\r\nexport function useAllPairData() {\r\n  const [state] = usePairDataContext()\r\n  return state || {}\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useTimeframe } from './Application'\r\nimport {\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  getBlocksFromTimestamps,\r\n  get2DayPercentChange,\r\n  getTimeframe,\r\n} from '../utils'\r\nimport {\r\n  GLOBAL_DATA,\r\n  GLOBAL_TXNS,\r\n  GLOBAL_CHART,\r\n  ETH_PRICE,\r\n  ALL_PAIRS,\r\n  ALL_TOKENS,\r\n  TOP_LPS_PER_PAIRS,\r\n} from '../apollo/queries'\r\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\r\nimport { useAllPairData } from './PairData'\r\nimport { useTokenChartDataCombined } from './TokenData'\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TXNS = 'UPDATE_TXNS'\r\nconst UPDATE_CHART = 'UPDATE_CHART'\r\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\r\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\r\nconst UPDATE_ALL_PAIRS_IN_UNISWAP = 'UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS'\r\nconst UPDATE_ALL_TOKENS_IN_UNISWAP = 'UPDATE_ALL_TOKENS_IN_UNISWAP'\r\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\r\n\r\nconst offsetVolumes = [\r\n  '0x9ea3b5b4ec044b70375236a281986106457b20ef',\r\n  '0x05934eba98486693aaec2d00b0e9ce918e37dc3f',\r\n  '0x3d7e683fc9c86b4d653c9e47ca12517440fad14e',\r\n  '0xfae9c647ad7d89e738aba720acf09af93dc535f7',\r\n  '0x7296368fe9bcb25d3ecc19af13655b907818cc09',\r\n]\r\n\r\n// format dayjs with the libraries that we need\r\ndayjs.extend(utc)\r\ndayjs.extend(weekOfYear)\r\n\r\nconst GlobalDataContext = createContext()\r\n\r\nfunction useGlobalDataContext() {\r\n  return useContext(GlobalDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { data } = payload\r\n      return {\r\n        ...state,\r\n        globalData: data,\r\n      }\r\n    }\r\n    case UPDATE_TXNS: {\r\n      const { transactions } = payload\r\n      return {\r\n        ...state,\r\n        transactions,\r\n      }\r\n    }\r\n    case UPDATE_CHART: {\r\n      const { daily, weekly } = payload\r\n      return {\r\n        ...state,\r\n        chartData: {\r\n          daily,\r\n          weekly,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_ETH_PRICE: {\r\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\r\n      return {\r\n        [ETH_PRICE_KEY]: ethPrice,\r\n        oneDayPrice,\r\n        ethPriceChange,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS_IN_UNISWAP: {\r\n      const { allPairs } = payload\r\n      return {\r\n        ...state,\r\n        allPairs,\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_TOKENS_IN_UNISWAP: {\r\n      const { allTokens } = payload\r\n      return {\r\n        ...state,\r\n        allTokens,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOP_LPS: {\r\n      const { topLps } = payload\r\n      return {\r\n        ...state,\r\n        topLps,\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTransactions = useCallback((transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TXNS,\r\n      payload: {\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateChart = useCallback((daily, weekly) => {\r\n    dispatch({\r\n      type: UPDATE_CHART,\r\n      payload: {\r\n        daily,\r\n        weekly,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\r\n    dispatch({\r\n      type: UPDATE_ETH_PRICE,\r\n      payload: {\r\n        ethPrice,\r\n        oneDayPrice,\r\n        ethPriceChange,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairsInUniswap = useCallback((allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS_IN_UNISWAP,\r\n      payload: {\r\n        allPairs,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllTokensInUniswap = useCallback((allTokens) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_TOKENS_IN_UNISWAP,\r\n      payload: {\r\n        allTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopLps = useCallback((topLps) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_LPS,\r\n      payload: {\r\n        topLps,\r\n      },\r\n    })\r\n  }, [])\r\n  return (\r\n    <GlobalDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTransactions,\r\n            updateChart,\r\n            updateEthPrice,\r\n            updateTopLps,\r\n            updateAllPairsInUniswap,\r\n            updateAllTokensInUniswap,\r\n          },\r\n        ],\r\n        [\r\n          state,\r\n          update,\r\n          updateTransactions,\r\n          updateTopLps,\r\n          updateChart,\r\n          updateEthPrice,\r\n          updateAllPairsInUniswap,\r\n          updateAllTokensInUniswap,\r\n        ]\r\n      )}\r\n    >\r\n      {children}\r\n    </GlobalDataContext.Provider>\r\n  )\r\n}\r\n\r\n/**\r\n * Gets all the global data for the overview page.\r\n * Needs current eth price and the old eth price to get\r\n * 24 hour USD changes.\r\n * @param {*} ethPrice\r\n * @param {*} oldEthPrice\r\n */\r\n\r\nasync function getGlobalData(ethPrice, oldEthPrice) {\r\n  // data for each day , historic data used for % changes\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // get timestamps for the days\r\n    const utcCurrentTime = dayjs()\r\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\r\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\r\n\r\n    // get the blocks needed for time travel queries\r\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\r\n      utcOneDayBack,\r\n      utcTwoDaysBack,\r\n      utcOneWeekBack,\r\n      utcTwoWeeksBack,\r\n    ])\r\n\r\n    // fetch the global data\r\n    let result = await client.query({\r\n      query: GLOBAL_DATA(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result.data.uniswapFactories[0]\r\n\r\n    // fetch the historical data\r\n    let oneDayResult = await client.query({\r\n      query: GLOBAL_DATA(oneDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.uniswapFactories[0]\r\n\r\n    let twoDayResult = await client.query({\r\n      query: GLOBAL_DATA(twoDayBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.uniswapFactories[0]\r\n\r\n    let oneWeekResult = await client.query({\r\n      query: GLOBAL_DATA(oneWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const oneWeekData = oneWeekResult.data.uniswapFactories[0]\r\n\r\n    let twoWeekResult = await client.query({\r\n      query: GLOBAL_DATA(twoWeekBlock?.number),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const twoWeekData = twoWeekResult.data.uniswapFactories[0]\r\n\r\n    if (data && oneDayData && twoDayData && twoWeekData) {\r\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneDayData.totalVolumeUSD,\r\n        twoDayData.totalVolumeUSD\r\n      )\r\n\r\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\r\n        data.totalVolumeUSD,\r\n        oneWeekData.totalVolumeUSD,\r\n        twoWeekData.totalVolumeUSD\r\n      )\r\n\r\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n        data.txCount,\r\n        oneDayData.txCount ? oneDayData.txCount : 0,\r\n        twoDayData.txCount ? twoDayData.txCount : 0\r\n      )\r\n\r\n      // format the total liquidity in USD\r\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\r\n      const liquidityChangeUSD = getPercentChange(\r\n        data.totalLiquidityETH * ethPrice,\r\n        oneDayData.totalLiquidityETH * oldEthPrice\r\n      )\r\n\r\n      // add relevant fields with the calculated amounts\r\n      data.oneDayVolumeUSD = oneDayVolumeUSD\r\n      data.oneWeekVolume = oneWeekVolume\r\n      data.weeklyVolumeChange = weeklyVolumeChange\r\n      data.volumeChangeUSD = volumeChangeUSD\r\n      data.liquidityChangeUSD = liquidityChangeUSD\r\n      data.oneDayTxns = oneDayTxns\r\n      data.txnChange = txnChange\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Get historical data for volume and liquidity used in global charts\r\n * on main page\r\n * @param {*} oldestDateToFetch // start of window to fetch from\r\n */\r\n\r\nlet checked = false\r\n\r\nconst getChartData = async (oldestDateToFetch, offsetData) => {\r\n  let data = []\r\n  let weeklyData = []\r\n  const utcEndTime = dayjs.utc()\r\n  let skip = 0\r\n  let allFound = false\r\n\r\n  try {\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: GLOBAL_CHART,\r\n        variables: {\r\n          startTime: oldestDateToFetch,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skip += 1000\r\n      data = data.concat(result.data.uniswapDayDatas)\r\n      if (result.data.uniswapDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n    }\r\n\r\n    if (data) {\r\n      let dayIndexSet = new Set()\r\n      let dayIndexArray = []\r\n      const oneDay = 24 * 60 * 60\r\n\r\n      // for each day, parse the daily volume and format for chart array\r\n      data.forEach((dayData, i) => {\r\n        // add the day index to the set of days\r\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n        dayIndexArray.push(data[i])\r\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n      })\r\n\r\n      // fill in empty days ( there will be no day datas if no trades made that day )\r\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\r\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\r\n      let latestDayDats = data[0].mostLiquidTokens\r\n      let index = 1\r\n      while (timestamp < utcEndTime.unix() - oneDay) {\r\n        const nextDay = timestamp + oneDay\r\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n\r\n        if (!dayIndexSet.has(currentDayIndex)) {\r\n          data.push({\r\n            date: nextDay,\r\n            dailyVolumeUSD: 0,\r\n            totalLiquidityUSD: latestLiquidityUSD,\r\n            mostLiquidTokens: latestDayDats,\r\n          })\r\n        } else {\r\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\r\n          index = index + 1\r\n        }\r\n        timestamp = nextDay\r\n      }\r\n    }\r\n\r\n    // format weekly data for weekly sized chunks\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n    let startIndexWeekly = -1\r\n    let currentWeek = -1\r\n\r\n    data.forEach((entry, i) => {\r\n      const date = data[i].date\r\n\r\n      // hardcoded fix for offset volume\r\n      offsetData &&\r\n        !checked &&\r\n        offsetData.map((dayData) => {\r\n          if (dayData[date]) {\r\n            data[i].dailyVolumeUSD = parseFloat(data[i].dailyVolumeUSD) - parseFloat(dayData[date].dailyVolumeUSD)\r\n          }\r\n          return true\r\n        })\r\n\r\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\r\n      if (week !== currentWeek) {\r\n        currentWeek = week\r\n        startIndexWeekly++\r\n      }\r\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\r\n      weeklyData[startIndexWeekly].date = data[i].date\r\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\r\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\r\n    })\r\n\r\n    if (!checked) {\r\n      checked = true\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return [data, weeklyData]\r\n}\r\n\r\n/**\r\n * Get and format transactions for global page\r\n */\r\nconst getGlobalTransactions = async () => {\r\n  let transactions = {}\r\n\r\n  try {\r\n    let result = await client.query({\r\n      query: GLOBAL_TXNS,\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = []\r\n    transactions.burns = []\r\n    transactions.swaps = []\r\n    result?.data?.transactions &&\r\n      result.data.transactions.map((transaction) => {\r\n        if (transaction.mints.length > 0) {\r\n          transaction.mints.map((mint) => {\r\n            return transactions.mints.push(mint)\r\n          })\r\n        }\r\n        if (transaction.burns.length > 0) {\r\n          transaction.burns.map((burn) => {\r\n            return transactions.burns.push(burn)\r\n          })\r\n        }\r\n        if (transaction.swaps.length > 0) {\r\n          transaction.swaps.map((swap) => {\r\n            return transactions.swaps.push(swap)\r\n          })\r\n        }\r\n        return true\r\n      })\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return transactions\r\n}\r\n\r\n/**\r\n * Gets the current price  of ETH, 24 hour price, and % change between them\r\n */\r\nconst getEthPrice = async () => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n\r\n  let ethPrice = 0\r\n  let ethPriceOneDay = 0\r\n  let priceChangeETH = 0\r\n\r\n  try {\r\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n    let result = await client.query({\r\n      query: ETH_PRICE(),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    let resultOneDay = await client.query({\r\n      query: ETH_PRICE(oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\r\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\r\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\r\n    ethPrice = currentPrice\r\n    ethPriceOneDay = oneDayBackPrice\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n\r\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\r\n}\r\n\r\nconst PAIRS_TO_FETCH = 500\r\nconst TOKENS_TO_FETCH = 500\r\n\r\n/**\r\n * Loop through every pair on uniswap, used for search\r\n */\r\nasync function getAllPairsOnUniswap() {\r\n  try {\r\n    let allFound = false\r\n    let pairs = []\r\n    let skipCount = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_PAIRS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      skipCount = skipCount + PAIRS_TO_FETCH\r\n      pairs = pairs.concat(result?.data?.pairs)\r\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n    }\r\n    return pairs\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Loop through every token on uniswap, used for search\r\n */\r\nasync function getAllTokensOnUniswap() {\r\n  try {\r\n    let allFound = false\r\n    let skipCount = 0\r\n    let tokens = []\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: ALL_TOKENS,\r\n        variables: {\r\n          skip: skipCount,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      tokens = tokens.concat(result?.data?.tokens)\r\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\r\n        allFound = true\r\n      }\r\n      skipCount = skipCount += TOKENS_TO_FETCH\r\n    }\r\n    return tokens\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n/**\r\n * Hook that fetches overview data, plus all tokens and pairs for search\r\n */\r\nexport function useGlobalData() {\r\n  const [state, { update, updateAllPairsInUniswap, updateAllTokensInUniswap }] = useGlobalDataContext()\r\n  const [ethPrice, oldEthPrice] = useEthPrice()\r\n\r\n  const data = state?.globalData\r\n\r\n  // const combinedVolume = useTokenDataCombined(offsetVolumes)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\r\n\r\n      globalData && update(globalData)\r\n\r\n      let allPairs = await getAllPairsOnUniswap()\r\n      updateAllPairsInUniswap(allPairs)\r\n\r\n      let allTokens = await getAllTokensOnUniswap()\r\n      updateAllTokensInUniswap(allTokens)\r\n    }\r\n    if (!data && ethPrice && oldEthPrice) {\r\n      fetchData()\r\n    }\r\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInUniswap, updateAllTokensInUniswap])\r\n\r\n  return data || {}\r\n}\r\n\r\nexport function useGlobalChartData() {\r\n  const [state, { updateChart }] = useGlobalDataContext()\r\n  const [oldestDateFetch, setOldestDateFetched] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  const chartDataDaily = state?.chartData?.daily\r\n  const chartDataWeekly = state?.chartData?.weekly\r\n\r\n  /**\r\n   * Keep track of oldest date fetched. Used to\r\n   * limit data fetched until its actually needed.\r\n   * (dont fetch year long stuff unless year option selected)\r\n   */\r\n  useEffect(() => {\r\n    // based on window, get starttime\r\n    let startTime = getTimeframe(activeWindow)\r\n\r\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\r\n      setOldestDateFetched(startTime)\r\n    }\r\n  }, [activeWindow, oldestDateFetch])\r\n\r\n  // fix for rebass tokens\r\n\r\n  const combinedData = useTokenChartDataCombined(offsetVolumes)\r\n\r\n  /**\r\n   * Fetch data if none fetched or older data is needed\r\n   */\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // historical stuff for chart\r\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch, combinedData)\r\n      updateChart(newChartData, newWeeklyData)\r\n    }\r\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly) && combinedData) {\r\n      fetchData()\r\n    }\r\n  }, [chartDataDaily, chartDataWeekly, combinedData, oldestDateFetch, updateChart])\r\n\r\n  return [chartDataDaily, chartDataWeekly]\r\n}\r\n\r\nexport function useGlobalTransactions() {\r\n  const [state, { updateTransactions }] = useGlobalDataContext()\r\n  const transactions = state?.transactions\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (!transactions) {\r\n        let txns = await getGlobalTransactions()\r\n        updateTransactions(txns)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [updateTransactions, transactions])\r\n  return transactions\r\n}\r\n\r\nexport function useEthPrice() {\r\n  const [state, { updateEthPrice }] = useGlobalDataContext()\r\n  const ethPrice = state?.[ETH_PRICE_KEY]\r\n  const ethPriceOld = state?.['oneDayPrice']\r\n  useEffect(() => {\r\n    async function checkForEthPrice() {\r\n      if (!ethPrice) {\r\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\r\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\r\n      }\r\n    }\r\n    checkForEthPrice()\r\n  }, [ethPrice, updateEthPrice])\r\n\r\n  return [ethPrice, ethPriceOld]\r\n}\r\n\r\nexport function useAllPairsInUniswap() {\r\n  const [state] = useGlobalDataContext()\r\n  let allPairs = state?.allPairs\r\n\r\n  return allPairs || []\r\n}\r\n\r\nexport function useAllTokensInUniswap() {\r\n  const [state] = useGlobalDataContext()\r\n  let allTokens = state?.allTokens\r\n\r\n  return allTokens || []\r\n}\r\n\r\n/**\r\n * Get the top liquidity positions based on USD size\r\n * @TODO Not a perfect lookup needs improvement\r\n */\r\nexport function useTopLps() {\r\n  const [state, { updateTopLps }] = useGlobalDataContext()\r\n  let topLps = state?.topLps\r\n\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // get top 20 by reserves\r\n      let topPairs = Object.keys(allPairs)\r\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\r\n        ?.slice(0, 99)\r\n        .map((pair) => pair)\r\n\r\n      let topLpLists = await Promise.all(\r\n        topPairs.map(async (pair) => {\r\n          // for each one, fetch top LPs\r\n          try {\r\n            const { data: results } = await client.query({\r\n              query: TOP_LPS_PER_PAIRS,\r\n              variables: {\r\n                pair: pair.toString(),\r\n              },\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            if (results) {\r\n              return results.liquidityPositions\r\n            }\r\n          } catch (e) {}\r\n        })\r\n      )\r\n\r\n      // get the top lps from the results formatted\r\n      const topLps = []\r\n      topLpLists\r\n        .filter((i) => !!i) // check for ones not fetched correctly\r\n        .map((list) => {\r\n          return list.map((entry) => {\r\n            const pairData = allPairs[entry.pair.id]\r\n            return topLps.push({\r\n              user: entry.user,\r\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\r\n              pairAddress: entry.pair.id,\r\n              token0: pairData.token0.id,\r\n              token1: pairData.token1.id,\r\n              usd:\r\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\r\n                parseFloat(pairData.reserveUSD),\r\n            })\r\n          })\r\n        })\r\n\r\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\r\n      const shorter = sorted.splice(0, 100)\r\n      updateTopLps(shorter)\r\n    }\r\n\r\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return topLps\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\r\n\r\nimport { client } from '../apollo/client'\r\nimport {\r\n  TOKEN_DATA,\r\n  FILTERED_TRANSACTIONS,\r\n  TOKEN_CHART,\r\n  TOKEN_TOP_DAY_DATAS,\r\n  PRICES_BY_BLOCK,\r\n  PAIR_DATA,\r\n  TOKENS_HISTORICAL_BULK,\r\n} from '../apollo/queries'\r\n\r\nimport { useEthPrice } from './GlobalData'\r\n\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport {\r\n  get2DayPercentChange,\r\n  getPercentChange,\r\n  getBlockFromTimestamp,\r\n  isAddress,\r\n  getBlocksFromTimestamps,\r\n  splitQuery,\r\n} from '../utils'\r\nimport { timeframeOptions } from '../constants'\r\nimport { useLatestBlocks } from './Application'\r\nimport { updateNameData } from '../utils/data'\r\n\r\nconst UPDATE = 'UPDATE'\r\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\r\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\r\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\r\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\r\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\r\nconst UPDATE_COMBINED = 'UPDATE_COMBINED'\r\n\r\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst TokenDataContext = createContext()\r\n\r\nexport function useTokenDataContext() {\r\n  return useContext(TokenDataContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE: {\r\n      const { tokenAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [tokenAddress]: {\r\n          ...state?.[tokenAddress],\r\n          ...data,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_TOP_TOKENS: {\r\n      const { topTokens } = payload\r\n      let added = {}\r\n      topTokens &&\r\n        topTokens.map((token) => {\r\n          return (added[token.id] = token)\r\n        })\r\n      return {\r\n        ...state,\r\n        ...added,\r\n      }\r\n    }\r\n\r\n    case UPDATE_COMBINED: {\r\n      const { combinedVol } = payload\r\n      return {\r\n        ...state,\r\n        combinedVol,\r\n      }\r\n    }\r\n\r\n    case UPDATE_TOKEN_TXNS: {\r\n      const { address, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          txns: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_CHART_DATA: {\r\n      const { address, chartData } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          chartData,\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_PRICE_DATA: {\r\n      const { address, data, timeWindow, interval } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [timeWindow]: {\r\n            ...state?.[address]?.[timeWindow],\r\n            [interval]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    case UPDATE_ALL_PAIRS: {\r\n      const { address, allPairs } = payload\r\n      return {\r\n        ...state,\r\n        [address]: {\r\n          ...state?.[address],\r\n          [TOKEN_PAIRS_KEY]: allPairs,\r\n        },\r\n      }\r\n    }\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, {})\r\n  const update = useCallback((tokenAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      payload: {\r\n        tokenAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTopTokens = useCallback((topTokens) => {\r\n    dispatch({\r\n      type: UPDATE_TOP_TOKENS,\r\n      payload: {\r\n        topTokens,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateCombinedVolume = useCallback((combinedVol) => {\r\n    dispatch({\r\n      type: UPDATE_COMBINED,\r\n      payload: {\r\n        combinedVol,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateTokenTxns = useCallback((address, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TOKEN_TXNS,\r\n      payload: { address, transactions },\r\n    })\r\n  }, [])\r\n\r\n  const updateChartData = useCallback((address, chartData) => {\r\n    dispatch({\r\n      type: UPDATE_CHART_DATA,\r\n      payload: { address, chartData },\r\n    })\r\n  }, [])\r\n\r\n  const updateAllPairs = useCallback((address, allPairs) => {\r\n    dispatch({\r\n      type: UPDATE_ALL_PAIRS,\r\n      payload: { address, allPairs },\r\n    })\r\n  }, [])\r\n\r\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\r\n    dispatch({\r\n      type: UPDATE_PRICE_DATA,\r\n      payload: { address, data, timeWindow, interval },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <TokenDataContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          {\r\n            update,\r\n            updateTokenTxns,\r\n            updateChartData,\r\n            updateTopTokens,\r\n            updateAllPairs,\r\n            updatePriceData,\r\n            updateCombinedVolume,\r\n          },\r\n        ],\r\n        [\r\n          state,\r\n          update,\r\n          updateTokenTxns,\r\n          updateCombinedVolume,\r\n          updateChartData,\r\n          updateTopTokens,\r\n          updateAllPairs,\r\n          updatePriceData,\r\n        ]\r\n      )}\r\n    >\r\n      {children}\r\n    </TokenDataContext.Provider>\r\n  )\r\n}\r\n\r\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  try {\r\n    // need to get the top tokens by liquidity by need token day datas\r\n    const currentDate = parseInt(Date.now() / 86400 / 1000) * 86400 - 86400\r\n\r\n    let tokenids = await client.query({\r\n      query: TOKEN_TOP_DAY_DATAS,\r\n      fetchPolicy: 'network-only',\r\n      variables: { date: currentDate },\r\n    })\r\n\r\n    const ids = tokenids?.data?.tokenDayDatas?.reduce((accum, entry) => {\r\n      accum.push(entry.id.slice(0, 42))\r\n      return accum\r\n    }, [])\r\n\r\n    let current = await client.query({\r\n      query: TOKENS_HISTORICAL_BULK(ids),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayResult = await client.query({\r\n      query: TOKENS_HISTORICAL_BULK(ids, oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let twoDayResult = await client.query({\r\n      query: TOKENS_HISTORICAL_BULK(ids, twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n\r\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\r\n      return { ...obj, [cur.id]: cur }\r\n    }, {})\r\n\r\n    let bulkResults = await Promise.all(\r\n      current &&\r\n        oneDayData &&\r\n        twoDayData &&\r\n        current?.data?.tokens.map(async (token) => {\r\n          let data = token\r\n\r\n          // let liquidityDataThisToken = liquidityData?.[token.id]\r\n          let oneDayHistory = oneDayData?.[token.id]\r\n          let twoDayHistory = twoDayData?.[token.id]\r\n\r\n          // catch the case where token wasnt in top list in previous days\r\n          if (!oneDayHistory) {\r\n            let oneDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, oneDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            oneDayHistory = oneDayResult.data.tokens[0]\r\n          }\r\n          if (!twoDayHistory) {\r\n            let twoDayResult = await client.query({\r\n              query: TOKEN_DATA(token.id, twoDayBlock),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            twoDayHistory = twoDayResult.data.tokens[0]\r\n          }\r\n\r\n          // calculate percentage changes and daily changes\r\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n            data.tradeVolumeUSD,\r\n            oneDayHistory?.tradeVolumeUSD ?? 0,\r\n            twoDayHistory?.tradeVolumeUSD ?? 0\r\n          )\r\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n            data.txCount,\r\n            oneDayHistory?.txCount ?? 0,\r\n            twoDayHistory?.txCount ?? 0\r\n          )\r\n\r\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\r\n\r\n          // percent changes\r\n          const priceChangeUSD = getPercentChange(\r\n            data?.derivedETH * ethPrice,\r\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\r\n          )\r\n\r\n          // set data\r\n          data.priceUSD = data?.derivedETH * ethPrice\r\n          data.totalLiquidityUSD = currentLiquidityUSD\r\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\r\n          data.volumeChangeUSD = volumeChangeUSD\r\n          data.priceChangeUSD = priceChangeUSD\r\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n          data.oneDayTxns = oneDayTxns\r\n          data.txnChange = txnChange\r\n\r\n          // new tokens\r\n          if (!oneDayHistory && data) {\r\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n            data.oneDayTxns = data.txCount\r\n          }\r\n\r\n          // update name data for\r\n          updateNameData({\r\n            token0: data,\r\n          })\r\n\r\n          // HOTFIX for Aave\r\n          if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\r\n            const aaveData = await client.query({\r\n              query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\r\n              fetchPolicy: 'cache-first',\r\n            })\r\n            const result = aaveData.data.pairs[0]\r\n            data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\r\n            data.liquidityChangeUSD = 0\r\n            data.priceChangeUSD = 0\r\n          }\r\n\r\n          // used for custom adjustments\r\n          data.oneDayData = oneDayHistory\r\n          data.twoDayData = twoDayHistory\r\n\r\n          return data\r\n        })\r\n    )\r\n\r\n    return bulkResults\r\n\r\n    // calculate percentage changes and daily changes\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\r\n  const utcCurrentTime = dayjs()\r\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\r\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\r\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\r\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\r\n\r\n  // initialize data arrays\r\n  let data = {}\r\n  let oneDayData = {}\r\n  let twoDayData = {}\r\n\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(address),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    data = result?.data?.tokens?.[0]\r\n\r\n    // get results from 24 hours in past\r\n    let oneDayResult = await client.query({\r\n      query: TOKEN_DATA(address, oneDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    oneDayData = oneDayResult.data.tokens[0]\r\n\r\n    // get results from 48 hours in past\r\n    let twoDayResult = await client.query({\r\n      query: TOKEN_DATA(address, twoDayBlock),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    twoDayData = twoDayResult.data.tokens[0]\r\n\r\n    // catch the case where token wasnt in top list in previous days\r\n    if (!oneDayData) {\r\n      let oneDayResult = await client.query({\r\n        query: TOKEN_DATA(address, oneDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      oneDayData = oneDayResult.data.tokens[0]\r\n    }\r\n    if (!twoDayData) {\r\n      let twoDayResult = await client.query({\r\n        query: TOKEN_DATA(address, twoDayBlock),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      twoDayData = twoDayResult.data.tokens[0]\r\n    }\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\r\n      data.tradeVolumeUSD,\r\n      oneDayData?.tradeVolumeUSD ?? 0,\r\n      twoDayData?.tradeVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\r\n      data.untrackedVolumeUSD,\r\n      oneDayData?.untrackedVolumeUSD ?? 0,\r\n      twoDayData?.untrackedVolumeUSD ?? 0\r\n    )\r\n\r\n    // calculate percentage changes and daily changes\r\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\r\n      data.txCount,\r\n      oneDayData?.txCount ?? 0,\r\n      twoDayData?.txCount ?? 0\r\n    )\r\n\r\n    const priceChangeUSD = getPercentChange(\r\n      data?.derivedETH * ethPrice,\r\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\r\n    )\r\n\r\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\r\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\r\n\r\n    // set data\r\n    data.priceUSD = data?.derivedETH * ethPrice\r\n    data.totalLiquidityUSD = currentLiquidityUSD\r\n    data.oneDayVolumeUSD = oneDayVolumeUSD\r\n    data.volumeChangeUSD = volumeChangeUSD\r\n    data.priceChangeUSD = priceChangeUSD\r\n    data.oneDayVolumeUT = oneDayVolumeUT\r\n    data.volumeChangeUT = volumeChangeUT\r\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\r\n    data.liquidityChangeUSD = liquidityChangeUSD\r\n    data.oneDayTxns = oneDayTxns\r\n    data.txnChange = txnChange\r\n\r\n    // used for custom adjustments\r\n    data.oneDayData = oneDayData?.[address]\r\n    data.twoDayData = twoDayData?.[address]\r\n\r\n    // new tokens\r\n    if (!oneDayData && data) {\r\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\r\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\r\n      data.oneDayTxns = data.txCount\r\n    }\r\n\r\n    // update name data for\r\n    updateNameData({\r\n      token0: data,\r\n    })\r\n\r\n    // HOTFIX for Aave\r\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\r\n      const aaveData = await client.query({\r\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      const result = aaveData.data.pairs[0]\r\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\r\n      data.liquidityChangeUSD = 0\r\n      data.priceChangeUSD = 0\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nconst getTokenTransactions = async (allPairsFormatted) => {\r\n  const transactions = {}\r\n  try {\r\n    let result = await client.query({\r\n      query: FILTERED_TRANSACTIONS,\r\n      variables: {\r\n        allPairs: allPairsFormatted,\r\n      },\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    transactions.mints = result.data.mints\r\n    transactions.burns = result.data.burns\r\n    transactions.swaps = result.data.swaps\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return transactions\r\n}\r\n\r\nconst getTokenPairs = async (tokenAddress) => {\r\n  try {\r\n    // fetch all current and historical data\r\n    let result = await client.query({\r\n      query: TOKEN_DATA(tokenAddress),\r\n      fetchPolicy: 'cache-first',\r\n    })\r\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\r\n  const utcEndTime = dayjs.utc()\r\n  let time = startTime\r\n\r\n  // create an array of hour start times until we reach current hour\r\n  // buffer by half hour to catch case where graph isnt synced to latest block\r\n  const timestamps = []\r\n  while (time < utcEndTime.unix()) {\r\n    timestamps.push(time)\r\n    time += interval\r\n  }\r\n\r\n  // backout if invalid timestamp format\r\n  if (timestamps.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\r\n  let blocks\r\n  try {\r\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\r\n\r\n    // catch failing case\r\n    if (!blocks || blocks.length === 0) {\r\n      return []\r\n    }\r\n\r\n    if (latestBlock) {\r\n      blocks = blocks.filter((b) => {\r\n        return parseFloat(b.number) <= parseFloat(latestBlock)\r\n      })\r\n    }\r\n\r\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\r\n\r\n    // format token ETH price results\r\n    let values = []\r\n    for (var row in result) {\r\n      let timestamp = row.split('t')[1]\r\n      let derivedETH = parseFloat(result[row]?.derivedETH)\r\n      if (timestamp) {\r\n        values.push({\r\n          timestamp,\r\n          derivedETH,\r\n        })\r\n      }\r\n    }\r\n\r\n    // go through eth usd prices and assign to original values array\r\n    let index = 0\r\n    for (var brow in result) {\r\n      let timestamp = brow.split('b')[1]\r\n      if (timestamp) {\r\n        values[index].priceUSD = result[brow].ethPrice * values[index].derivedETH\r\n        index += 1\r\n      }\r\n    }\r\n\r\n    let formattedHistory = []\r\n\r\n    // for each hour, construct the open and close price\r\n    for (let i = 0; i < values.length - 1; i++) {\r\n      formattedHistory.push({\r\n        timestamp: values[i].timestamp,\r\n        open: parseFloat(values[i].priceUSD),\r\n        close: parseFloat(values[i + 1].priceUSD),\r\n      })\r\n    }\r\n\r\n    return formattedHistory\r\n  } catch (e) {\r\n    console.log(e)\r\n    console.log('error fetching blocks')\r\n    return []\r\n  }\r\n}\r\n\r\nconst getTokenChartData = async (tokenAddress) => {\r\n  let data = []\r\n  const utcEndTime = dayjs.utc()\r\n  let utcStartTime = utcEndTime.subtract(1, 'year')\r\n  let startTime = utcStartTime.startOf('minute').unix() - 1\r\n\r\n  try {\r\n    let allFound = false\r\n    let skip = 0\r\n    while (!allFound) {\r\n      let result = await client.query({\r\n        query: TOKEN_CHART,\r\n        variables: {\r\n          tokenAddr: tokenAddress,\r\n          skip,\r\n        },\r\n        fetchPolicy: 'cache-first',\r\n      })\r\n      if (result.data.tokenDayDatas.length < 1000) {\r\n        allFound = true\r\n      }\r\n      skip += 1000\r\n      data = data.concat(result.data.tokenDayDatas)\r\n    }\r\n\r\n    let dayIndexSet = new Set()\r\n    let dayIndexArray = []\r\n    const oneDay = 24 * 60 * 60\r\n    data.forEach((dayData, i) => {\r\n      // add the day index to the set of days\r\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\r\n      dayIndexArray.push(data[i])\r\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\r\n    })\r\n\r\n    // fill in empty days\r\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\r\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\r\n    let latestPriceUSD = data[0] && data[0].priceUSD\r\n    let latestPairDatas = data[0] && data[0].mostLiquidPairs\r\n    let index = 1\r\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\r\n      const nextDay = timestamp + oneDay\r\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\r\n      if (!dayIndexSet.has(currentDayIndex)) {\r\n        data.push({\r\n          date: nextDay,\r\n          dayString: nextDay,\r\n          dailyVolumeUSD: 0,\r\n          priceUSD: latestPriceUSD,\r\n          totalLiquidityUSD: latestLiquidityUSD,\r\n          mostLiquidPairs: latestPairDatas,\r\n        })\r\n      } else {\r\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\r\n        latestPriceUSD = dayIndexArray[index].priceUSD\r\n        latestPairDatas = dayIndexArray[index].mostLiquidPairs\r\n        index = index + 1\r\n      }\r\n      timestamp = nextDay\r\n    }\r\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n  return data\r\n}\r\n\r\nexport function Updater() {\r\n  const [, { updateTopTokens }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  useEffect(() => {\r\n    async function getData() {\r\n      // get top pairs for overview list\r\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\r\n      topTokens && updateTopTokens(topTokens)\r\n    }\r\n    ethPrice && ethPriceOld && getData()\r\n  }, [ethPrice, ethPriceOld, updateTopTokens])\r\n  return null\r\n}\r\n\r\nexport function useTokenData(tokenAddress) {\r\n  const [state, { update }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n  const tokenData = state?.[tokenAddress]\r\n\r\n  useEffect(() => {\r\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\r\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\r\n        update(tokenAddress, data)\r\n      })\r\n    }\r\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\r\n\r\n  return tokenData || {}\r\n}\r\n\r\nexport function useTokenTransactions(tokenAddress) {\r\n  const [state, { updateTokenTxns }] = useTokenDataContext()\r\n  const tokenTxns = state?.[tokenAddress]?.txns\r\n\r\n  const allPairsFormatted =\r\n    state[tokenAddress] &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\r\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\r\n      return pair.id\r\n    })\r\n\r\n  useEffect(() => {\r\n    async function checkForTxns() {\r\n      if (!tokenTxns && allPairsFormatted) {\r\n        let transactions = await getTokenTransactions(allPairsFormatted)\r\n        updateTokenTxns(tokenAddress, transactions)\r\n      }\r\n    }\r\n    checkForTxns()\r\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\r\n\r\n  return tokenTxns || []\r\n}\r\n\r\nexport function useTokenPairs(tokenAddress) {\r\n  const [state, { updateAllPairs }] = useTokenDataContext()\r\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let allPairs = await getTokenPairs(tokenAddress)\r\n      updateAllPairs(tokenAddress, allPairs)\r\n    }\r\n    if (!tokenPairs && isAddress(tokenAddress)) {\r\n      fetchData()\r\n    }\r\n  }, [tokenAddress, tokenPairs, updateAllPairs])\r\n\r\n  return tokenPairs || []\r\n}\r\n\r\nexport function useTokenDataCombined(tokenAddresses) {\r\n  const [state, { updateCombinedVolume }] = useTokenDataContext()\r\n  const [ethPrice, ethPriceOld] = useEthPrice()\r\n\r\n  const volume = state?.combinedVol\r\n\r\n  useEffect(() => {\r\n    async function fetchDatas() {\r\n      Promise.all(\r\n        tokenAddresses.map(async (address) => {\r\n          return await getTokenData(address, ethPrice, ethPriceOld)\r\n        })\r\n      )\r\n        .then((res) => {\r\n          if (res) {\r\n            const newVolume = res\r\n              ? res?.reduce(function (acc, entry) {\r\n                  acc = acc + parseFloat(entry.oneDayVolumeUSD)\r\n                  return acc\r\n                }, 0)\r\n              : 0\r\n            updateCombinedVolume(newVolume)\r\n          }\r\n        })\r\n        .catch(() => {\r\n          console.log('error fetching combined data')\r\n        })\r\n    }\r\n    if (!volume && ethPrice && ethPriceOld) {\r\n      fetchDatas()\r\n    }\r\n  }, [tokenAddresses, ethPrice, ethPriceOld, volume, updateCombinedVolume])\r\n\r\n  return volume\r\n}\r\n\r\nexport function useTokenChartDataCombined(tokenAddresses) {\r\n  const [state, { updateChartData }] = useTokenDataContext()\r\n\r\n  const datas = useMemo(() => {\r\n    return (\r\n      tokenAddresses &&\r\n      tokenAddresses.reduce(function (acc, address) {\r\n        acc[address] = state?.[address]?.chartData\r\n        return acc\r\n      }, {})\r\n    )\r\n  }, [state, tokenAddresses])\r\n\r\n  const isMissingData = useMemo(() => Object.values(datas).filter((val) => !val).length > 0, [datas])\r\n\r\n  const formattedByDate = useMemo(() => {\r\n    return (\r\n      datas &&\r\n      !isMissingData &&\r\n      Object.keys(datas).map(function (address) {\r\n        const dayDatas = datas[address]\r\n        return dayDatas?.reduce(function (acc, dayData) {\r\n          acc[dayData.date] = dayData\r\n          return acc\r\n        }, {})\r\n      }, {})\r\n    )\r\n  }, [datas, isMissingData])\r\n\r\n  useEffect(() => {\r\n    async function fetchDatas() {\r\n      Promise.all(\r\n        tokenAddresses.map(async (address) => {\r\n          return await getTokenChartData(address)\r\n        })\r\n      )\r\n        .then((res) => {\r\n          res &&\r\n            res.map((result, i) => {\r\n              const tokenAddress = tokenAddresses[i]\r\n              updateChartData(tokenAddress, result)\r\n              return true\r\n            })\r\n        })\r\n        .catch(() => {\r\n          console.log('error fetching combined data')\r\n        })\r\n    }\r\n    if (isMissingData) {\r\n      fetchDatas()\r\n    }\r\n  }, [isMissingData, tokenAddresses, updateChartData])\r\n\r\n  return formattedByDate\r\n}\r\n\r\nexport function useTokenChartData(tokenAddress) {\r\n  const [state, { updateChartData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.chartData\r\n  useEffect(() => {\r\n    async function checkForChartData() {\r\n      if (!chartData) {\r\n        let data = await getTokenChartData(tokenAddress)\r\n        updateChartData(tokenAddress, data)\r\n      }\r\n    }\r\n    checkForChartData()\r\n  }, [chartData, tokenAddress, updateChartData])\r\n  return chartData\r\n}\r\n\r\n/**\r\n * get candlestick data for a token - saves in context based on the window and the\r\n * interval size\r\n * @param {*} tokenAddress\r\n * @param {*} timeWindow // a preset time window from constant - how far back to look\r\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\r\n */\r\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\r\n  const [state, { updatePriceData }] = useTokenDataContext()\r\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\r\n  const [latestBlock] = useLatestBlocks()\r\n\r\n  useEffect(() => {\r\n    const currentTime = dayjs.utc()\r\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\r\n    const startTime =\r\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\r\n\r\n    async function fetch() {\r\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\r\n      updatePriceData(tokenAddress, data, timeWindow, interval)\r\n    }\r\n    if (!chartData) {\r\n      fetch()\r\n    }\r\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\r\n\r\n  return chartData\r\n}\r\n\r\nexport function useAllTokenData() {\r\n  const [state] = useTokenDataContext()\r\n\r\n  // filter out for only addresses\r\n  return Object.keys(state)\r\n    .filter((key) => key !== 'combinedVol')\r\n    .reduce((res, key) => {\r\n      res[key] = state[key]\r\n      return res\r\n    }, {})\r\n}\r\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\r\nimport { client } from '../apollo/client'\r\nimport dayjs from 'dayjs'\r\nimport { getShareValueOverTime } from '.'\r\n\r\nexport const priceOverrides = [\r\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\r\n  '0x6b175474e89094c44da98b954eedeac495271d0f', // DAI\r\n]\r\n\r\ninterface ReturnMetrics {\r\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\r\n  netReturn: number // net return from t0 -> t1\r\n  uniswapReturn: number // netReturn - hodlReturn\r\n  impLoss: number\r\n  fees: number\r\n}\r\n\r\n// used to calculate returns within a given window bounded by two positions\r\ninterface Position {\r\n  pair: any\r\n  liquidityTokenBalance: number\r\n  liquidityTokenTotalSupply: number\r\n  reserve0: number\r\n  reserve1: number\r\n  reserveUSD: number\r\n  token0PriceUSD: number\r\n  token1PriceUSD: number\r\n}\r\n\r\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1589747086\r\n\r\nfunction formatPricesForEarlyTimestamps(position): Position {\r\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\r\n      position.token0PriceUSD = 1\r\n    }\r\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\r\n      position.token1PriceUSD = 1\r\n    }\r\n    // WETH price\r\n    if (position.pair?.token0.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token0PriceUSD = 203\r\n    }\r\n    if (position.pair?.token1.id === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n      position.token1PriceUSD = 203\r\n    }\r\n  }\r\n  return position\r\n}\r\n\r\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\r\n  let usd = 0\r\n  let amount0 = 0\r\n  let amount1 = 0\r\n  // get all minst and burns to get principal amounts\r\n  const results = await client.query({\r\n    query: USER_MINTS_BUNRS_PER_PAIR,\r\n    variables: {\r\n      user,\r\n      pair: pairAddress,\r\n    },\r\n  })\r\n  for (const index in results.data.mints) {\r\n    const mint = results.data.mints[index]\r\n    const mintToken0 = mint.pair.token0.id\r\n    const mintToken1 = mint.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount0) * 2\r\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(mint.amount1) * 2\r\n    } else {\r\n      usd += parseFloat(mint.amountUSD)\r\n    }\r\n    amount0 += parseFloat(mint.amount0)\r\n    amount1 += parseFloat(mint.amount1)\r\n  }\r\n\r\n  for (const index in results.data.burns) {\r\n    const burn = results.data.burns[index]\r\n    const burnToken0 = burn.pair.token0.id\r\n    const burnToken1 = burn.pair.token1.id\r\n\r\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\r\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount0) * 2\r\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\r\n      usd += parseFloat(burn.amount1) * 2\r\n    } else {\r\n      usd -= parseFloat(burn.amountUSD)\r\n    }\r\n\r\n    amount0 -= parseFloat(burn.amount0)\r\n    amount1 -= parseFloat(burn.amount1)\r\n  }\r\n\r\n  return { usd, amount0, amount1 }\r\n}\r\n\r\n/**\r\n * Core algorithm for calculating retursn within one time window.\r\n * @param positionT0 // users liquidity info and token rates at beginning of window\r\n * @param positionT1 // '' at the end of the window\r\n */\r\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\r\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\r\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\r\n\r\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\r\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\r\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\r\n\r\n  // get starting amounts of token0 and token1 deposited by LP\r\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\r\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\r\n\r\n  // get current token values\r\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\r\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\r\n\r\n  // calculate squares to find imp loss and fee differences\r\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\r\n  // eslint-disable-next-line eqeqeq\r\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\r\n\r\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\r\n  const token1_amount_no_fees =\r\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\r\n  const no_fees_usd =\r\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\r\n\r\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\r\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\r\n  const difference_fees_usd =\r\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\r\n\r\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\r\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\r\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\r\n\r\n  const imp_loss_usd = no_fees_usd - assetValueT1\r\n  const uniswap_return = difference_fees_usd + imp_loss_usd\r\n\r\n  // get net value change for combined data\r\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\r\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\r\n\r\n  return {\r\n    hodleReturn: assetValueT1 - assetValueT0,\r\n    netReturn: netValueT1 - netValueT0,\r\n    uniswapReturn: uniswap_return,\r\n    impLoss: imp_loss_usd,\r\n    fees: difference_fees_usd,\r\n  }\r\n}\r\n\r\n/**\r\n * formats data for historical chart for an LPs position in 1 pair over time\r\n * @param startDateTimestamp // day to start tracking at\r\n * @param currentPairData // current stat of the pair\r\n * @param pairSnapshots // history of entries and exits for lp on this pair\r\n * @param currentETHPrice // current price of eth used for usd conversions\r\n */\r\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentETHPrice) {\r\n  // catch case where data not puplated yet\r\n  if (!currentPairData.createdAtTimestamp) {\r\n    return []\r\n  }\r\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\r\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\r\n  const sortedPositions = pairSnapshots.sort((a, b) => {\r\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n  })\r\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\r\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\r\n  }\r\n\r\n  const dayTimestamps = []\r\n  while (dayIndex < currentDayIndex) {\r\n    // only account for days where this pair existed\r\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\r\n      dayTimestamps.push(dayIndex * 86400)\r\n    }\r\n    dayIndex = dayIndex + 1\r\n  }\r\n\r\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\r\n  const shareValuesFormatted = {}\r\n  shareValues.map((share) => {\r\n    return (shareValuesFormatted[share.timestamp] = share)\r\n  })\r\n\r\n  // set the default position and data\r\n  let positionT0 = pairSnapshots[0]\r\n  const formattedHistory = []\r\n  let netFees = 0\r\n\r\n  // keep track of up to date metrics as we parse each day\r\n  for (const index in dayTimestamps) {\r\n    // get the bounds on the day\r\n    const dayTimestamp = dayTimestamps[index]\r\n    const timestampCeiling = dayTimestamp + 86400\r\n\r\n    // for each change in position value that day, create a window and update\r\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\r\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n    })\r\n    for (let i = 0; i < dailyChanges.length; i++) {\r\n      const positionT1 = dailyChanges[i]\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      netFees = netFees + localReturns.fees\r\n      positionT0 = positionT1\r\n    }\r\n\r\n    // now treat the end of the day as a hypothetical position\r\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\r\n    if (!positionT1) {\r\n      positionT1 = {\r\n        pair: currentPairData.id,\r\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\r\n        totalSupply: currentPairData.totalSupply,\r\n        reserve0: currentPairData.reserve0,\r\n        reserve1: currentPairData.reserve1,\r\n        reserveUSD: currentPairData.reserveUSD,\r\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\r\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\r\n      }\r\n    }\r\n\r\n    if (positionT1) {\r\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\r\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\r\n      const currentLiquidityValue =\r\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\r\n        parseFloat(positionT1.reserveUSD)\r\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\r\n      const localFees = netFees + localReturns.fees\r\n\r\n      formattedHistory.push({\r\n        date: dayTimestamp,\r\n        usdValue: currentLiquidityValue,\r\n        fees: localFees,\r\n      })\r\n    }\r\n  }\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For a given pair and user, get the return metrics\r\n * @param user\r\n * @param pair\r\n * @param ethPrice\r\n */\r\nexport async function getLPReturnsOnPair(user: string, pair, ethPrice: number, snapshots) {\r\n  // initialize values\r\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\r\n  let hodlReturn = 0\r\n  let netReturn = 0\r\n  let uniswapReturn = 0\r\n  let fees = 0\r\n\r\n  snapshots = snapshots.filter((entry) => {\r\n    return entry.pair.id === pair.id\r\n  })\r\n\r\n  // get data about the current position\r\n  const currentPosition: Position = {\r\n    pair,\r\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\r\n    liquidityTokenTotalSupply: pair.totalSupply,\r\n    reserve0: pair.reserve0,\r\n    reserve1: pair.reserve1,\r\n    reserveUSD: pair.reserveUSD,\r\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\r\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\r\n  }\r\n\r\n  for (const index in snapshots) {\r\n    // get positions at both bounds of the window\r\n    const positionT0 = snapshots[index]\r\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\r\n\r\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\r\n    hodlReturn = hodlReturn + results.hodleReturn\r\n    netReturn = netReturn + results.netReturn\r\n    uniswapReturn = uniswapReturn + results.uniswapReturn\r\n    fees = fees + results.fees\r\n  }\r\n\r\n  return {\r\n    principal,\r\n    net: {\r\n      return: netReturn,\r\n    },\r\n    uniswap: {\r\n      return: uniswapReturn,\r\n    },\r\n    fees: {\r\n      sum: fees,\r\n    },\r\n  }\r\n}\r\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\r\nimport { useAllPairData, usePairData } from './PairData'\r\nimport { client, stakingClient } from '../apollo/client'\r\nimport {\r\n  USER_TRANSACTIONS,\r\n  USER_POSITIONS,\r\n  USER_HISTORY,\r\n  PAIR_DAY_DATA_BULK,\r\n  MINING_POSITIONS,\r\n} from '../apollo/queries'\r\nimport { useTimeframe, useStartTimestamp } from './Application'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { useEthPrice } from './GlobalData'\r\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\r\nimport { timeframeOptions } from '../constants'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\r\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\r\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\r\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\r\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\r\n\r\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\r\nconst POSITIONS_KEY = 'POSITIONS_KEY'\r\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\r\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\r\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\r\n\r\nconst UserContext = createContext()\r\n\r\nfunction useUserContext() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nfunction reducer(state, { type, payload }) {\r\n  switch (type) {\r\n    case UPDATE_TRANSACTIONS: {\r\n      const { account, transactions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [TRANSACTIONS_KEY]: transactions,\r\n        },\r\n      }\r\n    }\r\n    case UPDATE_POSITIONS: {\r\n      const { account, positions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\r\n      }\r\n    }\r\n    case UPDATE_MINING_POSITIONS: {\r\n      const { account, miningPositions } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\r\n      }\r\n    }\r\n    case UPDATE_USER_POSITION_HISTORY: {\r\n      const { account, historyData } = payload\r\n      return {\r\n        ...state,\r\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\r\n      }\r\n    }\r\n\r\n    case UPDATE_USER_PAIR_RETURNS: {\r\n      const { account, pairAddress, data } = payload\r\n      return {\r\n        ...state,\r\n        [account]: {\r\n          ...state?.[account],\r\n          [USER_PAIR_RETURNS_KEY]: {\r\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\r\n            [pairAddress]: data,\r\n          },\r\n        },\r\n      }\r\n    }\r\n\r\n    default: {\r\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\r\n    }\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {}\r\n\r\nexport default function Provider({ children }) {\r\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\r\n\r\n  const updateTransactions = useCallback((account, transactions) => {\r\n    dispatch({\r\n      type: UPDATE_TRANSACTIONS,\r\n      payload: {\r\n        account,\r\n        transactions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updatePositions = useCallback((account, positions) => {\r\n    dispatch({\r\n      type: UPDATE_POSITIONS,\r\n      payload: {\r\n        account,\r\n        positions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateMiningPositions = useCallback((account, miningPositions) => {\r\n    dispatch({\r\n      type: UPDATE_MINING_POSITIONS,\r\n      payload: {\r\n        account,\r\n        miningPositions,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserSnapshots = useCallback((account, historyData) => {\r\n    dispatch({\r\n      type: UPDATE_USER_POSITION_HISTORY,\r\n      payload: {\r\n        account,\r\n        historyData,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\r\n    dispatch({\r\n      type: UPDATE_USER_PAIR_RETURNS,\r\n      payload: {\r\n        account,\r\n        pairAddress,\r\n        data,\r\n      },\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={useMemo(\r\n        () => [\r\n          state,\r\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\r\n        ],\r\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\r\n      )}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport function useUserTransactions(account) {\r\n  const [state, { updateTransactions }] = useUserContext()\r\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_TRANSACTIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data) {\r\n          updateTransactions(account, result?.data)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!transactions && account) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, transactions, updateTransactions])\r\n\r\n  return transactions || {}\r\n}\r\n\r\n/**\r\n * Store all the snapshots of liquidity activity for this account.\r\n * Each snapshot is a moment when an LP position was created or updated.\r\n * @param {*} account\r\n */\r\nexport function useUserSnapshots(account) {\r\n  const [state, { updateUserSnapshots }] = useUserContext()\r\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let skip = 0\r\n        let allResults = []\r\n        let found = false\r\n        while (!found) {\r\n          let result = await client.query({\r\n            query: USER_HISTORY,\r\n            variables: {\r\n              skip: skip,\r\n              user: account,\r\n            },\r\n            fetchPolicy: 'cache-first',\r\n          })\r\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\r\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\r\n            found = true\r\n          } else {\r\n            skip += 1000\r\n          }\r\n        }\r\n        if (allResults) {\r\n          updateUserSnapshots(account, allResults)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!snapshots && account) {\r\n      fetchData()\r\n    }\r\n  }, [account, snapshots, updateUserSnapshots])\r\n\r\n  return snapshots\r\n}\r\n\r\n/**\r\n * For a given position (data about holding) and user, get the chart\r\n * data for the fees and liquidity over time\r\n * @param {*} position\r\n * @param {*} account\r\n */\r\nexport function useUserPositionChart(position, account) {\r\n  const pairAddress = position?.pair?.id\r\n  const [state, { updateUserPairReturns }] = useUserContext()\r\n\r\n  // get oldest date of data to fetch\r\n  const startDateTimestamp = useStartTimestamp()\r\n\r\n  // get users adds and removes on this pair\r\n  const snapshots = useUserSnapshots(account)\r\n  const pairSnapshots =\r\n    snapshots &&\r\n    position &&\r\n    snapshots.filter((currentSnapshot) => {\r\n      return currentSnapshot.pair.id === position.pair.id\r\n    })\r\n\r\n  // get data needed for calculations\r\n  const currentPairData = usePairData(pairAddress)\r\n  const [currentETHPrice] = useEthPrice()\r\n\r\n  // formatetd array to return for chart data\r\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let fetchedData = await getHistoricalPairReturns(\r\n        startDateTimestamp,\r\n        currentPairData,\r\n        pairSnapshots,\r\n        currentETHPrice\r\n      )\r\n      updateUserPairReturns(account, pairAddress, fetchedData)\r\n    }\r\n    if (\r\n      account &&\r\n      startDateTimestamp &&\r\n      pairSnapshots &&\r\n      !formattedHistory &&\r\n      currentPairData &&\r\n      Object.keys(currentPairData).length > 0 &&\r\n      pairAddress &&\r\n      currentETHPrice\r\n    ) {\r\n      fetchData()\r\n    }\r\n  }, [\r\n    account,\r\n    startDateTimestamp,\r\n    pairSnapshots,\r\n    formattedHistory,\r\n    pairAddress,\r\n    currentPairData,\r\n    currentETHPrice,\r\n    updateUserPairReturns,\r\n    position.pair.id,\r\n  ])\r\n\r\n  return formattedHistory\r\n}\r\n\r\n/**\r\n * For each day starting with min(first position timestamp, beginning of time window),\r\n * get total liquidity supplied by user in USD. Format in array with date timestamps\r\n * and usd liquidity value.\r\n */\r\nexport function useUserLiquidityChart(account) {\r\n  const history = useUserSnapshots(account)\r\n  // formatetd array to return for chart data\r\n  const [formattedHistory, setFormattedHistory] = useState()\r\n\r\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\r\n  const [activeWindow] = useTimeframe()\r\n\r\n  // monitor the old date fetched\r\n  useEffect(() => {\r\n    const utcEndTime = dayjs.utc()\r\n    // based on window, get starttime\r\n    let utcStartTime\r\n    switch (activeWindow) {\r\n      case timeframeOptions.WEEK:\r\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\r\n        break\r\n      case timeframeOptions.ALL_TIME:\r\n        utcStartTime = utcEndTime.subtract(1, 'year')\r\n        break\r\n      default:\r\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\r\n        break\r\n    }\r\n    let startTime = utcStartTime.unix() - 1\r\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\r\n      setStartDateTimestamp(startTime)\r\n    }\r\n  }, [activeWindow, startDateTimestamp])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\r\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\r\n\r\n      // sort snapshots in order\r\n      let sortedPositions = history.sort((a, b) => {\r\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\r\n      })\r\n      // if UI start time is > first position time - bump start index to this time\r\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\r\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\r\n      }\r\n\r\n      const dayTimestamps = []\r\n      // get date timestamps for all days in view\r\n      while (dayIndex < currentDayIndex) {\r\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\r\n        dayIndex = dayIndex + 1\r\n      }\r\n\r\n      const pairs = history.reduce((pairList, position) => {\r\n        return [...pairList, position.pair.id]\r\n      }, [])\r\n\r\n      // get all day datas where date is in this list, and pair is in pair list\r\n      let {\r\n        data: { pairDayDatas },\r\n      } = await client.query({\r\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\r\n      })\r\n\r\n      const formattedHistory = []\r\n\r\n      // map of current pair => ownership %\r\n      const ownershipPerPair = {}\r\n      for (const index in dayTimestamps) {\r\n        const dayTimestamp = dayTimestamps[index]\r\n        const timestampCeiling = dayTimestamp + 86400\r\n\r\n        // cycle through relevant positions and update ownership for any that we need to\r\n        const relevantPositions = history.filter((snapshot) => {\r\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\r\n        })\r\n        for (const index in relevantPositions) {\r\n          const position = relevantPositions[index]\r\n          // case where pair not added yet\r\n          if (!ownershipPerPair[position.pair.id]) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n          // case where more recent timestamp is found for pair\r\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\r\n            ownershipPerPair[position.pair.id] = {\r\n              lpTokenBalance: position.liquidityTokenBalance,\r\n              timestamp: position.timestamp,\r\n            }\r\n          }\r\n        }\r\n\r\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\r\n          // find last day data after timestamp update\r\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\r\n            return dayData.pairAddress === pairAddress\r\n          })\r\n          // find the most recent reference to pair liquidity data\r\n          let mostRecent = dayDatasForThisPair[0]\r\n          for (const index in dayDatasForThisPair) {\r\n            const dayData = dayDatasForThisPair[index]\r\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\r\n              mostRecent = dayData\r\n            }\r\n          }\r\n          return mostRecent\r\n        })\r\n\r\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\r\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\r\n          if (dayData) {\r\n            return (totalUSD =\r\n              totalUSD +\r\n              (ownershipPerPair[dayData.pairAddress]\r\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\r\n                  parseFloat(dayData.reserveUSD)\r\n                : 0))\r\n          } else {\r\n            return totalUSD\r\n          }\r\n        }, 0)\r\n\r\n        formattedHistory.push({\r\n          date: dayTimestamp,\r\n          valueUSD: dailyUSD,\r\n        })\r\n      }\r\n\r\n      setFormattedHistory(formattedHistory)\r\n    }\r\n    if (history && startDateTimestamp && history.length > 0) {\r\n      fetchData()\r\n    }\r\n  }, [history, startDateTimestamp])\r\n\r\n  return formattedHistory\r\n}\r\n\r\nexport function useUserPositions(account) {\r\n  const [state, { updatePositions }] = useUserContext()\r\n  const positions = state?.[account]?.[POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let result = await client.query({\r\n          query: USER_POSITIONS,\r\n          variables: {\r\n            user: account,\r\n          },\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (result?.data?.liquidityPositions) {\r\n          let formattedPositions = await Promise.all(\r\n            result?.data?.liquidityPositions.map(async (positionData) => {\r\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\r\n              return {\r\n                ...positionData,\r\n                ...returnData,\r\n              }\r\n            })\r\n          )\r\n          updatePositions(account, formattedPositions)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    if (!positions && account && ethPrice && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, positions, updatePositions, ethPrice, snapshots])\r\n\r\n  return positions\r\n}\r\n\r\nexport function useMiningPositions(account) {\r\n  const [state, { updateMiningPositions }] = useUserContext()\r\n  const allPairData = useAllPairData()\r\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\r\n\r\n  const snapshots = useUserSnapshots(account)\r\n\r\n  useEffect(() => {\r\n    async function fetchData(account) {\r\n      try {\r\n        let miningPositionData = []\r\n        let result = await stakingClient.query({\r\n          query: MINING_POSITIONS(account),\r\n          fetchPolicy: 'no-cache',\r\n        })\r\n        if (!result?.data?.user?.miningPosition) {\r\n          return\r\n        }\r\n        miningPositionData = result.data.user.miningPosition\r\n        for (const miningPosition of miningPositionData) {\r\n          const pairAddress = miningPosition.miningPool.pair.id\r\n          miningPosition.pairData = allPairData[pairAddress]\r\n        }\r\n        updateMiningPositions(account, miningPositionData)\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n\r\n    if (!miningPositions && account && snapshots) {\r\n      fetchData(account)\r\n    }\r\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\r\n  return miningPositions\r\n}\r\n","import styled from 'styled-components'\r\nimport { Box } from 'rebass/styled-components'\r\n\r\nconst Row = styled(Box)`\r\n  width: 100%;\r\n  display: flex;\r\n  padding: 0;\r\n  align-items: center;\r\n  align-items: ${({ align }) => align && align};\r\n  padding: ${({ padding }) => padding};\r\n  border: ${({ border }) => border};\r\n  border-radius: ${({ borderRadius }) => borderRadius};\r\n  justify-content: ${({ justify }) => justify};\r\n`\r\n\r\nexport const RowBetween = styled(Row)`\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const RowFlat = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`\r\n\r\nexport const AutoRow = styled(Row)`\r\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\r\n  margin: -${({ gap }) => gap};\r\n  & > * {\r\n    margin: ${({ gap }) => gap} !important;\r\n  }\r\n`\r\n\r\nexport const RowFixed = styled(Row)`\r\n  width: fit-content;\r\n`\r\n\r\nexport default Row\r\n","import styled from 'styled-components'\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\nexport const ColumnCenter = styled(Column)`\r\n  width: 100%;\r\n  align-items: center;\r\n`\r\n\r\nexport const AutoColumn = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: auto;\r\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\r\n  justify-items: ${({ justify }) => justify && justify};\r\n`\r\n\r\nexport default Column\r\n","import React from 'react'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst pulse = keyframes`\r\n  0% { transform: scale(1); }\r\n  60% { transform: scale(1.1); }\r\n  100% { transform: scale(1); }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  pointer-events: none;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  ${(props) =>\r\n    props.fill && !props.height\r\n      ? css`\r\n          height: 100vh;\r\n        `\r\n      : css`\r\n          height: 180px;\r\n        `}\r\n`\r\n\r\nconst AnimatedImg = styled.div`\r\n  animation: ${pulse} 800ms linear infinite;\r\n  & > * {\r\n    width: 72px;\r\n  }\r\n`\r\n\r\nconst LocalLoader = ({ fill }) => {\r\n  const [darkMode] = useDarkModeManager()\r\n\r\n  return (\r\n    <Wrapper fill={fill}>\r\n      <AnimatedImg>\r\n        <img src={require(darkMode ? '../../assets/logo_white.svg' : '../../assets/logo.svg')} alt=\"loading-icon\" />\r\n      </AnimatedImg>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default LocalLoader\r\n","import React from 'react'\r\nimport { Link as RebassLink } from 'rebass'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\n\r\nconst WrappedLink = ({ external, children, ...rest }) => (\r\n  <RebassLink\r\n    target={external ? '_blank' : null}\r\n    rel={external ? 'noopener noreferrer' : null}\r\n    color=\"#2f80ed\"\r\n    {...rest}\r\n  >\r\n    {children}\r\n  </RebassLink>\r\n)\r\n\r\nWrappedLink.propTypes = {\r\n  external: PropTypes.bool,\r\n}\r\n\r\nconst Link = styled(WrappedLink)`\r\n  color: ${({ color, theme }) => (color ? color : theme.link)};\r\n`\r\n\r\nexport default Link\r\n\r\nexport const CustomLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  color: ${({ color, theme }) => (color ? color : theme.link)};\r\n\r\n  &:visited {\r\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\r\n  }\r\n`\r\n\r\nexport const BasicLink = styled(RouterLink)`\r\n  text-decoration: none;\r\n  color: inherit;\r\n  &:hover {\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    underline: none;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Box } from 'rebass'\r\n\r\nimport Link from './Link'\r\n\r\nimport { urls } from '../utils'\r\n\r\nconst Divider = styled(Box)`\r\n  height: 1px;\r\n  background: no-repeat center/80% url(\"/background.jpeg\");\r\n\r\n`\r\n\r\nexport const BlockedWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nexport const BlockedMessageWrapper = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.text3};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  max-width: 80%;\r\n`\r\n\r\nexport const IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst Hint = ({ children, ...rest }) => (\r\n  <Text fontSize={16} weight={500} {...rest}>\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nconst Address = ({ address, token, ...rest }) => (\r\n  <Link\r\n    color=\"button\"\r\n    href={token ? urls.showToken(address) : urls.showAddress(address)}\r\n    external\r\n    style={{ wordBreak: 'break-all' }}\r\n    {...rest}\r\n  >\r\n    {address}\r\n  </Link>\r\n)\r\n\r\nexport const Hover = styled.div`\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: ${({ fade }) => fade && '0.7'};\r\n  }\r\n`\r\n\r\nexport const StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text1};\r\n`\r\n\r\nconst EmptyCard = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 200px;\r\n  border-radius: 20px;\r\n  color: ${({ theme }) => theme.text1};\r\n  height: ${({ height }) => height && height};\r\n`\r\n\r\nexport const SideBar = styled.span`\r\n  display: grid;\r\n  grid-gap: 24px;\r\n  position: sticky;\r\n  top: 4rem;\r\n`\r\n\r\nexport const SubNav = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  padding: 0;\r\n  margin-bottom: 2rem;\r\n`\r\nexport const SubNavEl = styled.li`\r\n  list-style: none;\r\n  display: flex;\r\n  padding-bottom: 0.5rem;\r\n  margin-right: 1rem;\r\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    border-bottom: 1px solid ${({ theme }) => theme.bg3};\r\n  }\r\n`\r\n\r\nexport const PageWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  background-image: url(\"https://cutewallpaper.org/21/technology-background-images/Information-technology-background-Network-business-.jpeg\");\r\n  background-blend-mode: lighten;\r\n  opacity: 0.9;\r\n  padding-top: 40px;\r\n  padding-bottom: 80px;\r\n \r\n`\r\n\r\nexport const ContentWrapper = styled.div`\r\n  background-color: rgba(5,10,15,0.8);\r\n  display: grid;\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 1440px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const ContentWrapperLarge = styled.div`\r\n  display: grid;\r\n  background: no-repeat center/80% url(\"/background.jpeg\");\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  padding: 0 2rem;\r\n  margin: 0 auto;\r\n  box-sizing: border-box;\r\n  max-width: 1440px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 1282px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FullWrapper = styled.div`\r\n  display: grid;\r\n  background: no-repeat center/80% url(\"/background.jpeg\");\r\n  justify-content: start;\r\n  align-items: start;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 24px;\r\n  max-width: 1440px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n  padding: 0 2rem;\r\n  box-sizing: border-box;\r\n\r\n  @media screen and (max-width: 1180px) {\r\n    grid-template-columns: 1fr;\r\n    padding: 0 1rem;\r\n  }\r\n`\r\n\r\nexport const FixedMenu = styled.div`\r\n  z-index: 99;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n  margin-bottom: 2rem;\r\n  max-width: 100vw;\r\n  background: no-repeat center/80% url(\"/background.jpeg\");\r\n  @media screen and (max-width: 800px) {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nexport { Hint, Divider, Address, EmptyCard }\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { isAddress } from '../../utils/index.js'\r\nimport EthereumLogo from '../../assets/eth.png'\r\n\r\nconst BAD_IMAGES = {}\r\n\r\nconst Inline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  align-self: center;\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: ${({ size }) => size};\r\n  height: ${({ size }) => size};\r\n  background-color: white;\r\n  border-radius: 50%;\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\r\n`\r\n\r\nconst StyledEthereumLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  > img {\r\n    width: ${({ size }) => size};\r\n    height: ${({ size }) => size};\r\n  }\r\n`\r\n\r\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\r\n  const [error, setError] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setError(false)\r\n  }, [address])\r\n\r\n  if (error || BAD_IMAGES[address]) {\r\n    return (\r\n      <Inline>\r\n        <span {...rest} alt={''} style={{ fontSize: size }} role=\"img\" aria-label=\"face\">\r\n          🤔\r\n        </span>\r\n      </Inline>\r\n    )\r\n  }\r\n\r\n  // hard coded fixes for trust wallet api issues\r\n  if (address?.toLowerCase() === '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb') {\r\n    address = '0x42456d7084eacf4083f1140d3229471bba2949a8'\r\n  }\r\n\r\n  if (address?.toLowerCase() === '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f') {\r\n    address = '0xc011a72400e58ecd99ee497cf89e3775d4bd732f'\r\n  }\r\n\r\n  if (address?.toLowerCase() === '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2') {\r\n    return (\r\n      <StyledEthereumLogo size={size} {...rest}>\r\n        <img\r\n          src={EthereumLogo}\r\n          style={{\r\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\r\n            borderRadius: '24px',\r\n          }}\r\n          alt=\"\"\r\n        />\r\n      </StyledEthereumLogo>\r\n    )\r\n  }\r\n\r\n  const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\r\n    address\r\n  )}/logo.png`\r\n\r\n  return (\r\n    <Inline>\r\n      <Image\r\n        {...rest}\r\n        alt={''}\r\n        src={path}\r\n        size={size}\r\n        onError={(event) => {\r\n          BAD_IMAGES[address] = true\r\n          setError(true)\r\n          event.preventDefault()\r\n        }}\r\n      />\r\n    </Inline>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport TokenLogo from '../TokenLogo'\r\n\r\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\r\n  const TokenWrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\r\n  `\r\n\r\n  const HigherLogo = styled(TokenLogo)`\r\n    z-index: 2;\r\n    // background-color: white;\r\n    border-radius: 50%;\r\n  `\r\n\r\n  const CoveredLogo = styled(TokenLogo)`\r\n    position: absolute;\r\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\r\n    // background-color: white;\r\n    border-radius: 50%;\r\n  `\r\n\r\n  return (\r\n    <TokenWrapper sizeraw={size} margin={margin}>\r\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\r\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\r\n    </TokenWrapper>\r\n  )\r\n}\r\n","import { useState, useCallback, useEffect, useRef } from 'react'\r\nimport { shade } from 'polished'\r\nimport Vibrant from 'node-vibrant'\r\nimport { hex } from 'wcag-contrast'\r\nimport { isAddress } from '../utils'\r\nimport copy from 'copy-to-clipboard'\r\n\r\nexport function useColor(tokenAddress, token) {\r\n  const [color, setColor] = useState('#2172E5')\r\n  if (tokenAddress) {\r\n    const path = `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${isAddress(\r\n      tokenAddress\r\n    )}/logo.png`\r\n    if (path) {\r\n      Vibrant.from(path).getPalette((err, palette) => {\r\n        if (palette && palette.Vibrant) {\r\n          let detectedHex = palette.Vibrant.hex\r\n          let AAscore = hex(detectedHex, '#FFF')\r\n          while (AAscore < 3) {\r\n            detectedHex = shade(0.005, detectedHex)\r\n            AAscore = hex(detectedHex, '#FFF')\r\n          }\r\n          if (token === 'DAI') {\r\n            setColor('#FAAB14')\r\n          } else {\r\n            setColor(detectedHex)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n  return color\r\n}\r\n\r\nexport function useCopyClipboard(timeout = 500) {\r\n  const [isCopied, setIsCopied] = useState(false)\r\n\r\n  const staticCopy = useCallback((text) => {\r\n    const didCopy = copy(text)\r\n    setIsCopied(didCopy)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (isCopied) {\r\n      const hide = setTimeout(() => {\r\n        setIsCopied(false)\r\n      }, timeout)\r\n\r\n      return () => {\r\n        clearTimeout(hide)\r\n      }\r\n    }\r\n  }, [isCopied, setIsCopied, timeout])\r\n\r\n  return [isCopied, staticCopy]\r\n}\r\n\r\nexport const useOutsideClick = (ref, ref2, callback) => {\r\n  const handleClick = (e) => {\r\n    if (ref.current && ref.current && !ref2.current) {\r\n      callback(true)\r\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\r\n      callback(true)\r\n    } else {\r\n      callback(false)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n}\r\n\r\nexport default function useInterval(callback: () => void, delay: null | number) {\r\n  const savedCallback = useRef<() => void>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      const current = savedCallback.current\r\n      current && current()\r\n    }\r\n\r\n    if (delay !== null) {\r\n      tick()\r\n      const id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n    return\r\n  }, [delay])\r\n}\r\n","import { Placement } from '@popperjs/core'\r\nimport { transparentize } from 'polished'\r\nimport React, { useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport styled from 'styled-components'\r\nimport Portal from '@reach/portal'\r\nimport useInterval from '../../hooks'\r\n\r\nconst PopoverContainer = styled.div<{ show: boolean }>`\r\n  z-index: 9999;\r\n\r\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\r\n  opacity: ${(props) => (props.show ? 1 : 0)};\r\n  transition: visibility 150ms linear, opacity 150ms linear;\r\n\r\n  background: ${({ theme }) => theme.bg2};\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\r\n  color: ${({ theme }) => theme.text2};\r\n  border-radius: 8px;\r\n`\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface PopoverProps {\r\n  content: React.ReactNode\r\n  show: boolean\r\n  children: React.ReactNode\r\n  placement?: Placement\r\n}\r\n\r\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\r\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\r\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\r\n  const [arrowElement] = useState<HTMLDivElement>(null)\r\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\r\n    placement,\r\n    strategy: 'fixed',\r\n    modifiers: [\r\n      { name: 'offset', options: { offset: [8, 8] } },\r\n      { name: 'arrow', options: { element: arrowElement } },\r\n    ],\r\n  })\r\n\r\n  useInterval(update, show ? 100 : null)\r\n\r\n  return (\r\n    <>\r\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\r\n      <Portal>\r\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\r\n          {content}\r\n          {/* <Arrow\r\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\r\n            ref={setArrowElement}\r\n            style={styles.arrow}\r\n            {...attributes.arrow}\r\n          /> */}\r\n        </PopoverContainer>\r\n      </Portal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport { HelpCircle as Question } from 'react-feather'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst QuestionWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.2rem;\r\n  border: none;\r\n  background: none;\r\n  outline: none;\r\n  cursor: default;\r\n  border-radius: 36px;\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text2};\r\n\r\n  :hover,\r\n  :focus {\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <span style={{ marginLeft: 4 }}>\r\n      <Tooltip text={text} show={show && !disabled}>\r\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\r\n          <Question size={16} />\r\n        </QuestionWrapper>\r\n      </Tooltip>\r\n    </span>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tooltip } from '../QuestionHelper'\r\n\r\nconst TextWrapper = styled.div`\r\n  position: relative;\r\n  margin-left: ${({ margin }) => margin && '4px'};\r\n  color: ${({ theme, link }) => (link ? theme.blue : theme.text1)};\r\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\r\n  }\r\n`\r\n\r\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\r\n  const [showHover, setShowHover] = useState(false)\r\n\r\n  if (!text) {\r\n    return ''\r\n  }\r\n\r\n  if (text.length > maxCharacters) {\r\n    return (\r\n      <Tooltip text={text} show={showHover}>\r\n        <TextWrapper\r\n          onMouseEnter={() => setShowHover(true)}\r\n          onMouseLeave={() => setShowHover(false)}\r\n          margin={margin}\r\n          adjustSize={adjustSize}\r\n          link={link}\r\n          fontSize={fontSize}\r\n          {...rest}\r\n        >\r\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\r\n        </TextWrapper>\r\n      </Tooltip>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\r\n      {text}\r\n    </TextWrapper>\r\n  )\r\n}\r\n\r\nexport default FormattedName\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport dayjs from 'dayjs'\r\nimport LocalLoader from '../LocalLoader'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { CustomLink } from '../Link'\r\nimport { Divider } from '../../components'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { formattedNum, formattedPercent } from '../../utils'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport FormattedName from '../FormattedName'\r\nimport QuestionHelper from '../QuestionHelper'\r\nimport { TYPE } from '../../Theme'\r\nimport { PAIR_BLACKLIST } from '../../constants'\r\nimport { AutoColumn } from '../Column'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'name liq vol';\r\n  padding: 0 1.125rem;\r\n\r\n  opacity: ${({ fade }) => (fade ? '0.6' : '1')};\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n\r\n    :first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 740px) {\r\n    padding: 0 1.125rem;\r\n    grid-template-columns: 1.5fr 1fr 1fr};\r\n    grid-template-areas: ' name liq vol pool ';\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    padding: 0 1.125rem;\r\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: ' name liq vol volWeek fees apy';\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: ' name liq vol volWeek fees apy';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  text-align: end;\r\n  user-select: none;\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  LIQ: 0,\r\n  VOL: 1,\r\n  VOL_7DAYS: 3,\r\n  FEES: 4,\r\n  APY: 5,\r\n}\r\n\r\nconst FIELD_TO_VALUE = (field, useTracked) => {\r\n  switch (field) {\r\n    case SORT_FIELD.LIQ:\r\n      return useTracked ? 'trackedReserveUSD' : 'reserveUSD'\r\n    case SORT_FIELD.VOL:\r\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\r\n    case SORT_FIELD.VOL_7DAYS:\r\n      return useTracked ? 'oneWeekVolumeUSD' : 'oneWeekVolumeUntracked'\r\n    case SORT_FIELD.FEES:\r\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\r\n    default:\r\n      return 'trackedReserveUSD'\r\n  }\r\n}\r\n\r\nconst formatDataText = (value, trackedValue, supressWarning = false) => {\r\n  const showUntracked = value !== '$0' && !trackedValue & !supressWarning\r\n  return (\r\n    <AutoColumn gap=\"2px\" style={{ opacity: showUntracked ? '0.7' : '1' }}>\r\n      <div style={{ textAlign: 'right' }}>{value}</div>\r\n      <TYPE.light fontSize={'9px'} style={{ textAlign: 'right' }}>\r\n        {showUntracked ? 'untracked' : '  '}\r\n      </TYPE.light>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10, useTracked = false }) {\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const below740 = useMedia('(max-width: 740px)')\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  const ITEMS_PER_PAGE = maxItems\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [pairs])\r\n\r\n  useEffect(() => {\r\n    if (pairs) {\r\n      let extraPages = 1\r\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\r\n    }\r\n  }, [ITEMS_PER_PAGE, pairs])\r\n\r\n  const ListItem = ({ pairAddress, index }) => {\r\n    const pairData = pairs[pairAddress]\r\n\r\n    if (pairData && pairData.token0 && pairData.token1) {\r\n      const liquidity = formattedNum(\r\n        !!pairData.trackedReserveUSD ? pairData.trackedReserveUSD : pairData.reserveUSD,\r\n        true\r\n      )\r\n\r\n      const volume = formattedNum(\r\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked,\r\n        true\r\n      )\r\n\r\n      const apy = formattedPercent(\r\n        ((pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked) * 0.003 * 365 * 100) /\r\n          (pairData.oneDayVolumeUSD ? pairData.trackedReserveUSD : pairData.reserveUSD)\r\n      )\r\n\r\n      const weekVolume = formattedNum(\r\n        pairData.oneWeekVolumeUSD ? pairData.oneWeekVolumeUSD : pairData.oneWeekVolumeUntracked,\r\n        true\r\n      )\r\n\r\n      const fees = formattedNum(\r\n        pairData.oneDayVolumeUSD ? pairData.oneDayVolumeUSD * 0.003 : pairData.oneDayVolumeUntracked * 0.003,\r\n        true\r\n      )\r\n\r\n      return (\r\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\r\n          <DataText area=\"name\" fontWeight=\"500\">\r\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\r\n            <DoubleTokenLogo\r\n              size={below600 ? 16 : 20}\r\n              a0={pairData.token0.id}\r\n              a1={pairData.token1.id}\r\n              margin={!below740}\r\n            />\r\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\r\n              <FormattedName\r\n                text={pairData.token0.symbol + '-' + pairData.token1.symbol}\r\n                maxCharacters={below600 ? 8 : 16}\r\n                adjustSize={true}\r\n                link={true}\r\n              />\r\n            </CustomLink>\r\n          </DataText>\r\n          <DataText area=\"liq\">{formatDataText(liquidity, pairData.trackedReserveUSD)}</DataText>\r\n          <DataText area=\"vol\">{formatDataText(volume, pairData.oneDayVolumeUSD)}</DataText>\r\n          {!below1080 && <DataText area=\"volWeek\">{formatDataText(weekVolume, pairData.oneWeekVolumeUSD)}</DataText>}\r\n          {!below1080 && <DataText area=\"fees\">{formatDataText(fees, pairData.oneDayVolumeUSD)}</DataText>}\r\n          {!below1080 && (\r\n            <DataText area=\"apy\">\r\n              {formatDataText(apy, pairData.oneDayVolumeUSD, pairData.oneDayVolumeUSD === 0)}\r\n            </DataText>\r\n          )}\r\n        </DashGrid>\r\n      )\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  const pairList =\r\n    pairs &&\r\n    Object.keys(pairs)\r\n      .filter(\r\n        (address) => !PAIR_BLACKLIST.includes(address) && (useTracked ? !!pairs[address].trackedReserveUSD : true)\r\n      )\r\n      .sort((addressA, addressB) => {\r\n        const pairA = pairs[addressA]\r\n        const pairB = pairs[addressB]\r\n        if (sortedColumn === SORT_FIELD.APY) {\r\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\r\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\r\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\r\n        }\r\n        return parseFloat(pairA[FIELD_TO_VALUE(sortedColumn, useTracked)]) >\r\n          parseFloat(pairB[FIELD_TO_VALUE(sortedColumn, useTracked)])\r\n          ? (sortDirection ? -1 : 1) * 1\r\n          : (sortDirection ? -1 : 1) * -1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n      .map((pairAddress, index) => {\r\n        return (\r\n          pairAddress && (\r\n            <div key={index}>\r\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\r\n              <Divider />\r\n            </div>\r\n          )\r\n        )\r\n      })\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid\r\n        center={true}\r\n        disbaleLinks={disbaleLinks}\r\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\r\n      >\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <TYPE.main area=\"name\">Name</TYPE.main>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n          <ClickableText\r\n            area=\"liq\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.LIQ)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"vol\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VOL)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Volume (24hrs)\r\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n            <ClickableText\r\n              area=\"volWeek\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n            <ClickableText\r\n              area=\"fees\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.FEES)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n            <ClickableText\r\n              area=\"apy\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.APY)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\r\n              }}\r\n            >\r\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\r\n      <PageButtons>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === 1 ? page : page - 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === maxPage ? page : page + 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(PairList)\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { CustomLink } from '../Link'\r\nimport Row from '../Row'\r\nimport { Divider } from '..'\r\n\r\nimport { formattedNum, formattedPercent } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TOKEN_BLACKLIST } from '../../constants'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 2em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'name liq vol';\r\n  padding: 0 1.125rem;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 680px) {\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-template-columns: 180px 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol ';\r\n\r\n    > * {\r\n      justify-content: flex-end;\r\n      width: 100%;\r\n\r\n      &:first-child {\r\n        justify-content: flex-start;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'name symbol liq vol price change';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  text-align: end;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n  user-select: none;\r\n  color: ${({ theme }) => theme.text1} !important;\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1} !important;\r\n\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  LIQ: 'totalLiquidityUSD',\r\n  VOL: 'oneDayVolumeUSD',\r\n  VOL_UT: 'oneDayVolumeUT',\r\n  SYMBOL: 'symbol',\r\n  NAME: 'name',\r\n  PRICE: 'priceUSD',\r\n  CHANGE: 'priceChangeUSD',\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TopTokenList({ tokens, itemMax = 10, useTracked = false }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VOL)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below680 = useMedia('(max-width: 680px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [tokens])\r\n\r\n  const formattedTokens = useMemo(() => {\r\n    return (\r\n      tokens &&\r\n      Object.keys(tokens)\r\n        .filter((key) => {\r\n          return !TOKEN_BLACKLIST.includes(key)\r\n        })\r\n        .map((key) => tokens[key])\r\n    )\r\n  }, [tokens])\r\n\r\n  useEffect(() => {\r\n    if (tokens && formattedTokens) {\r\n      let extraPages = 1\r\n      if (formattedTokens.length % itemMax === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\r\n    }\r\n  }, [tokens, formattedTokens, itemMax])\r\n\r\n  const filteredList = useMemo(() => {\r\n    return (\r\n      formattedTokens &&\r\n      formattedTokens\r\n        .sort((a, b) => {\r\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\r\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\r\n          }\r\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n            ? (sortDirection ? -1 : 1) * 1\r\n            : (sortDirection ? -1 : 1) * -1\r\n        })\r\n        .slice(itemMax * (page - 1), page * itemMax)\r\n    )\r\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\r\n\r\n  const ListItem = ({ item, index }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }} focus={true}>\r\n        <DataText area=\"name\" fontWeight=\"500\">\r\n          <Row>\r\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\r\n            <TokenLogo address={item.id} />\r\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\r\n              <FormattedName\r\n                text={below680 ? item.symbol : item.name}\r\n                maxCharacters={below600 ? 8 : 16}\r\n                adjustSize={true}\r\n                link={true}\r\n              />\r\n            </CustomLink>\r\n          </Row>\r\n        </DataText>\r\n        {!below680 && (\r\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\r\n            <FormattedName text={item.symbol} maxCharacters={5} />\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\r\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\r\n        {!below1080 && (\r\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\r\n            {formattedNum(item.priceUSD, true)}\r\n          </DataText>\r\n        )}\r\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            color=\"text\"\r\n            area=\"name\"\r\n            fontWeight=\"500\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.NAME)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below680 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"symbol\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.SYMBOL)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"liq\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.LIQ)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        <Flex alignItems=\"center\">\r\n          <ClickableText\r\n            area=\"vol\"\r\n            onClick={() => {\r\n              setSortedColumn(useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL)\r\n              setSortDirection(\r\n                sortedColumn !== (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? true : !sortDirection\r\n              )\r\n            }}\r\n          >\r\n            Volume (24hrs)\r\n            {sortedColumn === (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"price\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.PRICE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        {!below1080 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"change\"\r\n              onClick={(e) => {\r\n                setSortedColumn(SORT_FIELD.CHANGE)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Price Change (24hrs)\r\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {filteredList &&\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })}\r\n      </List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopTokenList)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowBetween } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { ChevronDown as Arrow } from 'react-feather'\r\nimport { TYPE } from '../../Theme'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Wrapper = styled.div`\r\n  z-index: 20;\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.panelColor};\r\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \r\n  width: 100px;\r\n  padding: 4px 10px;\r\n  padding-right: 6px;\r\n  border-radius: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Dropdown = styled.div`\r\n  position: absolute;\r\n  top: 34px;\r\n  padding-top: 40px;\r\n  width: calc(100% - 40px);\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  padding: 10px 10px;\r\n  border-radius: 8px;\r\n  width: calc(100% - 20px);\r\n  font-weight: 500;\r\n  font-size: 1rem;\r\n  color: black;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ArrowStyled = styled(Arrow)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-left: 6px;\r\n`\r\n\r\nconst DropdownSelect = ({ options, active, setActive, color }) => {\r\n  const [showDropdown, toggleDropdown] = useState(false)\r\n\r\n  return (\r\n    <Wrapper open={showDropdown} color={color}>\r\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\r\n        <TYPE.main>{active}</TYPE.main>\r\n        <StyledIcon>\r\n          <ArrowStyled />\r\n        </StyledIcon>\r\n      </RowBetween>\r\n      {showDropdown && (\r\n        <Dropdown>\r\n          <AutoColumn gap=\"20px\">\r\n            {Object.keys(options).map((key, index) => {\r\n              let option = options[key]\r\n              return (\r\n                option !== active && (\r\n                  <Row\r\n                    onClick={() => {\r\n                      toggleDropdown(!showDropdown)\r\n                      setActive(option)\r\n                    }}\r\n                    key={index}\r\n                  >\r\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\r\n                  </Row>\r\n                )\r\n              )\r\n            })}\r\n          </AutoColumn>\r\n        </Dropdown>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DropdownSelect\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\n\r\nimport { formatTime, formattedNum, urls } from '../../utils'\r\nimport { useMedia } from 'react-use'\r\nimport { useCurrentCurrency } from '../../contexts/Application'\r\nimport { RowFixed, RowBetween } from '../Row'\r\n\r\nimport LocalLoader from '../LocalLoader'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport Link from '../Link'\r\nimport { Divider, EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: #2f80ed;\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 100px 1fr 1fr;\r\n  grid-template-areas: 'txn value time';\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    &:first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 100px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 500px) {\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 780px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther time';\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 180px;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1080px) {\r\n    max-width: 1320px;\r\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\r\n    grid-template-areas: 'txn value amountToken amountOther account time';\r\n  }\r\n`\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  user-select: none;\r\n  text-align: end;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: right;\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 40em) {\r\n    font-size: 0.85rem;\r\n  }\r\n`\r\n\r\nconst SortText = styled.button`\r\n  cursor: pointer;\r\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\r\n  margin-right: 0.75rem !important;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: 1rem;\r\n  padding: 0px;\r\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\r\n  outline: none;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 14px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'amountUSD',\r\n  AMOUNT0: 'token0Amount',\r\n  AMOUNT1: 'token1Amount',\r\n  TIMESTAMP: 'timestamp',\r\n}\r\n\r\nconst TXN_TYPE = {\r\n  ALL: 'All',\r\n  SWAP: 'Swaps',\r\n  ADD: 'Adds',\r\n  REMOVE: 'Removes',\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 10\r\n\r\nfunction getTransactionType(event, symbol0, symbol1) {\r\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\r\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\r\n  switch (event) {\r\n    case TXN_TYPE.ADD:\r\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.REMOVE:\r\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\r\n    case TXN_TYPE.SWAP:\r\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\r\n    default:\r\n      return ''\r\n  }\r\n}\r\n\r\n// @TODO rework into virtualized list\r\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\r\n  // page state\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\r\n  const [filteredItems, setFilteredItems] = useState()\r\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\r\n\r\n  const [currency] = useCurrentCurrency()\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [transactions])\r\n\r\n  // parse the txns and format for UI\r\n  useEffect(() => {\r\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\r\n      let newTxns = []\r\n      if (transactions.mints.length > 0) {\r\n        transactions.mints.map((mint) => {\r\n          let newTxn = {}\r\n          newTxn.hash = mint.transaction.id\r\n          newTxn.timestamp = mint.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.ADD\r\n          newTxn.token0Amount = mint.amount0\r\n          newTxn.token1Amount = mint.amount1\r\n          newTxn.account = mint.to\r\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\r\n          newTxn.amountUSD = mint.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.burns.length > 0) {\r\n        transactions.burns.map((burn) => {\r\n          let newTxn = {}\r\n          newTxn.hash = burn.transaction.id\r\n          newTxn.timestamp = burn.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.REMOVE\r\n          newTxn.token0Amount = burn.amount0\r\n          newTxn.token1Amount = burn.amount1\r\n          newTxn.account = burn.sender\r\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\r\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\r\n          newTxn.amountUSD = burn.amountUSD\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n      if (transactions.swaps.length > 0) {\r\n        transactions.swaps.map((swap) => {\r\n          const netToken0 = swap.amount0In - swap.amount0Out\r\n          const netToken1 = swap.amount1In - swap.amount1Out\r\n\r\n          let newTxn = {}\r\n\r\n          if (netToken0 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token0Amount = Math.abs(netToken0)\r\n            newTxn.token1Amount = Math.abs(netToken1)\r\n          } else if (netToken1 < 0) {\r\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\r\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\r\n            newTxn.token0Amount = Math.abs(netToken1)\r\n            newTxn.token1Amount = Math.abs(netToken0)\r\n          }\r\n\r\n          newTxn.hash = swap.transaction.id\r\n          newTxn.timestamp = swap.transaction.timestamp\r\n          newTxn.type = TXN_TYPE.SWAP\r\n\r\n          newTxn.amountUSD = swap.amountUSD\r\n          newTxn.account = swap.to\r\n          return newTxns.push(newTxn)\r\n        })\r\n      }\r\n\r\n      const filtered = newTxns.filter((item) => {\r\n        if (txFilter !== TXN_TYPE.ALL) {\r\n          return item.type === txFilter\r\n        }\r\n        return true\r\n      })\r\n      setFilteredItems(filtered)\r\n      let extraPages = 1\r\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      if (filtered.length === 0) {\r\n        setMaxPage(1)\r\n      } else {\r\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\r\n      }\r\n    }\r\n  }, [transactions, txFilter])\r\n\r\n  useEffect(() => {\r\n    setPage(1)\r\n  }, [txFilter])\r\n\r\n  const filteredList =\r\n    filteredItems &&\r\n    filteredItems\r\n      .sort((a, b) => {\r\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\r\n          ? (sortDirection ? -1 : 1) * 1\r\n          : (sortDirection ? -1 : 1) * -1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below780 = useMedia('(max-width: 780px)')\r\n\r\n  const ListItem = ({ item }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }}>\r\n        <DataText area=\"txn\" fontWeight=\"500\">\r\n          <Link color={color} external href={urls.showTransaction(item.hash)}>\r\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\r\n          </Link>\r\n        </DataText>\r\n        <DataText area=\"value\">\r\n          {currency === 'ETH' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\r\n        </DataText>\r\n        {!below780 && (\r\n          <>\r\n            <DataText area=\"amountOther\">\r\n              {formattedNum(item.token1Amount) + ' '}{' '}\r\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n            <DataText area=\"amountToken\">\r\n              {formattedNum(item.token0Amount) + ' '}{' '}\r\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\r\n            </DataText>\r\n          </>\r\n        )}\r\n        {!below1080 && (\r\n          <DataText area=\"account\">\r\n            <Link color={color} external href={'https://etherscan.io/address/' + item.account}>\r\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\r\n            </Link>\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n        {below780 ? (\r\n          <RowBetween area=\"txn\">\r\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\r\n          </RowBetween>\r\n        ) : (\r\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ALL)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ALL}\r\n            >\r\n              All\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.SWAP)\r\n              }}\r\n              active={txFilter === TXN_TYPE.SWAP}\r\n            >\r\n              Swaps\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.ADD)\r\n              }}\r\n              active={txFilter === TXN_TYPE.ADD}\r\n            >\r\n              Adds\r\n            </SortText>\r\n            <SortText\r\n              onClick={() => {\r\n                setTxFilter(TXN_TYPE.REMOVE)\r\n              }}\r\n              active={txFilter === TXN_TYPE.REMOVE}\r\n            >\r\n              Removes\r\n            </SortText>\r\n          </RowFixed>\r\n        )}\r\n\r\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\r\n          <ClickableText\r\n            color=\"textDim\"\r\n            area=\"value\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below780 && (\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"amountToken\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.AMOUNT0)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\r\n              }}\r\n            >\r\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\r\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n        <>\r\n          {!below780 && (\r\n            <Flex alignItems=\"center\">\r\n              <ClickableText\r\n                area=\"amountOther\"\r\n                color=\"textDim\"\r\n                onClick={() => {\r\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\r\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\r\n                }}\r\n              >\r\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\r\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\r\n              </ClickableText>\r\n            </Flex>\r\n          )}\r\n          {!below1080 && (\r\n            <Flex alignItems=\"center\">\r\n              <TYPE.body area=\"account\">Account</TYPE.body>\r\n            </Flex>\r\n          )}\r\n          <Flex alignItems=\"center\">\r\n            <ClickableText\r\n              area=\"time\"\r\n              color=\"textDim\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\r\n              }}\r\n            >\r\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        </>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>\r\n        {!filteredList ? (\r\n          <LocalLoader />\r\n        ) : filteredList.length === 0 ? (\r\n          <EmptyCard>No recent transactions found.</EmptyCard>\r\n        ) : (\r\n          filteredList.map((item, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <ListItem key={index} index={index + 1} item={item} />\r\n                <Divider />\r\n              </div>\r\n            )\r\n          })\r\n        )}\r\n      </List>\r\n      <PageButtons>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === 1 ? page : page - 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div\r\n          onClick={(e) => {\r\n            setPage(page === maxPage ? page : page + 1)\r\n          }}\r\n        >\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TxnList\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { formattedNum } from '../../utils'\r\nimport styled from 'styled-components'\r\nimport { usePrevious } from 'react-use'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\nimport { IconWrapper } from '..'\r\n\r\ndayjs.extend(utc)\r\n\r\nexport const CHART_TYPES = {\r\n  BAR: 'BAR',\r\n  AREA: 'AREA',\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\n// constant height for charts\r\nconst HEIGHT = 300\r\n\r\nconst TradingViewChart = ({\r\n  type = CHART_TYPES.BAR,\r\n  data,\r\n  base,\r\n  baseChange,\r\n  field,\r\n  title,\r\n  width,\r\n  useWeekly = false,\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated && type === CHART_TYPES.BAR) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev, type])\r\n\r\n  // parese the data and format for tardingview consumption\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\r\n      value: parseFloat(entry[field]),\r\n    }\r\n  })\r\n\r\n  // adjust the scale based on the type of chart\r\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if them switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id' + type)\r\n      let node = document.getElementById('test-id' + type)\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme, type])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated && formattedData) {\r\n      var chart = createChart(ref.current, {\r\n        width: width,\r\n        height: HEIGHT,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        rightPriceScale: {\r\n          scaleMargins: {\r\n            top: topScale,\r\n            bottom: 0,\r\n          },\r\n          borderVisible: false,\r\n        },\r\n        timeScale: {\r\n          borderVisible: false,\r\n        },\r\n        grid: {\r\n          horzLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n          vertLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n            visible: false,\r\n          },\r\n        },\r\n        crosshair: {\r\n          horzLine: {\r\n            visible: false,\r\n            labelVisible: false,\r\n          },\r\n          vertLine: {\r\n            visible: true,\r\n            style: 0,\r\n            width: 2,\r\n            color: 'rgba(32, 38, 46, 0.1)',\r\n            labelVisible: false,\r\n          },\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val, true),\r\n        },\r\n      })\r\n\r\n      var series =\r\n        type === CHART_TYPES.BAR\r\n          ? chart.addHistogramSeries({\r\n            color: '#2960fa',\r\n            priceFormat: {\r\n              type: 'volume',\r\n            },\r\n            scaleMargins: {\r\n              top: 0.32,\r\n              bottom: 0,\r\n            },\r\n            lineColor: '#2960fa',\r\n            lineWidth: 3,\r\n          })\r\n          : chart.addAreaSeries({\r\n            topColor: '#2960fa',\r\n            bottomColor: 'rgba(27, 64, 115, 0)',\r\n            lineColor: '#2960fa',\r\n            lineWidth: 3,\r\n          })\r\n\r\n      series.setData(formattedData)\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id' + type)\r\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.fontWeight = '500'\r\n      toolTip.style.left = -4 + 'px'\r\n      toolTip.style.top = '-' + 8 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // format numbers\r\n      let percentChange = baseChange?.toFixed(2)\r\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\r\n      let color = percentChange >= 0 ? 'green' : 'red'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML =\r\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\r\n          }</div>` +\r\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\r\n          formattedNum(base ?? 0, true) +\r\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\r\n          '</div>'\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > HEIGHT\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          let dateStr = useWeekly\r\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n              .startOf('week')\r\n              .format('MMMM D, YYYY') +\r\n            '-' +\r\n            dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\r\n              .endOf('week')\r\n              .format('MMMM D, YYYY')\r\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\r\n          var price = param.seriesPrices.get(series)\r\n\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 20px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            formattedNum(price, true) +\r\n            '</div>' +\r\n            '<div>' +\r\n            dateStr +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [\r\n    base,\r\n    baseChange,\r\n    chartCreated,\r\n    darkMode,\r\n    data,\r\n    formattedData,\r\n    textColor,\r\n    title,\r\n    topScale,\r\n    type,\r\n    useWeekly,\r\n    width,\r\n  ])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, HEIGHT)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, width])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div ref={ref} id={'test-id' + type} />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TradingViewChart\r\n","import React from 'react'\r\nimport { Button as RebassButton } from 'rebass/styled-components'\r\nimport styled from 'styled-components'\r\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\r\nimport { darken, transparentize } from 'polished'\r\nimport { RowBetween } from '../Row'\r\nimport { StyledIcon } from '..'\r\n\r\nconst Base = styled(RebassButton)`\r\n  padding: 8px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 600;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 1px solid transparent;\r\n  outline: none;\r\n  border-bottom-right-radius: ${({ open }) => open && '0'};\r\n  border-bottom-left-radius: ${({ open }) => open && '0'};\r\n`\r\n\r\nconst BaseCustom = styled(RebassButton)`\r\n  padding: 16px 12px;\r\n  font-size: 0.825rem;\r\n  font-weight: 400;\r\n  border-radius: 12px;\r\n  cursor: pointer;\r\n  outline: none;\r\n`\r\n\r\nconst Dull = styled(Base)`\r\n  background-color: rgba(255, 255, 255, 0.15);\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  color: black;\r\n  height: 100%;\r\n  font-weight: 400;\r\n  &:hover,\r\n  :focus {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:focus {\r\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\r\n  }\r\n  &:active {\r\n    background-color: rgba(255, 255, 255, 0.25);\r\n    border-color: rgba(255, 255, 255, 0.25);\r\n  }\r\n`\r\n\r\nexport default function ButtonStyled({ children, ...rest }) {\r\n  return <Base {...rest}>{children}</Base>\r\n}\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const ButtonLight = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\r\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n\r\n  min-width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  a {\r\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\r\n  }\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) =>\r\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\r\n  }\r\n`\r\n\r\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\r\n  return (\r\n    <ButtonFaded {...rest} disabled={disabled} ope={open}>\r\n      <RowBetween>\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n        {open ? (\r\n          <StyledIcon>\r\n            <ChevronUp size={24} />\r\n          </StyledIcon>\r\n        ) : (\r\n          <StyledIcon>\r\n            <ChevronDown size={24} />\r\n          </StyledIcon>\r\n        )}\r\n      </RowBetween>\r\n    </ButtonFaded>\r\n  )\r\n}\r\n\r\nexport const ButtonDark = styled(Base)`\r\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\r\n  color: white;\r\n  width: fit-content;\r\n  border-radius: 12px;\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\r\n  }\r\n`\r\n\r\nexport const ButtonFaded = styled(Base)`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: (255, 255, 255, 0.5);\r\n  white-space: nowrap;\r\n\r\n  :hover {\r\n    opacity: 0.5;\r\n  }\r\n`\r\n\r\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\r\n  return (\r\n    <Dull {...rest}>\r\n      <ContentWrapper>\r\n        <Plus size={16} />\r\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\r\n      </ContentWrapper>\r\n    </Dull>\r\n  )\r\n}\r\n\r\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\r\n  return (\r\n    <BaseCustom bg={bgColor} color={color} {...rest}>\r\n      {children}\r\n    </BaseCustom>\r\n  )\r\n}\r\n\r\nexport const OptionButton = styled.div`\r\n  font-weight: 500;\r\n  width: fit-content;\r\n  white-space: nowrap;\r\n  padding: 6px;\r\n  border-radius: 6px;\r\n  border: 1px solid ${({ theme }) => theme.bg4};\r\n  background-color: ${({ active, theme }) => active && theme.bg3};\r\n  color: ${({ theme }) => theme.text1};\r\n\r\n  :hover {\r\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\r\n  }\r\n`\r\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\r\nimport { ResponsiveContainer } from 'recharts'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\r\nimport { useMedia } from 'react-use'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\r\nimport { RowFixed } from '../Row'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { getTimeframe } from '../../utils'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n}\r\n\r\nconst VOLUME_WINDOW = {\r\n  WEEKLY: 'WEEKLY',\r\n  DAYS: 'DAYS',\r\n}\r\nconst GlobalChart = ({ display }) => {\r\n  // chart options\r\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\r\n\r\n  // time window and window size for chart\r\n  const timeWindow = timeframeOptions.ALL_TIME\r\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\r\n\r\n  // global historical data\r\n  const [dailyData, weeklyData] = useGlobalChartData()\r\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD, oneWeekVolume, weeklyVolumeChange } =\r\n    useGlobalData()\r\n\r\n  // based on window, get starttim\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const chartDataFiltered = useMemo(() => {\r\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\r\n    return (\r\n      currentData &&\r\n      Object.keys(currentData)\r\n        ?.map((key) => {\r\n          let item = currentData[key]\r\n          if (item.date > utcStartTime) {\r\n            return item\r\n          } else {\r\n            return true\r\n          }\r\n        })\r\n        .filter((item) => {\r\n          return !!item\r\n        })\r\n    )\r\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return chartDataFiltered ? (\r\n    <>\r\n      {below800 && (\r\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={'#3680E7'} />\r\n      )}\r\n\r\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\r\n          <TradingViewChart\r\n            data={dailyData}\r\n            base={totalLiquidityUSD}\r\n            baseChange={liquidityChangeUSD}\r\n            title=\"Liquidity\"\r\n            field=\"totalLiquidityUSD\"\r\n            width={width}\r\n            type={CHART_TYPES.AREA}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={60 / 28}>\r\n          <TradingViewChart\r\n            data={chartDataFiltered}\r\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\r\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\r\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\r\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\r\n            width={width}\r\n            type={CHART_TYPES.BAR}\r\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n          />\r\n        </ResponsiveContainer>\r\n      )}\r\n      {display === 'volume' && (\r\n        <RowFixed\r\n          style={{\r\n            bottom: '70px',\r\n            position: 'absolute',\r\n            left: '20px',\r\n            zIndex: 10,\r\n          }}\r\n        >\r\n          <OptionButton\r\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\r\n          >\r\n            <TYPE.body>D</TYPE.body>\r\n          </OptionButton>\r\n          <OptionButton\r\n            style={{ marginLeft: '4px' }}\r\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\r\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\r\n          >\r\n            <TYPE.body>W</TYPE.body>\r\n          </OptionButton>\r\n        </RowFixed>\r\n      )}\r\n    </>\r\n  ) : (\r\n    ''\r\n  )\r\n}\r\n\r\nexport default GlobalChart\r\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Row, { RowFixed } from '../Row'\r\nimport TokenLogo from '../TokenLogo'\r\nimport { Search as SearchIcon, X } from 'react-feather'\r\nimport { BasicLink } from '../Link'\r\n\r\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\r\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { useMedia } from 'react-use'\r\nimport { useAllPairsInUniswap, useAllTokensInUniswap } from '../../contexts/GlobalData'\r\nimport { TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\r\n\r\nimport { transparentize } from 'polished'\r\nimport { client } from '../../apollo/client'\r\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\r\nimport FormattedName from '../FormattedName'\r\nimport { TYPE } from '../../Theme'\r\nimport { updateNameData } from '../../utils/data'\r\n\r\nconst Container = styled.div`\r\n  height: 48px;\r\n  z-index: 30;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  background: ${({ theme, small, open }) => (small ? (open ? theme.bg6 : 'none') : transparentize(0.4, theme.bg6))};\r\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\r\n  z-index: 9999;\r\n  width: 100%;\r\n  min-width: 300px;\r\n  box-sizing: border-box;\r\n  box-shadow: ${({ open, small }) =>\r\n    !open && !small\r\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n      : 'none'};\r\n  @media screen and (max-width: 500px) {\r\n    background: ${({ theme }) => theme.bg6};\r\n    box-shadow: ${({ open }) =>\r\n    !open\r\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\r\n      : 'none'};\r\n  }\r\n`\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.text1};\r\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 16px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst SearchIconLarge = styled(SearchIcon)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  pointer-events: none;\r\n  color: ${({ theme }) => theme.text3};\r\n`\r\n\r\nconst CloseIcon = styled(X)`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 0.5rem;\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text3};\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 9999;\r\n  width: 100%;\r\n  top: 50px;\r\n  max-height: 540px;\r\n  overflow: auto;\r\n  left: 0;\r\n  padding-bottom: 20px;\r\n  background: ${({ theme }) => theme.bg6};\r\n  border-bottom-right-radius: 12px;\r\n  border-bottom-left-radius: 12px;\r\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\r\n    0px 24px 32px rgba(0, 0, 0, 0.04);\r\n  display: ${({ hide }) => hide && 'none'};\r\n`\r\n\r\nconst MenuItem = styled(Row)`\r\n  padding: 1rem;\r\n  font-size: 0.85rem;\r\n  & > * {\r\n    margin-right: 6px;\r\n  }\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst Heading = styled(Row)`\r\n  padding: 1rem;\r\n  display: ${({ hide = false }) => hide && 'none'};\r\n`\r\n\r\nconst Gray = styled.span`\r\n  color: #888d9b;\r\n`\r\n\r\nconst Blue = styled.span`\r\n  color: #2172e5;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const Search = ({ small = false }) => {\r\n  let allTokens = useAllTokensInUniswap()\r\n  const allTokenData = useAllTokenData()\r\n\r\n  let allPairs = useAllPairsInUniswap()\r\n  const allPairData = useAllPairData()\r\n\r\n  const [showMenu, toggleMenu] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const [, toggleShadow] = useState(false)\r\n  const [, toggleBottomShadow] = useState(false)\r\n\r\n  // fetch new data on tokens and pairs if needed\r\n  useTokenData(value)\r\n  usePairData(value)\r\n\r\n  const below700 = useMedia('(max-width: 700px)')\r\n  const below470 = useMedia('(max-width: 470px)')\r\n  const below410 = useMedia('(max-width: 410px)')\r\n\r\n  useEffect(() => {\r\n    if (value !== '') {\r\n      toggleMenu(true)\r\n    } else {\r\n      toggleMenu(false)\r\n    }\r\n  }, [value])\r\n\r\n  const [searchedTokens, setSearchedTokens] = useState([])\r\n  const [searchedPairs, setSearchedPairs] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        if (value?.length > 0) {\r\n          let tokens = await client.query({\r\n            query: TOKEN_SEARCH,\r\n            variables: {\r\n              value: value ? value.toUpperCase() : '',\r\n              id: value,\r\n            },\r\n          })\r\n\r\n          let pairs = await client.query({\r\n            query: PAIR_SEARCH,\r\n            variables: {\r\n              tokens: tokens.data.asSymbol?.map((t) => t.id),\r\n              id: value,\r\n            },\r\n          })\r\n\r\n          setSearchedPairs(\r\n            updateNameData(pairs.data.as0)\r\n              .concat(updateNameData(pairs.data.as1))\r\n              .concat(updateNameData(pairs.data.asAddress))\r\n          )\r\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\r\n          setSearchedTokens(foundTokens)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [value])\r\n\r\n  function escapeRegExp(string) {\r\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\r\n  }\r\n\r\n  // add the searched tokens to the list if not found yet\r\n  allTokens = allTokens.concat(\r\n    searchedTokens.filter((searchedToken) => {\r\n      let included = false\r\n      updateNameData()\r\n      allTokens.map((token) => {\r\n        if (token.id === searchedToken.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniqueTokens = []\r\n  let found = {}\r\n  allTokens &&\r\n    allTokens.map((token) => {\r\n      if (!found[token.id]) {\r\n        found[token.id] = true\r\n        uniqueTokens.push(token)\r\n      }\r\n      return true\r\n    })\r\n\r\n  allPairs = allPairs.concat(\r\n    searchedPairs.filter((searchedPair) => {\r\n      let included = false\r\n      allPairs.map((pair) => {\r\n        if (pair.id === searchedPair.id) {\r\n          included = true\r\n        }\r\n        return true\r\n      })\r\n      return !included\r\n    })\r\n  )\r\n\r\n  let uniquePairs = []\r\n  let pairsFound = {}\r\n  allPairs &&\r\n    allPairs.map((pair) => {\r\n      if (!pairsFound[pair.id]) {\r\n        pairsFound[pair.id] = true\r\n        uniquePairs.push(pair)\r\n      }\r\n      return true\r\n    })\r\n\r\n  const filteredTokenList = useMemo(() => {\r\n    return uniqueTokens\r\n      ? uniqueTokens\r\n        .sort((a, b) => {\r\n          const tokenA = allTokenData[a.id]\r\n          const tokenB = allTokenData[b.id]\r\n          if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n            return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\r\n          }\r\n          if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\r\n            return -1\r\n          }\r\n          if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\r\n            return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\r\n          }\r\n          return 1\r\n        })\r\n        .filter((token) => {\r\n          if (TOKEN_BLACKLIST.includes(token.id)) {\r\n            return false\r\n          }\r\n          const regexMatches = Object.keys(token).map((tokenEntryKey) => {\r\n            const isAddress = value.slice(0, 2) === '0x'\r\n            if (tokenEntryKey === 'id' && isAddress) {\r\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n            }\r\n            if (tokenEntryKey === 'symbol' && !isAddress) {\r\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n            }\r\n            if (tokenEntryKey === 'name' && !isAddress) {\r\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\r\n            }\r\n            return false\r\n          })\r\n          return regexMatches.some((m) => m)\r\n        })\r\n      : []\r\n  }, [allTokenData, uniqueTokens, value])\r\n\r\n  const filteredPairList = useMemo(() => {\r\n    return uniquePairs\r\n      ? uniquePairs\r\n        .sort((a, b) => {\r\n          const pairA = allPairData[a.id]\r\n          const pairB = allPairData[b.id]\r\n          if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n            return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\r\n          }\r\n          if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\r\n            return -1\r\n          }\r\n          if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\r\n            return 1\r\n          }\r\n          return 0\r\n        })\r\n        .filter((pair) => {\r\n          if (PAIR_BLACKLIST.includes(pair.id)) {\r\n            return false\r\n          }\r\n          if (value && value.includes(' ')) {\r\n            const pairA = value.split(' ')[0]?.toUpperCase()\r\n            const pairB = value.split(' ')[1]?.toUpperCase()\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n            )\r\n          }\r\n          if (value && value.includes('-')) {\r\n            const pairA = value.split('-')[0]?.toUpperCase()\r\n            const pairB = value.split('-')[1]?.toUpperCase()\r\n            return (\r\n              (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\r\n              (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\r\n            )\r\n          }\r\n          const regexMatches = Object.keys(pair).map((field) => {\r\n            const isAddress = value.slice(0, 2) === '0x'\r\n            if (field === 'id' && isAddress) {\r\n              return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\r\n            }\r\n            if (field === 'token0') {\r\n              return (\r\n                pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n              )\r\n            }\r\n            if (field === 'token1') {\r\n              return (\r\n                pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\r\n                pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\r\n              )\r\n            }\r\n            return false\r\n          })\r\n          return regexMatches.some((m) => m)\r\n        })\r\n      : []\r\n  }, [allPairData, uniquePairs, value])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredTokenList).length > 2) {\r\n      toggleShadow(true)\r\n    } else {\r\n      toggleShadow(false)\r\n    }\r\n  }, [filteredTokenList])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(filteredPairList).length > 2) {\r\n      toggleBottomShadow(true)\r\n    } else {\r\n      toggleBottomShadow(false)\r\n    }\r\n  }, [filteredPairList])\r\n\r\n  const [tokensShown, setTokensShown] = useState(3)\r\n  const [pairsShown, setPairsShown] = useState(3)\r\n\r\n  function onDismiss() {\r\n    setPairsShown(3)\r\n    setTokensShown(3)\r\n    toggleMenu(false)\r\n    setValue('')\r\n  }\r\n\r\n  // refs to detect clicks outside modal\r\n  const wrapperRef = useRef()\r\n  const menuRef = useRef()\r\n\r\n  const handleClick = (e) => {\r\n    if (\r\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\r\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\r\n    ) {\r\n      setPairsShown(3)\r\n      setTokensShown(3)\r\n      toggleMenu(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClick)\r\n    return () => {\r\n      document.removeEventListener('click', handleClick)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Container small={small}>\r\n      <Wrapper open={showMenu} shadow={true} small={small}>\r\n        <Input\r\n          large={!small}\r\n          type={'text'}\r\n          ref={wrapperRef}\r\n          placeholder={\r\n            small\r\n              ? ''\r\n              : below410\r\n                ? 'Search...'\r\n                : below470\r\n                  ? 'Search...'\r\n                  : below700\r\n                    ? 'Search pairs and tokens...'\r\n                    : 'Search Pairs and Tokens...'\r\n          }\r\n          value={value}\r\n          onChange={(e) => {\r\n            setValue(e.target.value)\r\n          }}\r\n          onFocus={() => {\r\n            if (!showMenu) {\r\n              toggleMenu(true)\r\n            }\r\n          }}\r\n        />\r\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\r\n      </Wrapper>\r\n      <Menu hide={!showMenu} ref={menuRef}>\r\n        <Heading>\r\n          <Gray>Pairs</Gray>\r\n        </Heading>\r\n        <div>\r\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredPairList &&\r\n            filteredPairList.slice(0, pairsShown).map((pair) => {\r\n              //format incorrect names\r\n              updateNameData(pair)\r\n              return (\r\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\r\n                  <MenuItem>\r\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\r\n                    <TYPE.body style={{ marginLeft: '10px' }}>\r\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\r\n                    </TYPE.body>\r\n                  </MenuItem>\r\n                </BasicLink>\r\n              )\r\n            })}\r\n          <Heading\r\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setPairsShown(pairsShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n        <Heading>\r\n          <Gray>Tokens</Gray>\r\n        </Heading>\r\n        <div>\r\n          {Object.keys(filteredTokenList).length === 0 && (\r\n            <MenuItem>\r\n              <TYPE.body>No results</TYPE.body>\r\n            </MenuItem>\r\n          )}\r\n          {filteredTokenList.slice(0, tokensShown).map((token) => {\r\n            // update displayed names\r\n            updateNameData({ token0: token })\r\n            return (\r\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\r\n                <MenuItem>\r\n                  <RowFixed>\r\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\r\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\r\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\r\n                  </RowFixed>\r\n                </MenuItem>\r\n              </BasicLink>\r\n            )\r\n          })}\r\n\r\n          <Heading\r\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\r\n          >\r\n            <Blue\r\n              onClick={() => {\r\n                setTokensShown(tokensShown + 5)\r\n              }}\r\n            >\r\n              See more...\r\n            </Blue>\r\n          </Heading>\r\n        </div>\r\n      </Menu>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import { Box as RebassBox } from 'rebass'\r\nimport styled, { css } from 'styled-components'\r\n\r\nconst panelPseudo = css`\r\n  :after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    height: 10px;\r\n  }\r\n\r\n  @media only screen and (min-width: 40em) {\r\n    :after {\r\n      content: unset;\r\n    }\r\n  }\r\n`\r\n\r\nconst Panel = styled(RebassBox)`\r\n  position: relative;\r\n  background-color: ${({ theme }) => theme.advancedBG};\r\n  padding: 1.25rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  border-radius: 8px;\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\r\n  :hover {\r\n    cursor: ${({ hover }) => hover && 'pointer'};\r\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\r\n  }\r\n\r\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\r\n\r\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\r\n\r\n  ${(props) =>\r\n    props.grouped &&\r\n    css`\r\n      @media only screen and (min-width: 40em) {\r\n        &:first-of-type {\r\n          border-radius: 20px 20px 0 0;\r\n        }\r\n        &:last-of-type {\r\n          border-radius: 0 0 20px 20px;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) =>\r\n    props.rounded &&\r\n    css`\r\n      border-radius: 8px;\r\n      @media only screen and (min-width: 40em) {\r\n        border-radius: 10px;\r\n      }\r\n    `};\r\n\r\n  ${(props) => !props.last && panelPseudo}\r\n`\r\n\r\nexport default Panel\r\n\r\n// const Panel = styled.div`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: flex-start;\r\n//   border-radius: 12px;\r\n//   background-color: ${({ theme }) => theme.advancedBG};\r\n//   padding: 1.25rem;\r\n//   box-sizing: border-box;\r\n//   box-shadow: 0 1.1px 2.8px -9px rgba(0, 0, 0, 0.008), 0 2.7px 6.7px -9px rgba(0, 0, 0, 0.012),\r\n//     0 5px 12.6px -9px rgba(0, 0, 0, 0.015), 0 8.9px 22.6px -9px rgba(0, 0, 0, 0.018),\r\n//     0 16.7px 42.2px -9px rgba(0, 0, 0, 0.022), 0 40px 101px -9px rgba(0, 0, 0, 0.03);\r\n// `\r\n","import React, { useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport Panel from '../Panel'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowFixed } from '../Row'\r\nimport { TYPE } from '../../Theme'\r\nimport { usePairData } from '../../contexts/PairData'\r\nimport { formattedNum } from '../../utils'\r\n\r\nconst PriceCard = styled(Panel)`\r\n  position: absolute;\r\n  right: -220px;\r\n  width: 220px;\r\n  top: -20px;\r\n  z-index: 9999;\r\n  height: fit-content;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n`\r\n\r\nfunction formatPercent(rawPercent) {\r\n  if (rawPercent < 0.01) {\r\n    return '<1%'\r\n  } else return parseFloat(rawPercent * 100).toFixed(0) + '%'\r\n}\r\n\r\nexport default function UniPrice() {\r\n  const daiPair = usePairData('0xa478c2975ab1ea89e8196811f51a7b7ade33eb11')\r\n  const usdcPair = usePairData('0xb4e16d0168e52d35cacd2c6185b44281ec28c9dc')\r\n  const usdtPair = usePairData('0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852')\r\n\r\n  const totalLiquidity = useMemo(() => {\r\n    return daiPair && usdcPair && usdtPair\r\n      ? daiPair.trackedReserveUSD + usdcPair.trackedReserveUSD + usdtPair.trackedReserveUSD\r\n      : 0\r\n  }, [daiPair, usdcPair, usdtPair])\r\n\r\n  const daiPerEth = daiPair ? parseFloat(daiPair.token0Price).toFixed(2) : '-'\r\n  const usdcPerEth = usdcPair ? parseFloat(usdcPair.token0Price).toFixed(2) : '-'\r\n  const usdtPerEth = usdtPair ? parseFloat(usdtPair.token1Price).toFixed(2) : '-'\r\n\r\n  return (\r\n    <PriceCard>\r\n      <AutoColumn gap=\"10px\">\r\n        <RowFixed>\r\n          <TYPE.main>DAI/ETH: {formattedNum(daiPerEth, true)}</TYPE.main>\r\n          <TYPE.light style={{ marginLeft: '10px' }}>\r\n            {daiPair && totalLiquidity ? formatPercent(daiPair.trackedReserveUSD / totalLiquidity) : '-'}\r\n          </TYPE.light>\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <TYPE.main>USDC/ETH: {formattedNum(usdcPerEth, true)}</TYPE.main>\r\n          <TYPE.light style={{ marginLeft: '10px' }}>\r\n            {usdcPair && totalLiquidity ? formatPercent(usdcPair.trackedReserveUSD / totalLiquidity) : '-'}\r\n          </TYPE.light>\r\n        </RowFixed>\r\n        <RowFixed>\r\n          <TYPE.main>USDT/ETH: {formattedNum(usdtPerEth, true)}</TYPE.main>\r\n          <TYPE.light style={{ marginLeft: '10px' }}>\r\n            {usdtPair && totalLiquidity ? formatPercent(usdtPair.trackedReserveUSD / totalLiquidity) : '-'}\r\n          </TYPE.light>\r\n        </RowFixed>\r\n      </AutoColumn>\r\n    </PriceCard>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { RowFixed, RowBetween } from '../Row'\r\nimport { useMedia } from 'react-use'\r\nimport { useGlobalData, useEthPrice } from '../../contexts/GlobalData'\r\nimport { formattedNum, localNumber } from '../../utils'\r\n\r\nimport UniPrice from '../UniPrice'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 0;\r\n`\r\n\r\nconst Medium = styled.span`\r\n  font-weight: 500;\r\n`\r\n\r\nexport default function GlobalStats() {\r\n  const below1295 = useMedia('(max-width: 1295px)')\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n  const below1024 = useMedia('(max-width: 1024px)')\r\n  const below400 = useMedia('(max-width: 400px)')\r\n  const below816 = useMedia('(max-width: 816px)')\r\n\r\n  const [showPriceCard, setShowPriceCard] = useState(false)\r\n\r\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\r\n  const [ethPrice] = useEthPrice()\r\n  const formattedEthPrice = ethPrice ? formattedNum(ethPrice, true) : '-'\r\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.003, true) : ''\r\n\r\n  return (\r\n    <Header>\r\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.6rem' }}>\r\n        <RowFixed>\r\n          {!below400 && (\r\n            <TYPE.main\r\n              mr={'2rem'}\r\n              onMouseEnter={() => {\r\n                setShowPriceCard(true)\r\n              }}\r\n              onMouseLeave={() => {\r\n                setShowPriceCard(false)\r\n              }}\r\n              style={{ position: 'relative' }}\r\n            >\r\n              ETH Price: <Medium>{formattedEthPrice}</Medium>\r\n              {showPriceCard && <UniPrice />}\r\n            </TYPE.main>\r\n          )}\r\n\r\n          {!below1180 && (\r\n            <TYPE.main mr={'2rem'}>\r\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1024 && (\r\n            <TYPE.main mr={'2rem'}>\r\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\r\n            </TYPE.main>\r\n          )}\r\n          {!below1295 && (\r\n            <TYPE.main mr={'2rem'}>\r\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\r\n            </TYPE.main>\r\n          )}\r\n        </RowFixed>\r\n      </RowBetween>\r\n    </Header>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { TYPE } from '../../Theme'\r\nimport { RowFixed } from '../Row'\r\n\r\nconst StyleCheckbox = styled.input`\r\n  background: ${({ theme }) => theme.bg2};\r\n\r\n  :before {\r\n    background: #f35429;\r\n  }\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ButtonText = styled(TYPE.main)`\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.6;\r\n  }\r\n`\r\n\r\nconst CheckBox = ({ checked, setChecked, text }) => {\r\n  return (\r\n    <RowFixed>\r\n      <StyleCheckbox name=\"checkbox\" type=\"checkbox\" checked={checked} onChange={setChecked} />\r\n      <ButtonText ml={'4px'} onClick={setChecked}>\r\n        {text}\r\n      </ButtonText>\r\n    </RowFixed>\r\n  )\r\n}\r\n\r\nexport default CheckBox\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Box } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { AutoRow, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport PairList from '../components/PairList'\r\nimport TopTokenList from '../components/TokenList'\r\nimport TxnList from '../components/TxnList'\r\nimport GlobalChart from '../components/GlobalChart'\r\nimport Search from '../components/Search'\r\nimport GlobalStats from '../components/GlobalStats'\r\nimport background from '../pages/background.jpeg'\r\n\r\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport { useMedia } from 'react-use'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { formattedNum, formattedPercent } from '../utils'\r\nimport { TYPE, ThemedBackground } from '../Theme'\r\nimport { transparentize } from 'polished'\r\nimport { CustomLink } from '../components/Link'\r\n\r\nimport { PageWrapper, ContentWrapper } from '../components'\r\nimport CheckBox from '../components/Checkbox'\r\nimport QuestionHelper from '../components/QuestionHelper'\r\n\r\nconst ListOptions = styled(AutoRow)`\r\n  height: 40px;\r\n  width: 100%;\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n\r\n  @media screen and (max-width: 640px) {\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst GridRow = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  grid-template-columns: 1fr 1fr;\r\n  column-gap: 6px;\r\n  align-items: start;\r\n  justify-content: space-between;\r\n`\r\n\r\nfunction GlobalPage() {\r\n  // get data for lists and totals\r\n  const allPairs = useAllPairData()\r\n  const allTokens = useAllTokenData()\r\n  const transactions = useGlobalTransactions()\r\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\r\n\r\n  // breakpoints\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // scrolling refs\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  // for tracked data on pairs\r\n  const [useTracked, setUseTracked] = useState(true)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <div style={{\r\n          backgroundImage: \"url(/background.jpeg)\",\r\n          backgroundRepeat: 'no-repeat',\r\n        }}>\r\n          < AutoColumn gap=\"25px\" style={{ paddingBottom: below800 ? '0' : '24px' }} >\r\n            <TYPE.largeHeader>{below800 ? 'OpenEXA Analytics' : 'OpenEXA Analytics'}</TYPE.largeHeader>\r\n            <Search />\r\n            <GlobalStats />\r\n          </AutoColumn>\r\n          {below800 && ( // mobile card\r\n            <Box mb={20}>\r\n              <Panel>\r\n                <Box>\r\n                  <AutoColumn gap=\"36px\">\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : '-'}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>{volumeChangeUSD ? formattedPercent(volumeChangeUSD) : '-'}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Total Liquidity</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\r\n                          {totalLiquidityUSD ? formattedNum(totalLiquidityUSD, true) : '-'}\r\n                        </TYPE.main>\r\n                        <TYPE.main fontSize={12}>\r\n                          {liquidityChangeUSD ? formattedPercent(liquidityChangeUSD) : '-'}\r\n                        </TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </AutoColumn>\r\n                </Box>\r\n              </Panel>\r\n            </Box>\r\n          )}\r\n          {!below800 && (\r\n            <GridRow>\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n              <Panel style={{ height: '100%' }}>\r\n                <GlobalChart display=\"volume\" />\r\n              </Panel>\r\n            </GridRow>\r\n          )}\r\n          {below800 && (\r\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\r\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\r\n                <GlobalChart display=\"liquidity\" />\r\n              </Panel>\r\n            </AutoColumn>\r\n          )}\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1.7rem'} style={{ whiteSpace: 'nowrap' }}>\r\n                Top Tokens\r\n              </TYPE.main>\r\n              <CustomLink to={'/tokens'}>See All</CustomLink>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <TopTokenList tokens={allTokens} />\r\n          </Panel>\r\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\r\n            <RowBetween>\r\n              <TYPE.main fontSize={'1.7rem'} style={{ whiteSpace: 'nowrap' }}>\r\n                Top Pairs\r\n              </TYPE.main>\r\n              <AutoRow gap=\"8px\" width=\"100%\" justifyContent=\"flex-end\">\r\n                <CheckBox\r\n                  checked={useTracked}\r\n                  setChecked={() => setUseTracked(!useTracked)}\r\n                  text={'Hide untracked pairs'}\r\n                />\r\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquidty pairs or pairs without ETH or stablecoins.\" />\r\n                <CustomLink to={'/pairs'}>See All</CustomLink>\r\n              </AutoRow>\r\n            </RowBetween>\r\n          </ListOptions>\r\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\r\n            <PairList pairs={allPairs} useTracked={useTracked} />\r\n          </Panel>\r\n          <span>\r\n            <TYPE.main fontSize={'1.7rem'} style={{ marginTop: '2rem' }}>\r\n              Transactions\r\n            </TYPE.main>\r\n          </span>\r\n          <Panel style={{ margin: '2rem 0' }}>\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n        </div>\r\n      </ContentWrapper >\r\n    </PageWrapper >\r\n  )\r\n}\r\n\r\nexport default withRouter(GlobalPage)\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { createChart, CrosshairMode } from 'lightweight-charts'\r\nimport dayjs from 'dayjs'\r\nimport { formattedNum } from '../../utils'\r\nimport { usePrevious } from 'react-use'\r\nimport styled from 'styled-components'\r\nimport { Play } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst IconWrapper = styled.div`\r\n  position: absolute;\r\n  right: 10px;\r\n  color: ${({ theme }) => theme.text1}\r\n  border-radius: 3px;\r\n  height: 16px;\r\n  width: 16px;\r\n  padding: 0px;\r\n  bottom: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst CandleStickChart = ({\r\n  data,\r\n  width,\r\n  height = 300,\r\n  base,\r\n  margin = true,\r\n  valueFormatter = (val) => formattedNum(val, true),\r\n}) => {\r\n  // reference for DOM element to create with chart\r\n  const ref = useRef()\r\n\r\n  const formattedData = data?.map((entry) => {\r\n    return {\r\n      time: parseFloat(entry.timestamp),\r\n      open: parseFloat(entry.open),\r\n      low: parseFloat(entry.open),\r\n      close: parseFloat(entry.close),\r\n      high: parseFloat(entry.close),\r\n    }\r\n  })\r\n\r\n  if (formattedData && formattedData.length > 0) {\r\n    formattedData.push({\r\n      time: dayjs().unix(),\r\n      open: parseFloat(formattedData[formattedData.length - 1].close),\r\n      close: parseFloat(base),\r\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\r\n    })\r\n  }\r\n\r\n  // pointer to the chart object\r\n  const [chartCreated, setChartCreated] = useState(false)\r\n  const dataPrev = usePrevious(data)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n  const previousTheme = usePrevious(darkMode)\r\n\r\n  // reset the chart if theme switches\r\n  useEffect(() => {\r\n    if (chartCreated && previousTheme !== darkMode) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, darkMode, previousTheme])\r\n\r\n  useEffect(() => {\r\n    if (data !== dataPrev && chartCreated) {\r\n      // remove the tooltip element\r\n      let tooltip = document.getElementById('tooltip-id')\r\n      let node = document.getElementById('test-id')\r\n      node.removeChild(tooltip)\r\n      chartCreated.resize(0, 0)\r\n      setChartCreated()\r\n    }\r\n  }, [chartCreated, data, dataPrev])\r\n\r\n  // if no chart created yet, create one with options and add to DOM manually\r\n  useEffect(() => {\r\n    if (!chartCreated) {\r\n      const chart = createChart(ref.current, {\r\n        width: width,\r\n        height: height,\r\n        layout: {\r\n          backgroundColor: 'transparent',\r\n          textColor: textColor,\r\n        },\r\n        grid: {\r\n          vertLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n          },\r\n          horzLines: {\r\n            color: 'rgba(197, 203, 206, 0.5)',\r\n          },\r\n        },\r\n        crosshair: {\r\n          mode: CrosshairMode.Normal,\r\n        },\r\n        rightPriceScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n          visible: true,\r\n        },\r\n        timeScale: {\r\n          borderColor: 'rgba(197, 203, 206, 0.8)',\r\n        },\r\n        localization: {\r\n          priceFormatter: (val) => formattedNum(val),\r\n        },\r\n      })\r\n\r\n      var candleSeries = chart.addCandlestickSeries({\r\n        upColor: 'green',\r\n        downColor: 'red',\r\n        borderDownColor: 'red',\r\n        borderUpColor: 'green',\r\n        wickDownColor: 'red',\r\n        wickUpColor: 'green',\r\n      })\r\n\r\n      candleSeries.setData(formattedData)\r\n\r\n      var toolTip = document.createElement('div')\r\n      toolTip.setAttribute('id', 'tooltip-id')\r\n      toolTip.className = 'three-line-legend'\r\n      ref.current.appendChild(toolTip)\r\n      toolTip.style.display = 'block'\r\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\r\n      toolTip.style.top = 50 + 'px'\r\n      toolTip.style.backgroundColor = 'transparent'\r\n\r\n      // get the title of the chart\r\n      function setLastBarText() {\r\n        toolTip.innerHTML = base\r\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\r\n          : ''\r\n      }\r\n      setLastBarText()\r\n\r\n      // update the title when hovering on the chart\r\n      chart.subscribeCrosshairMove(function (param) {\r\n        if (\r\n          param === undefined ||\r\n          param.time === undefined ||\r\n          param.point.x < 0 ||\r\n          param.point.x > width ||\r\n          param.point.y < 0 ||\r\n          param.point.y > height\r\n        ) {\r\n          setLastBarText()\r\n        } else {\r\n          var price = param.seriesPrices.get(candleSeries).close\r\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\r\n          toolTip.innerHTML =\r\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\r\n            valueFormatter(price) +\r\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\r\n            time +\r\n            ' UTC' +\r\n            '</span>' +\r\n            '</div>'\r\n        }\r\n      })\r\n\r\n      chart.timeScale().fitContent()\r\n\r\n      setChartCreated(chart)\r\n    }\r\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\r\n\r\n  // responsiveness\r\n  useEffect(() => {\r\n    if (width) {\r\n      chartCreated && chartCreated.resize(width, height)\r\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\r\n    }\r\n  }, [chartCreated, height, width])\r\n\r\n  return (\r\n    <div>\r\n      <div ref={ref} id=\"test-id\" />\r\n      <IconWrapper>\r\n        <Play\r\n          onClick={() => {\r\n            chartCreated && chartCreated.timeScale().fitContent()\r\n          }}\r\n        />\r\n      </IconWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CandleStickChart\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia, usePrevious } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { AutoColumn } from '../Column'\r\nimport { Activity } from 'react-feather'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  min-height: 300px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst PriceOption = styled(OptionButton)`\r\n  border-radius: 2px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  PRICE: 'Price',\r\n  LINE_PRICE: 'Price (Line)',\r\n}\r\n\r\nconst DATA_FREQUENCY = {\r\n  DAY: 'DAY',\r\n  HOUR: 'HOUR',\r\n  LINE: 'LINE',\r\n}\r\n\r\nconst TokenChart = ({ address, color, base }) => {\r\n  // settings for the window and candle width\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\r\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // reset view on new address\r\n  const addressPrev = usePrevious(address)\r\n  useEffect(() => {\r\n    if (address !== addressPrev && addressPrev) {\r\n      setChartFilter(CHART_VIEW.LIQUIDITY)\r\n    }\r\n  }, [address, addressPrev])\r\n\r\n  let chartData = useTokenChartData(address)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\r\n  const prevWindow = usePrevious(timeWindow)\r\n\r\n  // hourly and daily price data based on the current time window\r\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\r\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\r\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\r\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\r\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\r\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\r\n\r\n  const priceData =\r\n    timeWindow === timeframeOptions.MONTH\r\n      ? // monthly selected\r\n        frequency === DATA_FREQUENCY.DAY\r\n        ? dailyMonth\r\n        : hourlyMonth\r\n      : // weekly selected\r\n      timeWindow === timeframeOptions.WEEK\r\n      ? frequency === DATA_FREQUENCY.DAY\r\n        ? dailyWeek\r\n        : hourlyWeek\r\n      : // all time selected\r\n      frequency === DATA_FREQUENCY.DAY\r\n      ? dailyAll\r\n      : hourlyAll\r\n\r\n  // switch to hourly data when switched to week window\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\r\n      setFrequency(DATA_FREQUENCY.HOUR)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  // switch to daily data if switche to month or all time view\r\n  useEffect(() => {\r\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\r\n      setFrequency(DATA_FREQUENCY.DAY)\r\n    }\r\n  }, [prevWindow, timeWindow])\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\r\n\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween\r\n          mb={\r\n            chartFilter === CHART_VIEW.LIQUIDITY ||\r\n            chartFilter === CHART_VIEW.VOLUME ||\r\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\r\n              ? 40\r\n              : 0\r\n          }\r\n          align=\"flex-start\"\r\n        >\r\n          <AutoColumn gap=\"8px\">\r\n            <RowFixed>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Liquidity\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.VOLUME}\r\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\r\n                style={{ marginRight: '6px' }}\r\n              >\r\n                Volume\r\n              </OptionButton>\r\n              <OptionButton\r\n                active={chartFilter === CHART_VIEW.PRICE}\r\n                onClick={() => {\r\n                  setChartFilter(CHART_VIEW.PRICE)\r\n                }}\r\n              >\r\n                Price\r\n              </OptionButton>\r\n            </RowFixed>\r\n            {chartFilter === CHART_VIEW.PRICE && (\r\n              <AutoRow gap=\"4px\">\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.DAY}\r\n                  onClick={() => {\r\n                    setTimeWindow(timeframeOptions.MONTH)\r\n                    setFrequency(DATA_FREQUENCY.DAY)\r\n                  }}\r\n                >\r\n                  D\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.HOUR}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\r\n                >\r\n                  H\r\n                </PriceOption>\r\n                <PriceOption\r\n                  active={frequency === DATA_FREQUENCY.LINE}\r\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\r\n                >\r\n                  <Activity size={14} />\r\n                </PriceOption>\r\n              </AutoRow>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={120}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'totalLiquidityUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n      {chartFilter === CHART_VIEW.PRICE &&\r\n        (frequency === DATA_FREQUENCY.LINE ? (\r\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\r\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n              <defs>\r\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n                </linearGradient>\r\n              </defs>\r\n              <XAxis\r\n                tickLine={false}\r\n                axisLine={false}\r\n                interval=\"preserveEnd\"\r\n                tickMargin={16}\r\n                minTickGap={120}\r\n                tickFormatter={(tick) => toNiceDate(tick)}\r\n                dataKey=\"date\"\r\n                tick={{ fill: textColor }}\r\n                type={'number'}\r\n                domain={domain}\r\n              />\r\n              <YAxis\r\n                type=\"number\"\r\n                orientation=\"right\"\r\n                tickFormatter={(tick) => '$' + toK(tick)}\r\n                axisLine={false}\r\n                tickLine={false}\r\n                interval=\"preserveEnd\"\r\n                minTickGap={80}\r\n                yAxisId={0}\r\n                tick={{ fill: textColor }}\r\n              />\r\n              <Tooltip\r\n                cursor={true}\r\n                formatter={(val) => formattedNum(val, true)}\r\n                labelFormatter={(label) => toNiceDateYear(label)}\r\n                labelStyle={{ paddingTop: 4 }}\r\n                contentStyle={{\r\n                  padding: '10px 14px',\r\n                  borderRadius: 10,\r\n                  borderColor: color,\r\n                  color: 'black',\r\n                }}\r\n                wrapperStyle={{ top: -70, left: -10 }}\r\n              />\r\n              <Area\r\n                key={'other'}\r\n                dataKey={'priceUSD'}\r\n                stackId=\"2\"\r\n                strokeWidth={2}\r\n                dot={false}\r\n                type=\"monotone\"\r\n                name={'Price'}\r\n                yAxisId={0}\r\n                stroke={darken(0.12, color)}\r\n                fill=\"url(#colorUv)\"\r\n              />\r\n            </AreaChart>\r\n          </ResponsiveContainer>\r\n        ) : priceData ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart data={priceData} width={width} base={base} />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              orientation=\"right\"\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default TokenChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useCopyClipboard } from '../../hooks'\r\nimport { CheckCircle, Copy } from 'react-feather'\r\nimport { StyledIcon } from '..'\r\n\r\nconst CopyIcon = styled.div`\r\n  color: #aeaeae;\r\n  flex-shrink: 0;\r\n  margin-right: 1rem;\r\n  margin-left: 0.5rem;\r\n  text-decoration: none;\r\n  :hover,\r\n  :active,\r\n  :focus {\r\n    text-decoration: none;\r\n    opacity: 0.8;\r\n    cursor: pointer;\r\n  }\r\n`\r\nconst TransactionStatusText = styled.span`\r\n  margin-left: 0.25rem;\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: black;\r\n`\r\n\r\nexport default function CopyHelper({ toCopy }) {\r\n  const [isCopied, setCopied] = useCopyClipboard()\r\n\r\n  return (\r\n    <CopyIcon onClick={() => setCopied(toCopy)}>\r\n      {isCopied ? (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <CheckCircle size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      ) : (\r\n        <TransactionStatusText>\r\n          <StyledIcon>\r\n            <Copy size={'14'} />\r\n          </StyledIcon>\r\n        </TransactionStatusText>\r\n      )}\r\n    </CopyIcon>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport 'feather-icons'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'rebass'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { ButtonDark } from '../ButtonStyled'\r\nimport { AutoColumn } from '../Column'\r\nimport { Hover } from '..'\r\nimport Link from '../Link'\r\nimport { useMedia } from 'react-use'\r\n\r\nconst WarningWrapper = styled.div`\r\n  border-radius: 20px;\r\n  border: 1px solid #f82d3a;\r\n  background: rgba(248, 45, 58, 0.05);\r\n  padding: 1rem;\r\n  color: #f82d3a;\r\n  display: ${({ show }) => !show && 'none'};\r\n  margin: 0 2rem 2rem 2rem;\r\n  position: relative;\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 80% !important;\r\n    margin-left: 5%;\r\n  }\r\n`\r\n\r\nconst StyledWarningIcon = styled(AlertTriangle)`\r\n  min-height: 20px;\r\n  min-width: 20px;\r\n  stroke: red;\r\n`\r\n\r\nexport default function Warning({ type, show, setShow, address }) {\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  const textContent = below800 ? (\r\n    <div>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n        tokens that claim to represent projects that do not have a token.\r\n      </Text>\r\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n        Similar to Etherscan, this site automatically tracks analytics for all ERC20 tokens independent of token\r\n        integrity. Please do your own research before interacting with any ERC20 token.\r\n      </Text>\r\n    </div>\r\n  ) : (\r\n    <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r\n      Anyone can create and name any ERC20 token on Ethereum, including creating fake versions of existing tokens and\r\n      tokens that claim to represent projects that do not have a token. Similar to Etherscan, this site automatically\r\n      tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before\r\n      interacting with any ERC20 token.\r\n    </Text>\r\n  )\r\n\r\n  return (\r\n    <WarningWrapper show={show}>\r\n      <AutoColumn gap=\"4px\">\r\n        <RowFixed>\r\n          <StyledWarningIcon />\r\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\r\n            Token Safety Alert\r\n          </Text>\r\n        </RowFixed>\r\n        {textContent}\r\n        {below800 ? (\r\n          <div>\r\n            <Hover style={{ marginTop: '10px' }}>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <RowBetween style={{ marginTop: '20px' }}>\r\n              <div />\r\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n                I understand\r\n              </ButtonDark>\r\n            </RowBetween>\r\n          </div>\r\n        ) : (\r\n          <RowBetween style={{ marginTop: '10px' }}>\r\n            <Hover>\r\n              <Link\r\n                fontWeight={500}\r\n                lineHeight={'145.23%'}\r\n                color={'#2172E5'}\r\n                href={'https://etherscan.io/address/' + address}\r\n                target=\"_blank\"\r\n              >\r\n                View {type === 'token' ? 'token' : 'pair'} contract on Etherscan\r\n              </Link>\r\n            </Hover>\r\n            <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\r\n              I understand\r\n            </ButtonDark>\r\n          </RowBetween>\r\n        )}\r\n      </AutoColumn>\r\n    </WarningWrapper>\r\n  )\r\n}\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Popover, { PopoverProps } from '../Popover'\r\n\r\nconst Wrapper = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst TooltipContainer = styled.div`\r\n  width: 228px;\r\n  padding: 0.6rem 1rem;\r\n  line-height: 150%;\r\n  font-weight: 400;\r\n`\r\n\r\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\r\n  text: string\r\n}\r\n\r\nexport function Tooltip({ text, ...rest }: TooltipProps) {\r\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\r\n}\r\n\r\nexport default function HoverText({ text, children }: { text: string; children: any }) {\r\n  const [show, setShow] = useState<boolean>(false)\r\n  const open = useCallback(() => setShow(true), [setShow])\r\n  const close = useCallback(() => setShow(false), [setShow])\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Tooltip text={text} show={show}>\r\n        <Wrapper onMouseEnter={open} onMouseLeave={close}>\r\n          {children}\r\n        </Wrapper>\r\n      </Tooltip>\r\n    </Wrapper>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport Link from '../components/Link'\r\nimport Panel from '../components/Panel'\r\nimport TokenLogo from '../components/TokenLogo'\r\nimport PairList from '../components/PairList'\r\nimport Loader from '../components/LocalLoader'\r\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\r\nimport Column, { AutoColumn } from '../components/Column'\r\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\r\nimport TxnList from '../components/TxnList'\r\nimport TokenChart from '../components/TokenChart'\r\nimport { BasicLink } from '../components/Link'\r\nimport Search from '../components/Search'\r\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\r\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\r\nimport { TYPE, ThemedBackground } from '../Theme'\r\nimport { transparentize } from 'polished'\r\nimport { useColor } from '../hooks'\r\nimport CopyHelper from '../components/Copy'\r\nimport { useMedia } from 'react-use'\r\nimport { useDataForList } from '../contexts/PairData'\r\nimport { useEffect } from 'react'\r\nimport Warning from '../components/Warning'\r\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\r\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon, BlockedWrapper, BlockedMessageWrapper } from '../components'\r\nimport { PlusCircle, Bookmark, AlertCircle } from 'react-feather'\r\nimport FormattedName from '../components/FormattedName'\r\nimport { useListedTokens } from '../contexts/Application'\r\nimport HoverText from '../components/HoverText'\r\nimport { UNTRACKED_COPY, TOKEN_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\r\nimport QuestionHelper from '../components/QuestionHelper'\r\nimport Checkbox from '../components/Checkbox'\r\nimport { shortenAddress } from '../utils'\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      /* grid-column: 1 / 4; */\r\n    }\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenDetailsLayout = styled.div`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: auto auto auto 1fr;\r\n  column-gap: 30px;\r\n  align-items: start;\r\n\r\n  &:last-child {\r\n    align-items: center;\r\n    justify-items: end;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      /* grid-column: 1 / 4; */\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    &:last-child {\r\n      align-items: start;\r\n      justify-items: start;\r\n    }\r\n  }\r\n`\r\n\r\nconst WarningIcon = styled(AlertCircle)`\r\n  stroke: ${({ theme }) => theme.text1};\r\n  height: 16px;\r\n  width: 16px;\r\n  opacity: 0.6;\r\n`\r\n\r\nconst WarningGrouping = styled.div`\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n`\r\n\r\nfunction TokenPage({ address, history }) {\r\n  const {\r\n    id,\r\n    name,\r\n    symbol,\r\n    priceUSD,\r\n    oneDayVolumeUSD,\r\n    totalLiquidityUSD,\r\n    volumeChangeUSD,\r\n    oneDayVolumeUT,\r\n    volumeChangeUT,\r\n    priceChangeUSD,\r\n    liquidityChangeUSD,\r\n    oneDayTxns,\r\n    txnChange,\r\n  } = useTokenData(address)\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo(0, 0)\r\n  }, [])\r\n\r\n  // detect color from token\r\n  const backgroundColor = useColor(id, symbol)\r\n\r\n  const allPairs = useTokenPairs(address)\r\n\r\n  // pairs to show in pair list\r\n  const fetchedPairsList = useDataForList(allPairs)\r\n\r\n  // all transactions with this token\r\n  const transactions = useTokenTransactions(address)\r\n\r\n  // price\r\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\r\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\r\n\r\n  // volume\r\n  const volume = formattedNum(!!oneDayVolumeUSD ? oneDayVolumeUSD : oneDayVolumeUT, true)\r\n\r\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUT\r\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\r\n\r\n  // liquidity\r\n  const liquidity = formattedNum(totalLiquidityUSD, true)\r\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\r\n\r\n  // transactions\r\n  const txnChangeFormatted = formattedPercent(txnChange)\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below800 = useMedia('(max-width: 800px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const below500 = useMedia('(max-width: 500px)')\r\n\r\n  // format for long symbol\r\n  const LENGTH = below1080 ? 10 : 16\r\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\r\n\r\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\r\n  const [savedTokens, addToken] = useSavedTokens()\r\n  const listedTokens = useListedTokens()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  const [useTracked, setUseTracked] = useState(true)\r\n\r\n  if (TOKEN_BLACKLIST.includes(address)) {\r\n    return (\r\n      <BlockedWrapper>\r\n        <BlockedMessageWrapper>\r\n          <AutoColumn gap=\"1rem\" justify=\"center\">\r\n            <TYPE.light style={{ textAlign: 'center' }}>\r\n              {BLOCKED_WARNINGS[address] ?? `This token is not supported.`}\r\n            </TYPE.light>\r\n            <Link external={true} href={'https://etherscan.io/address/' + address}>{`More about ${shortenAddress(\r\n              address\r\n            )}`}</Link>\r\n          </AutoColumn>\r\n        </BlockedMessageWrapper>\r\n      </BlockedWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\r\n      <Warning\r\n        type={'token'}\r\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\r\n        setShow={markAsDismissed}\r\n        address={address}\r\n      />\r\n      <ContentWrapper>\r\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\r\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\r\n            <TYPE.body>\r\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\r\n            </TYPE.body>\r\n            <Link\r\n              style={{ width: 'fit-content' }}\r\n              color={backgroundColor}\r\n              external\r\n              href={'https://etherscan.io/address/' + address}\r\n            >\r\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\r\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\r\n              </Text>\r\n            </Link>\r\n          </AutoRow>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\r\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n            <RowBetween\r\n              style={{\r\n                flexWrap: 'wrap',\r\n                marginBottom: '2rem',\r\n                alignItems: 'flex-start',\r\n              }}\r\n            >\r\n              <RowFixed style={{ flexWrap: 'wrap' }}>\r\n                <RowFixed style={{ alignItems: 'baseline' }}>\r\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\r\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\r\n                    <RowFixed gap=\"6px\">\r\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\r\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\r\n                    </RowFixed>\r\n                  </TYPE.main>{' '}\r\n                  {!below1080 && (\r\n                    <>\r\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\r\n                        {price}\r\n                      </TYPE.main>\r\n                      {priceChange}\r\n                    </>\r\n                  )}\r\n                </RowFixed>\r\n              </RowFixed>\r\n              <span>\r\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\r\n                  {!!!savedTokens[address] && !below800 ? (\r\n                    <Hover onClick={() => addToken(address, symbol)}>\r\n                      <StyledIcon>\r\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  ) : !below1080 ? (\r\n                    <StyledIcon>\r\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\r\n                    </StyledIcon>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <Link href={getPoolLink(address)} target=\"_blank\">\r\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\r\n                  </Link>\r\n                  <Link href={getSwapLink(address)} target=\"_blank\">\r\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\r\n                      Trade\r\n                    </ButtonDark>\r\n                  </Link>\r\n                </RowFixed>\r\n              </span>\r\n            </RowBetween>\r\n\r\n            <>\r\n              {!below1080 && (\r\n                <RowFixed>\r\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\r\n                    Token Stats\r\n                  </TYPE.main>\r\n                  {usingUtVolume && (\r\n                    <HoverText text={UNTRACKED_COPY}>\r\n                      <WarningIcon />\r\n                    </HoverText>\r\n                  )}\r\n                </RowFixed>\r\n              )}\r\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\r\n                {below1080 && price && (\r\n                  <Panel>\r\n                    <AutoColumn gap=\"20px\">\r\n                      <RowBetween>\r\n                        <TYPE.main>Price</TYPE.main>\r\n                        <div />\r\n                      </RowBetween>\r\n                      <RowBetween align=\"flex-end\">\r\n                        {' '}\r\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                          {price}\r\n                        </TYPE.main>\r\n                        <TYPE.main>{priceChange}</TYPE.main>\r\n                      </RowBetween>\r\n                    </AutoColumn>\r\n                  </Panel>\r\n                )}\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Total Liquidity</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {liquidity}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{liquidityChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Volume (24hrs)</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {volume}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{volumeChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n\r\n                <Panel>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {oneDayTxns ? localNumber(oneDayTxns) : 0}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel\r\n                  style={{\r\n                    gridColumn: below1080 ? '1' : '2/4',\r\n                    gridRow: below1080 ? '' : '1/4',\r\n                  }}\r\n                >\r\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\r\n                </Panel>\r\n              </PanelWrapper>\r\n            </>\r\n\r\n            <RowBetween style={{ marginTop: '3rem' }}>\r\n              <TYPE.main fontSize={'1.125rem'}>Top Pairs</TYPE.main>\r\n              <AutoRow gap=\"4px\" style={{ width: 'fit-content' }}>\r\n                <Checkbox\r\n                  checked={useTracked}\r\n                  setChecked={() => setUseTracked(!useTracked)}\r\n                  text={'Hide untracked pairs'}\r\n                />\r\n                <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\r\n              </AutoRow>\r\n            </RowBetween>\r\n            <Panel\r\n              rounded\r\n              style={{\r\n                marginTop: '1.5rem',\r\n                padding: '1.125rem 0 ',\r\n              }}\r\n            >\r\n              {address && fetchedPairsList ? (\r\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} useTracked={useTracked} />\r\n              ) : (\r\n                <Loader />\r\n              )}\r\n            </Panel>\r\n            <RowBetween mt={40} mb={'1rem'}>\r\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\r\n            </RowBetween>\r\n            <Panel rounded>\r\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\r\n            </Panel>\r\n            <>\r\n              <RowBetween style={{ marginTop: '3rem' }}>\r\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\r\n              </RowBetween>\r\n              <Panel\r\n                rounded\r\n                style={{\r\n                  marginTop: '1.5rem',\r\n                }}\r\n                p={20}\r\n              >\r\n                <TokenDetailsLayout>\r\n                  <Column>\r\n                    <TYPE.main>Symbol</TYPE.main>\r\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={symbol} maxCharacters={12} />\r\n                    </Text>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Name</TYPE.main>\r\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                      <FormattedName text={name} maxCharacters={16} />\r\n                    </TYPE.main>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Address</TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\r\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={address} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <ButtonLight color={backgroundColor}>\r\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + address}>\r\n                      View on Etherscan ↗\r\n                    </Link>\r\n                  </ButtonLight>\r\n                </TokenDetailsLayout>\r\n              </Panel>\r\n            </>\r\n          </DashboardWrapper>\r\n        </WarningGrouping>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(TokenPage)\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\r\nimport { RowBetween, AutoRow } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\r\nimport { timeframeOptions } from '../../constants'\r\nimport { useMedia } from 'react-use'\r\nimport { EmptyCard } from '..'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport CandleStickChart from '../CandleChart'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 340px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VOLUME: 'Volume',\r\n  LIQUIDITY: 'Liquidity',\r\n  RATE0: 'Rate 0',\r\n  RATE1: 'Rate 1',\r\n}\r\n\r\nconst PairChart = ({ address, color, base0, base1 }) => {\r\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  // update the width on a window resize\r\n  const ref = useRef()\r\n  const isClient = typeof window === 'object'\r\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\r\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false\r\n    }\r\n    function handleResize() {\r\n      setWidth(ref?.current?.container?.clientWidth ?? width)\r\n      setHeight(ref?.current?.container?.clientHeight ?? height)\r\n    }\r\n    window.addEventListener('resize', handleResize)\r\n    return () => window.removeEventListener('resize', handleResize)\r\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  // get data for pair, and rates\r\n  const pairData = usePairData(address)\r\n  let chartData = usePairChartData(address)\r\n  const hourlyData = useHourlyRateData(address, timeWindow)\r\n  const hourlyRate0 = hourlyData && hourlyData[0]\r\n  const hourlyRate1 = hourlyData && hourlyData[1]\r\n\r\n  // formatted symbols for overflow\r\n  const formattedSymbol0 =\r\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\r\n  const formattedSymbol1 =\r\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\r\n\r\n  const below1600 = useMedia('(max-width: 1600px)')\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  if (chartData && chartData.length === 0) {\r\n    return (\r\n      <ChartWrapper>\r\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\r\n      </ChartWrapper>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Used to format values on chart on scroll\r\n   * Needs to be raw html for chart API to parse styles\r\n   * @param {*} val\r\n   */\r\n  function valueFormatter(val) {\r\n    if (chartFilter === CHART_VIEW.RATE0) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\r\n      )\r\n    }\r\n    if (chartFilter === CHART_VIEW.RATE1) {\r\n      return (\r\n        formattedNum(val) +\r\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\r\n      )\r\n    }\r\n  }\r\n\r\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.LIQUIDITY)\r\n              }}\r\n            >\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.VOLUME}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.ALL_TIME)\r\n                setChartFilter(CHART_VIEW.VOLUME)\r\n              }}\r\n            >\r\n              Volume\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE0}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE0)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={chartFilter === CHART_VIEW.RATE1}\r\n              onClick={() => {\r\n                setTimeWindow(timeframeOptions.WEEK)\r\n                setChartFilter(CHART_VIEW.RATE1)\r\n              }}\r\n            >\r\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              minTickGap={80}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tickMargin={16}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={' (USD)'}\r\n              dataKey={'reserveUSD'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, color)}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n\r\n      {chartFilter === CHART_VIEW.RATE1 &&\r\n        (hourlyRate1 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate1}\r\n              base={base0}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.RATE0 &&\r\n        (hourlyRate0 ? (\r\n          <ResponsiveContainer aspect={aspect} ref={ref}>\r\n            <CandleStickChart\r\n              data={hourlyRate0}\r\n              base={base1}\r\n              margin={false}\r\n              width={width}\r\n              valueFormatter={valueFormatter}\r\n            />\r\n          </ResponsiveContainer>\r\n        ) : (\r\n          <LocalLoader />\r\n        ))}\r\n\r\n      {chartFilter === CHART_VIEW.VOLUME && (\r\n        <ResponsiveContainer aspect={aspect}>\r\n          <BarChart\r\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\r\n            barCategoryGap={1}\r\n            data={chartData}\r\n          >\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={80}\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              axisLine={false}\r\n              tickMargin={16}\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              orientation=\"right\"\r\n              minTickGap={80}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: color, opacity: 0.1 }}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Bar\r\n              type=\"monotone\"\r\n              name={'Volume'}\r\n              dataKey={'dailyVolumeUSD'}\r\n              fill={color}\r\n              opacity={'0.4'}\r\n              yAxisId={0}\r\n              stroke={color}\r\n            />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairChart\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport 'feather-icons'\r\nimport styled from 'styled-components'\r\nimport Panel from '../components/Panel'\r\nimport {\r\n  PageWrapper,\r\n  ContentWrapperLarge,\r\n  StyledIcon,\r\n  BlockedWrapper,\r\n  BlockedMessageWrapper,\r\n} from '../components/index'\r\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\r\nimport Column, { AutoColumn } from '../components/Column'\r\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\r\nimport PairChart from '../components/PairChart'\r\nimport Link from '../components/Link'\r\nimport TxnList from '../components/TxnList'\r\nimport Loader from '../components/LocalLoader'\r\nimport { BasicLink } from '../components/Link'\r\nimport Search from '../components/Search'\r\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, shortenAddress } from '../utils'\r\nimport { useColor } from '../hooks'\r\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\r\nimport { TYPE, ThemedBackground } from '../Theme'\r\nimport { transparentize } from 'polished'\r\nimport CopyHelper from '../components/Copy'\r\nimport { useMedia } from 'react-use'\r\nimport DoubleTokenLogo from '../components/DoubleLogo'\r\nimport TokenLogo from '../components/TokenLogo'\r\nimport { Hover } from '../components'\r\nimport { useEthPrice } from '../contexts/GlobalData'\r\nimport Warning from '../components/Warning'\r\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\r\n\r\nimport { Bookmark, PlusCircle, AlertCircle } from 'react-feather'\r\nimport FormattedName from '../components/FormattedName'\r\nimport { useListedTokens } from '../contexts/Application'\r\nimport HoverText from '../components/HoverText'\r\nimport { UNTRACKED_COPY, PAIR_BLACKLIST, BLOCKED_WARNINGS } from '../constants'\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      /* grid-column: 1 / 4; */\r\n    }\r\n\r\n    > * {\r\n      &:first-child {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst TokenDetailsLayout = styled.div`\r\n  display: inline-grid;\r\n  width: 100%;\r\n  grid-template-columns: auto auto auto auto 1fr;\r\n  column-gap: 60px;\r\n  align-items: start;\r\n\r\n  &:last-child {\r\n    align-items: center;\r\n    justify-items: end;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    grid-template-columns: 1fr;\r\n    align-items: stretch;\r\n    > * {\r\n      /* grid-column: 1 / 4; */\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    &:last-child {\r\n      align-items: start;\r\n      justify-items: start;\r\n    }\r\n  }\r\n`\r\n\r\nconst FixedPanel = styled(Panel)`\r\n  width: fit-content;\r\n  padding: 8px 12px;\r\n  border-radius: 10px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst HoverSpan = styled.span`\r\n  :hover {\r\n    cursor: pointer;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst WarningIcon = styled(AlertCircle)`\r\n  stroke: ${({ theme }) => theme.text1};\r\n  height: 16px;\r\n  width: 16px;\r\n  opacity: 0.6;\r\n`\r\n\r\nconst WarningGrouping = styled.div`\r\n  opacity: ${({ disabled }) => disabled && '0.4'};\r\n  pointer-events: ${({ disabled }) => disabled && 'none'};\r\n`\r\n\r\nfunction PairPage({ pairAddress, history }) {\r\n  const {\r\n    token0,\r\n    token1,\r\n    reserve0,\r\n    reserve1,\r\n    reserveUSD,\r\n    trackedReserveUSD,\r\n    oneDayVolumeUSD,\r\n    volumeChangeUSD,\r\n    oneDayVolumeUntracked,\r\n    volumeChangeUntracked,\r\n    liquidityChangeUSD,\r\n  } = usePairData(pairAddress)\r\n\r\n  useEffect(() => {\r\n    document.querySelector('body').scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const transactions = usePairTransactions(pairAddress)\r\n  const backgroundColor = useColor(pairAddress)\r\n\r\n  const formattedLiquidity = reserveUSD ? formattedNum(reserveUSD, true) : formattedNum(trackedReserveUSD, true)\r\n  const usingUntrackedLiquidity = !trackedReserveUSD && !!reserveUSD\r\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\r\n\r\n  // volume\r\n  const volume = !!oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : formattedNum(oneDayVolumeUntracked, true)\r\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUntracked\r\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\r\n\r\n  const showUSDWaning = usingUntrackedLiquidity | usingUtVolume\r\n\r\n  // get fees\t  // get fees\r\n  const fees =\r\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\r\n      ? usingUtVolume\r\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\r\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\r\n      : '-'\r\n\r\n  // token data for usd\r\n  const [ethPrice] = useEthPrice()\r\n  const token0USD =\r\n    token0?.derivedETH && ethPrice ? formattedNum(parseFloat(token0.derivedETH) * parseFloat(ethPrice), true) : ''\r\n\r\n  const token1USD =\r\n    token1?.derivedETH && ethPrice ? formattedNum(parseFloat(token1.derivedETH) * parseFloat(ethPrice), true) : ''\r\n\r\n  // rates\r\n  const token0Rate = reserve0 && reserve1 ? formattedNum(reserve1 / reserve0) : '-'\r\n  const token1Rate = reserve0 && reserve1 ? formattedNum(reserve0 / reserve1) : '-'\r\n\r\n  // formatted symbols for overflow\r\n  const formattedSymbol0 = token0?.symbol.length > 6 ? token0?.symbol.slice(0, 5) + '...' : token0?.symbol\r\n  const formattedSymbol1 = token1?.symbol.length > 6 ? token1?.symbol.slice(0, 5) + '...' : token1?.symbol\r\n\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n  const below900 = useMedia('(max-width: 900px)')\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  const [savedPairs, addPair] = useSavedPairs()\r\n\r\n  const listedTokens = useListedTokens()\r\n\r\n  if (PAIR_BLACKLIST.includes(pairAddress)) {\r\n    return (\r\n      <BlockedWrapper>\r\n        <BlockedMessageWrapper>\r\n          <AutoColumn gap=\"1rem\" justify=\"center\">\r\n            <TYPE.light style={{ textAlign: 'center' }}>\r\n              {BLOCKED_WARNINGS[pairAddress] ?? `This pair is not supported.`}\r\n            </TYPE.light>\r\n            <Link external={true} href={'https://etherscan.io/address/' + pairAddress}>{`More about ${shortenAddress(\r\n              pairAddress\r\n            )}`}</Link>\r\n          </AutoColumn>\r\n        </BlockedMessageWrapper>\r\n      </BlockedWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\r\n      <span />\r\n      <Warning\r\n        type={'pair'}\r\n        show={!dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))}\r\n        setShow={markAsDismissed}\r\n        address={pairAddress}\r\n      />\r\n      <ContentWrapperLarge>\r\n        <RowBetween>\r\n          <TYPE.body>\r\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {token0?.symbol}-{token1?.symbol}\r\n          </TYPE.body>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <WarningGrouping\r\n          disabled={\r\n            !dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))\r\n          }\r\n        >\r\n          <DashboardWrapper>\r\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  flexWrap: 'wrap',\r\n                  width: '100%',\r\n                }}\r\n              >\r\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\r\n                  <RowFixed>\r\n                    {token0 && token1 && (\r\n                      <DoubleTokenLogo a0={token0?.id || ''} a1={token1?.id || ''} size={32} margin={true} />\r\n                    )}{' '}\r\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\r\n                      {token0 && token1 ? (\r\n                        <>\r\n                          <HoverSpan onClick={() => history.push(`/token/${token0?.id}`)}>{token0.symbol}</HoverSpan>\r\n                          <span>-</span>\r\n                          <HoverSpan onClick={() => history.push(`/token/${token1?.id}`)}>\r\n                            {token1.symbol}\r\n                          </HoverSpan>{' '}\r\n                          Pair\r\n                        </>\r\n                      ) : (\r\n                        ''\r\n                      )}\r\n                    </TYPE.main>\r\n                  </RowFixed>\r\n                </RowFixed>\r\n                <RowFixed\r\n                  ml={below900 ? '0' : '2.5rem'}\r\n                  mt={below1080 && '1rem'}\r\n                  style={{\r\n                    flexDirection: below1080 ? 'row-reverse' : 'initial',\r\n                  }}\r\n                >\r\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\r\n                    <Hover onClick={() => addPair(pairAddress, token0.id, token1.id, token0.symbol, token1.symbol)}>\r\n                      <StyledIcon>\r\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  ) : !below1080 ? (\r\n                    <StyledIcon>\r\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\r\n                    </StyledIcon>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n\r\n                  <Link external href={getPoolLink(token0?.id, token1?.id)}>\r\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\r\n                  </Link>\r\n                  <Link external href={getSwapLink(token0?.id, token1?.id)}>\r\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\r\n                      Trade\r\n                    </ButtonDark>\r\n                  </Link>\r\n                </RowFixed>\r\n              </div>\r\n            </AutoColumn>\r\n            <AutoRow\r\n              gap=\"6px\"\r\n              style={{\r\n                width: 'fit-content',\r\n                marginTop: below900 ? '1rem' : '0',\r\n                marginBottom: below900 ? '0' : '2rem',\r\n                flexWrap: 'wrap',\r\n              }}\r\n            >\r\n              <FixedPanel onClick={() => history.push(`/token/${token0?.id}`)}>\r\n                <RowFixed>\r\n                  <TokenLogo address={token0?.id} size={'16px'} />\r\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\r\n                    {token0 && token1\r\n                      ? `1 ${formattedSymbol0} = ${token0Rate} ${formattedSymbol1} ${\r\n                          parseFloat(token0?.derivedETH) ? '(' + token0USD + ')' : ''\r\n                        }`\r\n                      : '-'}\r\n                  </TYPE.main>\r\n                </RowFixed>\r\n              </FixedPanel>\r\n              <FixedPanel onClick={() => history.push(`/token/${token1?.id}`)}>\r\n                <RowFixed>\r\n                  <TokenLogo address={token1?.id} size={'16px'} />\r\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\r\n                    {token0 && token1\r\n                      ? `1 ${formattedSymbol1} = ${token1Rate} ${formattedSymbol0}  ${\r\n                          parseFloat(token1?.derivedETH) ? '(' + token1USD + ')' : ''\r\n                        }`\r\n                      : '-'}\r\n                  </TYPE.main>\r\n                </RowFixed>\r\n              </FixedPanel>\r\n            </AutoRow>\r\n            <>\r\n              {!below1080 && (\r\n                <RowFixed>\r\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\r\n                    Pair Stats\r\n                  </TYPE.main>\r\n                  {showUSDWaning ? (\r\n                    <HoverText text={UNTRACKED_COPY}>\r\n                      <WarningIcon />\r\n                    </HoverText>\r\n                  ) : null}\r\n                </RowFixed>\r\n              )}\r\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\r\n                <Panel style={{ height: '100%' }}>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Total Liquidity </TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {formattedLiquidity}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{liquidityChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel style={{ height: '100%' }}>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Volume (24hrs) </TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {volume}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{volumeChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel style={{ height: '100%' }}>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <RowBetween align=\"flex-end\">\r\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\r\n                        {fees}\r\n                      </TYPE.main>\r\n                      <TYPE.main>{volumeChange}</TYPE.main>\r\n                    </RowBetween>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel style={{ height: '100%' }}>\r\n                  <AutoColumn gap=\"20px\">\r\n                    <RowBetween>\r\n                      <TYPE.main>Pooled Tokens</TYPE.main>\r\n                      <div />\r\n                    </RowBetween>\r\n                    <Hover onClick={() => history.push(`/token/${token0?.id}`)} fade={true}>\r\n                      <AutoRow gap=\"4px\">\r\n                        <TokenLogo address={token0?.id} />\r\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\r\n                          <RowFixed>\r\n                            {reserve0 ? formattedNum(reserve0) : ''}{' '}\r\n                            <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} margin={true} />\r\n                          </RowFixed>\r\n                        </TYPE.main>\r\n                      </AutoRow>\r\n                    </Hover>\r\n                    <Hover onClick={() => history.push(`/token/${token1?.id}`)} fade={true}>\r\n                      <AutoRow gap=\"4px\">\r\n                        <TokenLogo address={token1?.id} />\r\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\r\n                          <RowFixed>\r\n                            {reserve1 ? formattedNum(reserve1) : ''}{' '}\r\n                            <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} margin={true} />\r\n                          </RowFixed>\r\n                        </TYPE.main>\r\n                      </AutoRow>\r\n                    </Hover>\r\n                  </AutoColumn>\r\n                </Panel>\r\n                <Panel\r\n                  style={{\r\n                    gridColumn: below1080 ? '1' : '2/4',\r\n                    gridRow: below1080 ? '' : '1/5',\r\n                  }}\r\n                >\r\n                  <PairChart\r\n                    address={pairAddress}\r\n                    color={backgroundColor}\r\n                    base0={reserve1 / reserve0}\r\n                    base1={reserve0 / reserve1}\r\n                  />\r\n                </Panel>\r\n              </PanelWrapper>\r\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n                Transactions\r\n              </TYPE.main>{' '}\r\n              <Panel\r\n                style={{\r\n                  marginTop: '1.5rem',\r\n                }}\r\n              >\r\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\r\n              </Panel>\r\n              <RowBetween style={{ marginTop: '3rem' }}>\r\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\r\n              </RowBetween>\r\n              <Panel\r\n                rounded\r\n                style={{\r\n                  marginTop: '1.5rem',\r\n                }}\r\n                p={20}\r\n              >\r\n                <TokenDetailsLayout>\r\n                  <Column>\r\n                    <TYPE.main>Pair Name</TYPE.main>\r\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\r\n                      <RowFixed>\r\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />\r\n                        -\r\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />\r\n                      </RowFixed>\r\n                    </TYPE.main>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>Pair Address</TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\r\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={pairAddress} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>\r\n                      <RowFixed>\r\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />{' '}\r\n                        <span style={{ marginLeft: '4px' }}>Address</span>\r\n                      </RowFixed>\r\n                    </TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\r\n                        {token0 && token0.id.slice(0, 6) + '...' + token0.id.slice(38, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={token0?.id} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <Column>\r\n                    <TYPE.main>\r\n                      <RowFixed>\r\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />{' '}\r\n                        <span style={{ marginLeft: '4px' }}>Address</span>\r\n                      </RowFixed>\r\n                    </TYPE.main>\r\n                    <AutoRow align=\"flex-end\">\r\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\r\n                        {token1 && token1.id.slice(0, 6) + '...' + token1.id.slice(38, 42)}\r\n                      </TYPE.main>\r\n                      <CopyHelper toCopy={token1?.id} />\r\n                    </AutoRow>\r\n                  </Column>\r\n                  <ButtonLight color={backgroundColor}>\r\n                    <Link color={backgroundColor} external href={'https://etherscan.io/address/' + pairAddress}>\r\n                      View on Etherscan ↗\r\n                    </Link>\r\n                  </ButtonLight>\r\n                </TokenDetailsLayout>\r\n              </Panel>\r\n            </>\r\n          </DashboardWrapper>\r\n        </WarningGrouping>\r\n      </ContentWrapperLarge>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(PairPage)\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { darken } from 'polished'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserLiquidityChart } from '../../contexts/User'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\nimport { TYPE } from '../../Theme'\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 100%;\r\n  max-height: 390px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst UserChart = ({ account }) => {\r\n  const chartData = useUserLiquidityChart(account)\r\n\r\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const above1600 = useMedia('(min-width: 1600px)')\r\n\r\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\r\n\r\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={'#3680E7'} />\r\n        </RowBetween>\r\n      ) : (\r\n        <RowBetween mb={40}>\r\n          <AutoRow gap=\"10px\">\r\n            <TYPE.main>Liquidity Value</TYPE.main>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </RowBetween>\r\n      )}\r\n      {chartData ? (\r\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\r\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={'#3680E7'} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={'#3680E7'} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={16}\r\n              minTickGap={0}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={domain}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveEnd\"\r\n              minTickGap={6}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: '#3680E7',\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n            <Area\r\n              key={'other'}\r\n              dataKey={'valueUSD'}\r\n              stackId=\"2\"\r\n              strokeWidth={2}\r\n              dot={false}\r\n              type=\"monotone\"\r\n              name={'Liquidity'}\r\n              yAxisId={0}\r\n              stroke={darken(0.12, '#3680E7')}\r\n              fill=\"url(#colorUv)\"\r\n            />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      ) : (\r\n        <LocalLoader />\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default UserChart\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\r\nimport { AutoRow, RowBetween } from '../Row'\r\n\r\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\r\nimport { OptionButton } from '../ButtonStyled'\r\nimport { useMedia } from 'react-use'\r\nimport { timeframeOptions } from '../../constants'\r\nimport DropdownSelect from '../DropdownSelect'\r\nimport { useUserPositionChart } from '../../contexts/User'\r\nimport { useTimeframe } from '../../contexts/Application'\r\nimport LocalLoader from '../LocalLoader'\r\nimport { useColor } from '../../hooks'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\n\r\nconst ChartWrapper = styled.div`\r\n  max-height: 420px;\r\n\r\n  @media screen and (max-width: 600px) {\r\n    min-height: 200px;\r\n  }\r\n`\r\n\r\nconst OptionsRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n`\r\n\r\nconst CHART_VIEW = {\r\n  VALUE: 'Value',\r\n  FEES: 'Fees',\r\n}\r\n\r\nconst PairReturnsChart = ({ account, position }) => {\r\n  let data = useUserPositionChart(position, account)\r\n\r\n  const [timeWindow, setTimeWindow] = useTimeframe()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  const color = useColor(position?.pair.token0.id)\r\n\r\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\r\n\r\n  // based on window, get starttime\r\n  let utcStartTime = getTimeframe(timeWindow)\r\n  data = data?.filter((entry) => entry.date >= utcStartTime)\r\n\r\n  const aspect = below600 ? 60 / 42 : 60 / 16\r\n\r\n  const [darkMode] = useDarkModeManager()\r\n  const textColor = darkMode ? 'white' : 'black'\r\n\r\n  return (\r\n    <ChartWrapper>\r\n      {below600 ? (\r\n        <RowBetween mb={40}>\r\n          <div />\r\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\r\n        </RowBetween>\r\n      ) : (\r\n        <OptionsRow>\r\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\r\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\r\n              Liquidity\r\n            </OptionButton>\r\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\r\n              Fees\r\n            </OptionButton>\r\n          </AutoRow>\r\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.WEEK}\r\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\r\n            >\r\n              1W\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.MONTH}\r\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\r\n            >\r\n              1M\r\n            </OptionButton>\r\n            <OptionButton\r\n              active={timeWindow === timeframeOptions.ALL_TIME}\r\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\r\n            >\r\n              All\r\n            </OptionButton>\r\n          </AutoRow>\r\n        </OptionsRow>\r\n      )}\r\n      <ResponsiveContainer aspect={aspect}>\r\n        {data ? (\r\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\r\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis\r\n              tickLine={false}\r\n              axisLine={false}\r\n              interval=\"preserveEnd\"\r\n              tickMargin={14}\r\n              tickFormatter={(tick) => toNiceDate(tick)}\r\n              dataKey=\"date\"\r\n              tick={{ fill: textColor }}\r\n              type={'number'}\r\n              domain={['dataMin', 'dataMax']}\r\n            />\r\n            <YAxis\r\n              type=\"number\"\r\n              orientation=\"right\"\r\n              tickFormatter={(tick) => '$' + toK(tick)}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval=\"preserveStartEnd\"\r\n              minTickGap={0}\r\n              yAxisId={0}\r\n              tick={{ fill: textColor }}\r\n            />\r\n            <Tooltip\r\n              cursor={true}\r\n              formatter={(val) => formattedNum(val, true)}\r\n              labelFormatter={(label) => toNiceDateYear(label)}\r\n              labelStyle={{ paddingTop: 4 }}\r\n              contentStyle={{\r\n                padding: '10px 14px',\r\n                borderRadius: 10,\r\n                borderColor: color,\r\n                color: 'black',\r\n              }}\r\n              wrapperStyle={{ top: -70, left: -10 }}\r\n            />\r\n\r\n            <Line\r\n              type=\"monotone\"\r\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\r\n              stroke={color}\r\n              yAxisId={0}\r\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\r\n            />\r\n          </LineChart>\r\n        ) : (\r\n          <LocalLoader />\r\n        )}\r\n      </ResponsiveContainer>\r\n    </ChartWrapper>\r\n  )\r\n}\r\n\r\nexport default PairReturnsChart\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport dayjs from 'dayjs'\r\nimport LocalLoader from '../LocalLoader'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport Link, { CustomLink } from '../Link'\r\nimport { Divider } from '../../components'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { formattedNum, getPoolLink } from '../../utils'\r\nimport { AutoColumn } from '../Column'\r\nimport { useEthPrice } from '../../contexts/GlobalData'\r\nimport { RowFixed } from '../Row'\r\nimport { ButtonLight } from '../ButtonStyled'\r\nimport { TYPE } from '../../Theme'\r\nimport FormattedName from '../FormattedName'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\r\n  grid-template-areas: 'number name uniswap return';\r\n  align-items: flex-start;\r\n  padding: 20px 0;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    :first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\r\n    grid-template-areas: 'number name uniswap return';\r\n  }\r\n\r\n  @media screen and (max-width: 740px) {\r\n    grid-template-columns: 2.5fr 1fr 1fr;\r\n    grid-template-areas: 'name uniswap return';\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: 2.5fr 1fr;\r\n    grid-template-areas: 'name uniswap';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  text-align: end;\r\n  user-select: none;\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'VALUE',\r\n  UNISWAP_RETURN: 'UNISWAP_RETURN',\r\n}\r\n\r\nfunction PositionList({ positions }) {\r\n  const below500 = useMedia('(max-width: 500px)')\r\n  const below740 = useMedia('(max-width: 740px)')\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  const ITEMS_PER_PAGE = 10\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [positions])\r\n\r\n  useEffect(() => {\r\n    if (positions) {\r\n      let extraPages = 1\r\n      if (positions.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\r\n    }\r\n  }, [positions])\r\n\r\n  const [ethPrice] = useEthPrice()\r\n\r\n  const ListItem = ({ position, index }) => {\r\n    const poolOwnership = position.liquidityTokenBalance / position.pair.totalSupply\r\n    const valueUSD = poolOwnership * position.pair.reserveUSD\r\n\r\n    return (\r\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\r\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\r\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\r\n            <DoubleTokenLogo size={16} a0={position.pair.token0.id} a1={position.pair.token1.id} margin={!below740} />\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\r\n            <CustomLink to={'/pair/' + position.pair.id}>\r\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\r\n                <FormattedName\r\n                  text={position.pair.token0.symbol + '-' + position.pair.token1.symbol}\r\n                  maxCharacters={below740 ? 10 : 18}\r\n                />\r\n              </TYPE.main>\r\n            </CustomLink>\r\n\r\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\r\n              <Link\r\n                external\r\n                href={getPoolLink(position.pair.token0.id, position.pair.token1.id)}\r\n                style={{ marginRight: '.5rem' }}\r\n              >\r\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\r\n              </Link>\r\n              {poolOwnership > 0 && (\r\n                <Link external href={getPoolLink(position.pair.token0.id, position.pair.token1.id, true)}>\r\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\r\n                </Link>\r\n              )}\r\n            </RowFixed>\r\n          </AutoColumn>\r\n        </DataText>\r\n        <DataText area=\"uniswap\">\r\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\r\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\r\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\r\n              <RowFixed>\r\n                <TYPE.small fontWeight={400}>\r\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\r\n                </TYPE.small>\r\n                <FormattedName\r\n                  text={position.pair.token0.symbol}\r\n                  maxCharacters={below740 ? 10 : 18}\r\n                  margin={true}\r\n                  fontSize={'11px'}\r\n                />\r\n              </RowFixed>\r\n              <RowFixed>\r\n                <TYPE.small fontWeight={400}>\r\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\r\n                </TYPE.small>\r\n                <FormattedName\r\n                  text={position.pair.token1.symbol}\r\n                  maxCharacters={below740 ? 10 : 18}\r\n                  margin={true}\r\n                  fontSize={'11px'}\r\n                />\r\n              </RowFixed>\r\n            </AutoColumn>\r\n          </AutoColumn>\r\n        </DataText>\r\n        {!below500 && (\r\n          <DataText area=\"return\">\r\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\r\n              <TYPE.main color={'green'}>\r\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\r\n              </TYPE.main>\r\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\r\n                <RowFixed>\r\n                  <TYPE.small fontWeight={400}>\r\n                    {parseFloat(position.pair.token0.derivedETH)\r\n                      ? formattedNum(\r\n                          position?.fees.sum / (parseFloat(position.pair.token0.derivedETH) * ethPrice) / 2,\r\n                          false,\r\n                          true\r\n                        )\r\n                      : 0}{' '}\r\n                  </TYPE.small>\r\n                  <FormattedName\r\n                    text={position.pair.token0.symbol}\r\n                    maxCharacters={below740 ? 10 : 18}\r\n                    margin={true}\r\n                    fontSize={'11px'}\r\n                  />\r\n                </RowFixed>\r\n                <RowFixed>\r\n                  <TYPE.small fontWeight={400}>\r\n                    {parseFloat(position.pair.token1.derivedETH)\r\n                      ? formattedNum(\r\n                          position?.fees.sum / (parseFloat(position.pair.token1.derivedETH) * ethPrice) / 2,\r\n                          false,\r\n                          true\r\n                        )\r\n                      : 0}{' '}\r\n                  </TYPE.small>\r\n                  <FormattedName\r\n                    text={position.pair.token1.symbol}\r\n                    maxCharacters={below740 ? 10 : 18}\r\n                    margin={true}\r\n                    fontSize={'11px'}\r\n                  />\r\n                </RowFixed>\r\n              </AutoColumn>\r\n            </AutoColumn>\r\n          </DataText>\r\n        )}\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  const positionsSorted =\r\n    positions &&\r\n    positions\r\n\r\n      .sort((p0, p1) => {\r\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\r\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\r\n        }\r\n        if (sortedColumn === SORT_FIELD.HODL) {\r\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\r\n        }\r\n        if (sortedColumn === SORT_FIELD.UNISWAP_RETURN) {\r\n          return p0?.uniswap?.return > p1?.uniswap?.return ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\r\n        }\r\n        if (sortedColumn === SORT_FIELD.VALUE) {\r\n          const bal0 = (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\r\n          const bal1 = (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\r\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\r\n        }\r\n        return 1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n      .map((position, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\r\n            <Divider />\r\n          </div>\r\n        )\r\n      })\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\r\n        {!below740 && (\r\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\r\n            <TYPE.main area=\"number\">#</TYPE.main>\r\n          </Flex>\r\n        )}\r\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\r\n          <TYPE.main area=\"number\">Name</TYPE.main>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n          <ClickableText\r\n            area=\"uniswap\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n        {!below500 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n            <ClickableText\r\n              area=\"return\"\r\n              onClick={() => {\r\n                setSortedColumn(SORT_FIELD.UNISWAP_RETURN)\r\n                setSortDirection(sortedColumn !== SORT_FIELD.UNISWAP_RETURN ? true : !sortDirection)\r\n              }}\r\n            >\r\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\r\n              {sortedColumn === SORT_FIELD.UNISWAP_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\r\n            </ClickableText>\r\n          </Flex>\r\n        )}\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(PositionList)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport dayjs from 'dayjs'\r\nimport LocalLoader from '../LocalLoader'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { Box, Flex, Text } from 'rebass'\r\nimport styled from 'styled-components'\r\nimport Link, { CustomLink } from '../Link'\r\nimport { Divider } from '..'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { formattedNum, getUniswapAppLink } from '../../utils'\r\nimport { AutoColumn } from '../Column'\r\nimport { RowFixed } from '../Row'\r\nimport { ButtonLight } from '../ButtonStyled'\r\nimport { TYPE } from '../../Theme'\r\nimport FormattedName from '../FormattedName'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 5px 0.5fr 1fr;\r\n  grid-template-areas: 'number name uniswap';\r\n  align-items: flex-start;\r\n  padding: 20px 0;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n\r\n    :first-child {\r\n      justify-content: flex-start;\r\n      text-align: left;\r\n      width: 20px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1200px) {\r\n    grid-template-columns: 35px 2.5fr 1fr;\r\n    grid-template-areas: 'number name uniswap';\r\n  }\r\n\r\n  @media screen and (max-width: 740px) {\r\n    grid-template-columns: 2.5fr 1fr;\r\n    grid-template-areas: 'name uniswap';\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: 2.5fr 1fr;\r\n    grid-template-areas: 'name uniswap';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst ClickableText = styled(Text)`\r\n  color: ${({ theme }) => theme.text1};\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.6;\r\n  }\r\n\r\n  text-align: end;\r\n  user-select: none;\r\n`\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n  & > * {\r\n    font-size: 1em;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nconst SORT_FIELD = {\r\n  VALUE: 'VALUE',\r\n  UNISWAP_RETURN: 'UNISWAP_RETURN',\r\n}\r\n\r\nfunction MiningPositionList({ miningPositions }) {\r\n  // const below500 = useMedia('(max-width: 500px)')\r\n  const below740 = useMedia('(max-width: 740px)')\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  const ITEMS_PER_PAGE = 10\r\n\r\n  // sorting\r\n  const [sortDirection, setSortDirection] = useState(true)\r\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [miningPositions])\r\n\r\n  useEffect(() => {\r\n    if (miningPositions) {\r\n      let extraPages = 1\r\n      if (miningPositions.length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(miningPositions.length / ITEMS_PER_PAGE) + extraPages || 1)\r\n    }\r\n  }, [miningPositions])\r\n\r\n  const ListItem = ({ miningPosition, index }) => {\r\n    if (!miningPosition.pairData) return null\r\n    const pairPercentage = miningPosition.balance / miningPosition.pairData.totalSupply\r\n    const valueUSD = miningPosition.pairData.reserveUSD\r\n    const valueFirstPair = miningPosition.pairData.reserve0\r\n    const valueSecondPair = miningPosition.pairData.reserve1\r\n    const firstPairName = miningPosition.miningPool.pair.token0\r\n    const secondPairName = miningPosition.miningPool.pair.token1\r\n    const pairAddress = miningPosition.miningPool.pair.id\r\n    const firstPairAddress = miningPosition.pairData.token0.id\r\n    const secondPairAddress = miningPosition.pairData.token1.id\r\n\r\n    return (\r\n      <DashGrid style={{ opacity: pairPercentage > 0 ? 1 : 0.6 }} focus={true}>\r\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\r\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\r\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\r\n            <DoubleTokenLogo size={16} a0={firstPairAddress} a1={secondPairAddress} margin={!below740} />\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\r\n            <CustomLink to={'/pair/' + pairAddress}>\r\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\r\n                <FormattedName text={firstPairName + '-' + secondPairName} maxCharacters={below740 ? 10 : 18} />\r\n              </TYPE.main>\r\n            </CustomLink>\r\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\r\n              <Link external href={getUniswapAppLink(firstPairAddress)} style={{ marginRight: '.5rem' }}>\r\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Stake More</ButtonLight>\r\n              </Link>\r\n              {pairPercentage > 0 && (\r\n                <Link external href={getUniswapAppLink(firstPairAddress)}>\r\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Withdraw</ButtonLight>\r\n                </Link>\r\n              )}\r\n            </RowFixed>\r\n          </AutoColumn>\r\n        </DataText>\r\n        <DataText area=\"uniswap\">\r\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\r\n            <TYPE.main>{formattedNum(pairPercentage * valueUSD, true, true)}</TYPE.main>\r\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\r\n              <RowFixed>\r\n                <TYPE.small fontWeight={400}>{formattedNum(pairPercentage * parseFloat(valueFirstPair))} </TYPE.small>\r\n                <FormattedName\r\n                  text={firstPairName}\r\n                  maxCharacters={below740 ? 10 : 18}\r\n                  margin={true}\r\n                  fontSize={'11px'}\r\n                />\r\n              </RowFixed>\r\n              <RowFixed>\r\n                <TYPE.small fontWeight={400}>{formattedNum(pairPercentage * parseFloat(valueSecondPair))} </TYPE.small>\r\n                <FormattedName\r\n                  text={secondPairName}\r\n                  maxCharacters={below740 ? 10 : 18}\r\n                  margin={true}\r\n                  fontSize={'11px'}\r\n                />\r\n              </RowFixed>\r\n            </AutoColumn>\r\n          </AutoColumn>\r\n        </DataText>\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  const miningPositionsSorted =\r\n    miningPositions &&\r\n    miningPositions\r\n\r\n      .sort((p0, p1) => {\r\n        if (sortedColumn === SORT_FIELD.VALUE) {\r\n          const bal0 = (p0.balance / p0.pairData?.totalSupply) * p0.pairData?.reserveUSD\r\n          const bal1 = (p0.balance / p0.pairData?.totalSupply) * p1.pairData?.reserveUSD\r\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\r\n        }\r\n        return 1\r\n      })\r\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\r\n      .map((miningPosition, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} miningPosition={miningPosition} />\r\n            <Divider />\r\n          </div>\r\n        )\r\n      })\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\r\n        {!below740 && (\r\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\r\n            <TYPE.main area=\"number\">#</TYPE.main>\r\n          </Flex>\r\n        )}\r\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\r\n          <TYPE.main area=\"number\">Name</TYPE.main>{' '}\r\n        </Flex>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n          <ClickableText\r\n            area=\"uniswap\"\r\n            onClick={(e) => {\r\n              setSortedColumn(SORT_FIELD.VALUE)\r\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\r\n            }}\r\n          >\r\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\r\n          </ClickableText>\r\n        </Flex>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>{!miningPositionsSorted ? <LocalLoader /> : miningPositionsSorted}</List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(MiningPositionList)\r\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useUserTransactions, useUserPositions, useMiningPositions } from '../contexts/User'\r\nimport TxnList from '../components/TxnList'\r\nimport Panel from '../components/Panel'\r\nimport { formattedNum } from '../utils'\r\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\r\nimport { AutoColumn } from '../components/Column'\r\nimport UserChart from '../components/UserChart'\r\nimport PairReturnsChart from '../components/PairReturnsChart'\r\nimport PositionList from '../components/PositionList'\r\nimport MiningPositionList from '../components/MiningPositionList'\r\nimport { TYPE } from '../Theme'\r\nimport { ButtonDropdown, ButtonLight } from '../components/ButtonStyled'\r\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\r\nimport DoubleTokenLogo from '../components/DoubleLogo'\r\nimport { Bookmark, Activity } from 'react-feather'\r\nimport Link from '../components/Link'\r\nimport { FEE_WARNING_TOKENS } from '../constants'\r\nimport { BasicLink } from '../components/Link'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\nimport { useSavedAccounts } from '../contexts/LocalStorage'\r\n\r\nconst AccountWrapper = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.2);\r\n  padding: 6px 16px;\r\n  border-radius: 100px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst Header = styled.div``\r\n\r\nconst DashboardWrapper = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst DropdownWrapper = styled.div`\r\n  position: relative;\r\n  margin-bottom: 1rem;\r\n  border: 1px solid #edeef2;\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Flyout = styled.div`\r\n  position: absolute;\r\n  top: 38px;\r\n  left: -1px;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 999;\r\n  border-bottom-right-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  padding-top: 4px;\r\n  border: 1px solid #edeef2;\r\n  border-top: none;\r\n`\r\n\r\nconst MenuRow = styled(Row)`\r\n  width: 100%;\r\n  padding: 12px 0;\r\n  padding-left: 12px;\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.bg2};\r\n  }\r\n`\r\n\r\nconst PanelWrapper = styled.div`\r\n  grid-template-columns: 1fr;\r\n  grid-template-rows: max-content;\r\n  gap: 6px;\r\n  display: inline-grid;\r\n  width: 100%;\r\n  align-items: start;\r\n`\r\n\r\nconst Warning = styled.div`\r\n  background-color: ${({ theme }) => theme.bg2};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 1rem;\r\n  font-weight: 600;\r\n  border-radius: 10px;\r\n  margin-bottom: 1rem;\r\n  width: calc(100% - 2rem);\r\n`\r\n\r\nfunction AccountPage({ account }) {\r\n  // get data for this account\r\n  const transactions = useUserTransactions(account)\r\n  const positions = useUserPositions(account)\r\n  const miningPositions = useMiningPositions(account)\r\n\r\n  // get data for user stats\r\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\r\n\r\n  // get derived totals\r\n  let totalSwappedUSD = useMemo(() => {\r\n    return transactions?.swaps\r\n      ? transactions?.swaps.reduce((total, swap) => {\r\n          return total + parseFloat(swap.amountUSD)\r\n        }, 0)\r\n      : 0\r\n  }, [transactions])\r\n\r\n  // if any position has token from fee warning list, show warning\r\n  const [showWarning, setShowWarning] = useState(false)\r\n  useEffect(() => {\r\n    if (positions) {\r\n      for (let i = 0; i < positions.length; i++) {\r\n        if (\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\r\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\r\n        ) {\r\n          setShowWarning(true)\r\n        }\r\n      }\r\n    }\r\n  }, [positions])\r\n\r\n  // settings for list view and dropdowns\r\n  const hideLPContent = positions && positions.length === 0\r\n  const [showDropdown, setShowDropdown] = useState(false)\r\n  const [activePosition, setActivePosition] = useState()\r\n\r\n  const dynamicPositions = activePosition ? [activePosition] : positions\r\n\r\n  const aggregateFees = dynamicPositions?.reduce(function (total, position) {\r\n    return total + position.fees.sum\r\n  }, 0)\r\n\r\n  const positionValue = useMemo(() => {\r\n    return dynamicPositions\r\n      ? dynamicPositions.reduce((total, position) => {\r\n          return (\r\n            total +\r\n            (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\r\n              position?.pair?.reserveUSD\r\n          )\r\n        }, 0)\r\n      : null\r\n  }, [dynamicPositions])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      behavior: 'smooth',\r\n      top: 0,\r\n    })\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  // adding/removing account from saved accounts\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n  const isBookmarked = savedAccounts.includes(account)\r\n  const handleBookmarkClick = useCallback(() => {\r\n    ;(isBookmarked ? removeAccount : addAccount)(account)\r\n  }, [account, isBookmarked, addAccount, removeAccount])\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <ContentWrapper>\r\n        <RowBetween>\r\n          <TYPE.body>\r\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\r\n            <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n              {' '}\r\n              {account?.slice(0, 42)}{' '}\r\n            </Link>\r\n          </TYPE.body>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <Header>\r\n          <RowBetween>\r\n            <span>\r\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n              <Link lineHeight={'145.23%'} href={'https://etherscan.io/address/' + account} target=\"_blank\">\r\n                <TYPE.main fontSize={14}>View on Etherscan</TYPE.main>\r\n              </Link>\r\n            </span>\r\n            <AccountWrapper>\r\n              <StyledIcon>\r\n                <Bookmark\r\n                  onClick={handleBookmarkClick}\r\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\r\n                />\r\n              </StyledIcon>\r\n            </AccountWrapper>\r\n          </RowBetween>\r\n        </Header>\r\n        <DashboardWrapper>\r\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\r\n          {!hideLPContent && (\r\n            <DropdownWrapper>\r\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\r\n                {!activePosition && (\r\n                  <RowFixed>\r\n                    <StyledIcon>\r\n                      <Activity size={16} />\r\n                    </StyledIcon>\r\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n                {activePosition && (\r\n                  <RowFixed>\r\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\r\n                    <TYPE.body ml={'16px'}>\r\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\r\n                    </TYPE.body>\r\n                  </RowFixed>\r\n                )}\r\n              </ButtonDropdown>\r\n              {showDropdown && (\r\n                <Flyout>\r\n                  <AutoColumn gap=\"0px\">\r\n                    {positions?.map((p, i) => {\r\n                      if (p.pair.token1.symbol === 'WETH') {\r\n                        p.pair.token1.symbol = 'ETH'\r\n                      }\r\n                      if (p.pair.token0.symbol === 'WETH') {\r\n                        p.pair.token0.symbol = 'ETH'\r\n                      }\r\n                      return (\r\n                        p.pair.id !== activePosition?.pair.id && (\r\n                          <MenuRow\r\n                            onClick={() => {\r\n                              setActivePosition(p)\r\n                              setShowDropdown(false)\r\n                            }}\r\n                            key={i}\r\n                          >\r\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\r\n                            <TYPE.body ml={'16px'}>\r\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\r\n                            </TYPE.body>\r\n                          </MenuRow>\r\n                        )\r\n                      )\r\n                    })}\r\n                    {activePosition && (\r\n                      <MenuRow\r\n                        onClick={() => {\r\n                          setActivePosition()\r\n                          setShowDropdown(false)\r\n                        }}\r\n                      >\r\n                        <RowFixed>\r\n                          <StyledIcon>\r\n                            <Activity size={16} />\r\n                          </StyledIcon>\r\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\r\n                        </RowFixed>\r\n                      </MenuRow>\r\n                    )}\r\n                  </AutoColumn>\r\n                </Flyout>\r\n              )}\r\n            </DropdownWrapper>\r\n          )}\r\n          {!hideLPContent && (\r\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\r\n              <AutoRow gap=\"20px\">\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\r\n                      {positionValue\r\n                        ? formattedNum(positionValue, true)\r\n                        : positionValue === 0\r\n                        ? formattedNum(0, true)\r\n                        : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n                <AutoColumn gap=\"10px\">\r\n                  <RowBetween>\r\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\r\n                    <div />\r\n                  </RowBetween>\r\n                  <RowFixed align=\"flex-end\">\r\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\r\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\r\n                    </TYPE.header>\r\n                  </RowFixed>\r\n                </AutoColumn>\r\n              </AutoRow>\r\n            </Panel>\r\n          )}\r\n          {!hideLPContent && (\r\n            <PanelWrapper>\r\n              <Panel style={{ gridColumn: '1' }}>\r\n                {activePosition ? (\r\n                  <PairReturnsChart account={account} position={activePosition} />\r\n                ) : (\r\n                  <UserChart account={account} position={activePosition} />\r\n                )}\r\n              </Panel>\r\n            </PanelWrapper>\r\n          )}\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Positions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem',\r\n            }}\r\n          >\r\n            <PositionList positions={positions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Liquidity Mining Pools\r\n          </TYPE.main>\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem',\r\n            }}\r\n          >\r\n            {miningPositions && <MiningPositionList miningPositions={miningPositions} />}\r\n            {!miningPositions && (\r\n              <AutoColumn gap=\"8px\" justify=\"flex-start\">\r\n                <TYPE.main>No Staked Liquidity.</TYPE.main>\r\n                <AutoRow gap=\"8px\" justify=\"flex-start\">\r\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Learn More</ButtonLight>{' '}\r\n                </AutoRow>{' '}\r\n              </AutoColumn>\r\n            )}\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Transactions\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem',\r\n            }}\r\n          >\r\n            <TxnList transactions={transactions} />\r\n          </Panel>\r\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\r\n            Wallet Stats\r\n          </TYPE.main>{' '}\r\n          <Panel\r\n            style={{\r\n              marginTop: '1.5rem',\r\n            }}\r\n          >\r\n            <AutoRow gap=\"20px\">\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\r\n                <TYPE.main>Total Value Swapped</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>\r\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\r\n                </TYPE.header>\r\n                <TYPE.main>Total Fees Paid</TYPE.main>\r\n              </AutoColumn>\r\n              <AutoColumn gap=\"8px\">\r\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\r\n                <TYPE.main>Total Transactions</TYPE.main>\r\n              </AutoColumn>\r\n            </AutoRow>\r\n          </Panel>\r\n        </DashboardWrapper>\r\n      </ContentWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport TopTokenList from '../components/TokenList'\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllTokenData } from '../contexts/TokenData'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\n// import CheckBox from '../components/Checkbox'\r\n// import QuestionHelper from '../components/QuestionHelper'\r\n\r\nfunction AllTokensPage() {\r\n  const allTokens = useAllTokenData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below600 = useMedia('(max-width: 800px)')\r\n\r\n  // const [useTracked, setUseTracked] = useState(true)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        {/* <AutoRow gap=\"4px\">\r\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked tokens'} />\r\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\r\n        </AutoRow> */}\r\n        <Panel style={{ marginTop: '10px', padding: below600 && '1rem 0 0 0 ' }}>\r\n          <TopTokenList tokens={allTokens} itemMax={50} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllTokensPage\r\n","import React, { useEffect, useState } from 'react'\r\nimport 'feather-icons'\r\n\r\nimport { TYPE } from '../Theme'\r\nimport Panel from '../components/Panel'\r\nimport { useAllPairData } from '../contexts/PairData'\r\nimport PairList from '../components/PairList'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport { RowBetween, AutoRow } from '../components/Row'\r\nimport Search from '../components/Search'\r\nimport { useMedia } from 'react-use'\r\nimport QuestionHelper from '../components/QuestionHelper'\r\nimport CheckBox from '../components/Checkbox'\r\n\r\nfunction AllPairsPage() {\r\n  const allPairs = useAllPairData()\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  const [useTracked, setUseTracked] = useState(true)\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\r\n          {!below800 && <Search small={true} />}\r\n        </RowBetween>\r\n        <AutoRow gap=\"4px\">\r\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked pairs'} />\r\n          <QuestionHelper text=\"USD amounts may be inaccurate in low liquiidty pairs or pairs without ETH or stablecoins.\" />\r\n        </AutoRow>\r\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\r\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} useTracked={useTracked} />\r\n        </Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default AllPairsPage\r\n","import React, { useState } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\r\nimport { AutoRow, RowBetween } from '../Row'\r\nimport { isAddress } from '../../utils'\r\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { Hover, StyledIcon } from '..'\r\nimport Panel from '../Panel'\r\nimport { Divider } from '..'\r\nimport { Flex } from 'rebass'\r\n\r\nimport { X } from 'react-feather'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  white-space: nowrap;\r\n  background: none;\r\n  border: none;\r\n  outline: none;\r\n  padding: 12px 16px;\r\n  border-radius: 12px;\r\n  color: ${({ theme }) => theme.text1};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  font-size: 16px;\r\n  margin-right: 1rem;\r\n  border: 1px solid ${({ theme }) => theme.bg3};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.text3};\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 640px) {\r\n    ::placeholder {\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nconst AccountLink = styled.span`\r\n  display: flex;\r\n  cursor: pointer;\r\n  color: ${({ theme }) => theme.link};\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 1fr;\r\n  grid-template-areas: 'account';\r\n  padding: 0 4px;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n  }\r\n`\r\n\r\nfunction AccountSearch({ history, small }) {\r\n  const [accountValue, setAccountValue] = useState()\r\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\r\n\r\n  function handleAccountSearch() {\r\n    if (isAddress(accountValue)) {\r\n      history.push('/account/' + accountValue)\r\n      if (!savedAccounts.includes(accountValue)) {\r\n        addAccount(accountValue)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AutoColumn gap={'1rem'}>\r\n      {!small && (\r\n        <>\r\n          <AutoRow>\r\n            <Wrapper>\r\n              <Input\r\n                placeholder=\"0x...\"\r\n                onChange={(e) => {\r\n                  setAccountValue(e.target.value)\r\n                }}\r\n              />\r\n            </Wrapper>\r\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\r\n          </AutoRow>\r\n        </>\r\n      )}\r\n\r\n      <AutoColumn gap={'12px'}>\r\n        {!small && (\r\n          <Panel>\r\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\r\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\r\n            </DashGrid>\r\n            <Divider />\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map((account) => {\r\n                return (\r\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\r\n                    <Flex\r\n                      area=\"account\"\r\n                      justifyContent=\"space-between\"\r\n                      onClick={() => history.push('/account/' + account)}\r\n                    >\r\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      <Hover\r\n                        onClick={(e) => {\r\n                          e.stopPropagation()\r\n                          removeAccount(account)\r\n                        }}\r\n                      >\r\n                        <StyledIcon>\r\n                          <X size={16} />\r\n                        </StyledIcon>\r\n                      </Hover>\r\n                    </Flex>\r\n                  </DashGrid>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\r\n            )}\r\n          </Panel>\r\n        )}\r\n\r\n        {small && (\r\n          <>\r\n            <TYPE.main>{'Accounts'}</TYPE.main>\r\n            {savedAccounts?.length > 0 ? (\r\n              savedAccounts.map((account) => {\r\n                return (\r\n                  <RowBetween key={account}>\r\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\r\n                      {small ? (\r\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\r\n                      ) : (\r\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\r\n                      )}\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeAccount(account)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n            ) : (\r\n              <TYPE.light>No pinned wallets</TYPE.light>\r\n            )}\r\n          </>\r\n        )}\r\n      </AutoColumn>\r\n    </AutoColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountSearch)\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { RowBetween, RowFixed } from '../Row'\r\nimport { AutoColumn } from '../Column'\r\nimport { TYPE } from '../../Theme'\r\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\r\nimport { Hover } from '..'\r\nimport TokenLogo from '../TokenLogo'\r\nimport AccountSearch from '../AccountSearch'\r\nimport { Bookmark, ChevronRight, X } from 'react-feather'\r\nimport { ButtonFaded } from '../ButtonStyled'\r\nimport FormattedName from '../FormattedName'\r\n\r\nconst RightColumn = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0px;\r\n  height: 100vh;\r\n  width: ${({ open }) => (open ? '160px' : '23px')};\r\n  padding: 1.25rem;\r\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg3};\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  z-index: 9999;\r\n  overflow: auto;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst SavedButton = styled(RowBetween)`\r\n  padding-bottom: ${({ open }) => open && '20px'};\r\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg3};\r\n  margin-bottom: ${({ open }) => open && '1.25rem'};\r\n\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst ScrollableDiv = styled(AutoColumn)`\r\n  overflow: auto;\r\n  padding-bottom: 60px;\r\n`\r\n\r\nconst StyledIcon = styled.div`\r\n  color: ${({ theme }) => theme.text2};\r\n`\r\n\r\nfunction PinnedData({ history, open, setSavedOpen }) {\r\n  const [savedPairs, , removePair] = useSavedPairs()\r\n  const [savedTokens, , removeToken] = useSavedTokens()\r\n\r\n  return !open ? (\r\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\r\n      <SavedButton open={open}>\r\n        <StyledIcon>\r\n          <Bookmark size={20} />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n    </RightColumn>\r\n  ) : (\r\n    <RightColumn gap=\"1rem\" open={open}>\r\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\r\n        <RowFixed>\r\n          <StyledIcon>\r\n            <Bookmark size={16} />\r\n          </StyledIcon>\r\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\r\n        </RowFixed>\r\n        <StyledIcon>\r\n          <ChevronRight />\r\n        </StyledIcon>\r\n      </SavedButton>\r\n      <AccountSearch small={true} />\r\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\r\n        <AutoColumn gap={'12px'}>\r\n          <TYPE.main>Pinned Pairs</TYPE.main>\r\n          {Object.keys(savedPairs).filter((key) => {\r\n            return !!savedPairs[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedPairs)\r\n              .filter((address) => {\r\n                return !!savedPairs[address]\r\n              })\r\n              .map((address) => {\r\n                const pair = savedPairs[address]\r\n                return (\r\n                  <RowBetween key={pair.address}>\r\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\r\n                      <RowFixed>\r\n                        <TYPE.header>\r\n                          <FormattedName\r\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\r\n                            maxCharacters={12}\r\n                            fontSize={'12px'}\r\n                          />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removePair(pair.address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\r\n          )}\r\n        </AutoColumn>\r\n        <ScrollableDiv gap={'12px'}>\r\n          <TYPE.main>Pinned Tokens</TYPE.main>\r\n          {Object.keys(savedTokens).filter((key) => {\r\n            return !!savedTokens[key]\r\n          }).length > 0 ? (\r\n            Object.keys(savedTokens)\r\n              .filter((address) => {\r\n                return !!savedTokens[address]\r\n              })\r\n              .map((address) => {\r\n                const token = savedTokens[address]\r\n                return (\r\n                  <RowBetween key={address}>\r\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\r\n                      <RowFixed>\r\n                        <TokenLogo address={address} size={'14px'} />\r\n                        <TYPE.header ml={'6px'}>\r\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\r\n                        </TYPE.header>\r\n                      </RowFixed>\r\n                    </ButtonFaded>\r\n                    <Hover onClick={() => removeToken(address)}>\r\n                      <StyledIcon>\r\n                        <X size={16} />\r\n                      </StyledIcon>\r\n                    </Hover>\r\n                  </RowBetween>\r\n                )\r\n              })\r\n          ) : (\r\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\r\n          )}\r\n        </ScrollableDiv>\r\n      </AutoColumn>\r\n    </RightColumn>\r\n  )\r\n}\r\n\r\nexport default withRouter(PinnedData)\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport { Flex } from 'rebass'\r\nimport Link from '../Link'\r\nimport { RowFixed } from '../Row'\r\nimport Logo from '../../assets/openexa_logonew.png'\r\n\r\nimport { BasicLink } from '../Link'\r\nimport { useMedia } from 'react-use'\r\n\r\nconst TitleWrapper = styled.div`\r\n  text-decoration: none;\r\n  z-index: 10;\r\n  width: 100%;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst UniIcon = styled(Link)`\r\n  transition: transform 0.3s ease;\r\n  :hover {\r\n    transform: rotate(-5deg);\r\n  }\r\n`\r\n\r\nconst Option = styled.div`\r\n  font-weight: 500;\r\n  font-size: 30px;\r\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\r\n  color: ${({ theme }) => theme.white};\r\n  display: flex;\r\n  margin-left: 12px;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nexport default function Title() {\r\n  const history = useHistory()\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n\r\n  return (\r\n    <TitleWrapper onClick={() => history.push('/')}>\r\n      <Flex alignItems=\"center\" style={{ justifyContent: 'space-between' }}>\r\n        <RowFixed>\r\n          <UniIcon id=\"link\" onClick={() => history.push('/')}>\r\n            <img width={'160px'} src={Logo} alt=\"logo\" />\r\n          </UniIcon>\r\n\r\n        </RowFixed>\r\n        {below1080 && (\r\n          <RowFixed style={{ alignItems: 'flex-end' }}>\r\n            <BasicLink to=\"/home\">\r\n              <Option activeText={history.location.pathname === '/home' ?? undefined}>Overview</Option>\r\n            </BasicLink>\r\n            <BasicLink to=\"/tokens\">\r\n              <Option\r\n                activeText={\r\n                  (history.location.pathname.split('/')[1] === 'tokens' ||\r\n                    history.location.pathname.split('/')[1] === 'token') ??\r\n                  undefined\r\n                }\r\n              >\r\n                Tokens\r\n              </Option>\r\n            </BasicLink>\r\n            <BasicLink to=\"/pairs\">\r\n              <Option\r\n                activeText={\r\n                  (history.location.pathname.split('/')[1] === 'pairs' ||\r\n                    history.location.pathname.split('/')[1] === 'pair') ??\r\n                  undefined\r\n                }\r\n              >\r\n                Pairs\r\n              </Option>\r\n            </BasicLink>\r\n\r\n            <BasicLink to=\"/accounts\">\r\n              <Option\r\n                activeText={\r\n                  (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                    history.location.pathname.split('/')[1] === 'account') ??\r\n                  undefined\r\n                }\r\n              >\r\n                Accounts\r\n              </Option>\r\n            </BasicLink>\r\n          </RowFixed>\r\n        )}\r\n      </Flex>\r\n    </TitleWrapper>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Sun, Moon } from 'react-feather'\r\n\r\nconst IconWrapper = styled.div<{ isActive?: boolean }>`\r\n  opacity: ${({ isActive }) => (isActive ? 0.8 : 0.4)};\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst StyledToggle = styled.div`\r\n  display: flex;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  margin-top: 1rem;\r\n  color: white;\r\n\r\n  :hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nexport interface ToggleProps {\r\n  isActive: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport default function Toggle({ isActive, toggle }: ToggleProps) {\r\n  return (\r\n    <StyledToggle onClick={toggle}>\r\n      <span>\r\n        <IconWrapper isActive={!isActive}>\r\n          <Sun size={20} />\r\n        </IconWrapper>\r\n      </span>\r\n      <span style={{ padding: '0 .5rem' }}>{' / '}</span>\r\n      <span>\r\n        <IconWrapper isActive={isActive}>\r\n          <Moon size={20} />\r\n        </IconWrapper>\r\n      </span>\r\n    </StyledToggle>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoColumn } from '../Column'\r\nimport Title from '../Title'\r\nimport { BasicLink } from '../Link'\r\nimport { useMedia } from 'react-use'\r\nimport { transparentize } from 'polished'\r\nimport { TYPE } from '../../Theme'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\r\nimport Link from '../Link'\r\nimport { useSessionStart } from '../../contexts/Application'\r\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\r\nimport Toggle from '../Toggle'\r\n\r\nconst Wrapper = styled.div`\r\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\r\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\r\n  color: ${({ theme }) => theme.text1};\r\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\r\n  position: sticky;\r\n  top: 0px;\r\n  z-index: 9999;\r\n  box-sizing: border-box;\r\n  /* background-color: #1b1c22; */\r\n  background: linear-gradient(193.68deg, #1b1c22 0.68%, #000000 100.48%);\r\n  color: ${({ theme }) => theme.bg2};\r\n\r\n  @media screen and (max-width: 800px) {\r\n    grid-template-columns: 1fr;\r\n    position: relative;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    padding: 1rem;\r\n  }\r\n`\r\n\r\nconst Option = styled.div`\r\n  font-weight: 500;\r\n  font-size: 18px;\r\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\r\n  color: ${({ theme }) => theme.white};\r\n  display: flex;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst DesktopWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  height: 100vh;\r\n`\r\n\r\nconst MobileWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst HeaderText = styled.div`\r\n  margin-right: 0.75rem;\r\n  font-size: 0.825rem;\r\n  font-weight: 500;\r\n  display: inline-box;\r\n  display: -webkit-inline-box;\r\n  opacity: 0.8;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n  a {\r\n    color: ${({ theme }) => theme.white};\r\n  }\r\n`\r\n\r\nconst Polling = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  left: 0;\r\n  bottom: 0;\r\n  padding: 1rem;\r\n  color: white;\r\n  opacity: 0.4;\r\n  transition: opacity 0.25s ease;\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`\r\nconst PollingDot = styled.div`\r\n  width: 8px;\r\n  height: 8px;\r\n  min-height: 8px;\r\n  min-width: 8px;\r\n  margin-right: 0.5rem;\r\n  margin-top: 3px;\r\n  border-radius: 50%;\r\n  background-color: ${({ theme }) => theme.green1};\r\n`\r\n\r\nfunction SideNav({ history }) {\r\n  const below1080 = useMedia('(max-width: 1080px)')\r\n\r\n  const below1180 = useMedia('(max-width: 1180px)')\r\n\r\n  const seconds = useSessionStart()\r\n\r\n  const [isDark, toggleDarkMode] = useDarkModeManager()\r\n\r\n  return (\r\n    <Wrapper isMobile={below1080}>\r\n      {!below1080 ? (\r\n        <DesktopWrapper>\r\n          <AutoColumn gap=\"1rem\" style={{ marginLeft: '.75rem', marginTop: '1.5rem' }}>\r\n            <Title />\r\n            {!below1080 && (\r\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '0.9rem' }}>\r\n                <BasicLink to=\"/home\">\r\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\r\n                    <TrendingUp size={23} style={{ marginRight: '.8rem' }} />\r\n                    Overview\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/tokens\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\r\n                        history.location.pathname.split('/')[1] === 'token') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <Disc size={23} style={{ marginRight: '.8rem' }} />\r\n                    Tokens\r\n                  </Option>\r\n                </BasicLink>\r\n                <BasicLink to=\"/pairs\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\r\n                        history.location.pathname.split('/')[1] === 'pair') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <PieChart size={23} style={{ marginRight: '.8rem' }} />\r\n                    Pairs\r\n                  </Option>\r\n                </BasicLink>\r\n\r\n                <BasicLink to=\"/accounts\">\r\n                  <Option\r\n                    activeText={\r\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\r\n                        history.location.pathname.split('/')[1] === 'account') ??\r\n                      undefined\r\n                    }\r\n                  >\r\n                    <List size={23} style={{ marginRight: '.8rem' }} />\r\n                    Accounts\r\n                  </Option>\r\n                </BasicLink>\r\n              </AutoColumn>\r\n            )}\r\n          </AutoColumn>\r\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\r\n            <HeaderText>\r\n              <Link href=\"https://openexa.com/\" target=\"_blank\">\r\n                OpenEXA.org\r\n              </Link>\r\n            </HeaderText>\r\n\r\n            <HeaderText>\r\n              <Link href=\"https://uniswap.org/docs/v2\" target=\"_blank\">\r\n                Docs\r\n              </Link>\r\n            </HeaderText>\r\n\r\n            <Toggle isActive={isDark} toggle={toggleDarkMode} />\r\n          </AutoColumn>\r\n          {!below1180 && (\r\n            <Polling style={{ marginLeft: '.5rem' }}>\r\n              <PollingDot />\r\n              <a href=\"/\" style={{ color: 'white' }}>\r\n                <TYPE.small color={'white'}>\r\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\r\n                </TYPE.small>\r\n              </a>\r\n            </Polling>\r\n          )}\r\n        </DesktopWrapper>\r\n      ) : (\r\n        <MobileWrapper>\r\n          <Title />\r\n        </MobileWrapper>\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(SideNav)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useMedia } from 'react-use'\r\nimport dayjs from 'dayjs'\r\nimport LocalLoader from '../LocalLoader'\r\nimport utc from 'dayjs/plugin/utc'\r\nimport { Box, Flex } from 'rebass'\r\nimport styled from 'styled-components'\r\n\r\nimport { CustomLink } from '../Link'\r\nimport { Divider } from '..'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { formattedNum } from '../../utils'\r\nimport { TYPE } from '../../Theme'\r\nimport DoubleTokenLogo from '../DoubleLogo'\r\nimport { RowFixed } from '../Row'\r\n\r\ndayjs.extend(utc)\r\n\r\nconst PageButtons = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 2em;\r\n  margin-bottom: 0.5em;\r\n`\r\n\r\nconst Arrow = styled.div`\r\n  color: ${({ theme }) => theme.primary1};\r\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\r\n  padding: 0 20px;\r\n  user-select: none;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst List = styled(Box)`\r\n  -webkit-overflow-scrolling: touch;\r\n`\r\n\r\nconst DashGrid = styled.div`\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\r\n  grid-template-areas: 'number name pair value';\r\n  padding: 0 4px;\r\n\r\n  > * {\r\n    justify-content: flex-end;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\r\n    grid-template-areas: 'number name pair value';\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-template-areas: 'name pair value';\r\n  }\r\n`\r\n\r\nconst ListWrapper = styled.div``\r\n\r\nconst DataText = styled(Flex)`\r\n  align-items: center;\r\n  text-align: center;\r\n  color: ${({ theme }) => theme.text1};\r\n  & > * {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 600px) {\r\n    font-size: 13px;\r\n  }\r\n`\r\n\r\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\r\n  const below600 = useMedia('(max-width: 600px)')\r\n  const below800 = useMedia('(max-width: 800px)')\r\n\r\n  // pagination\r\n  const [page, setPage] = useState(1)\r\n  const [maxPage, setMaxPage] = useState(1)\r\n  const ITEMS_PER_PAGE = maxItems\r\n\r\n  useEffect(() => {\r\n    setMaxPage(1) // edit this to do modular\r\n    setPage(1)\r\n  }, [lps])\r\n\r\n  useEffect(() => {\r\n    if (lps) {\r\n      let extraPages = 1\r\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\r\n        extraPages = 0\r\n      }\r\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\r\n    }\r\n  }, [ITEMS_PER_PAGE, lps])\r\n\r\n  const ListItem = ({ lp, index }) => {\r\n    return (\r\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\r\n        {!below600 && (\r\n          <DataText area=\"number\" fontWeight=\"500\">\r\n            {index}\r\n          </DataText>\r\n        )}\r\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\r\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\r\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\r\n          </CustomLink>\r\n        </DataText>\r\n\r\n        {/* {!below1080 && (\r\n          <DataText area=\"type\" justifyContent=\"flex-end\">\r\n            {lp.type}\r\n          </DataText>\r\n        )} */}\r\n\r\n        <DataText>\r\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\r\n            <RowFixed>\r\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\r\n              {lp.pairName}\r\n            </RowFixed>\r\n          </CustomLink>\r\n        </DataText>\r\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\r\n      </DashGrid>\r\n    )\r\n  }\r\n\r\n  const lpList =\r\n    lps &&\r\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\r\n          <Divider />\r\n        </div>\r\n      )\r\n    })\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\r\n        {!below600 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\r\n            <TYPE.main area=\"number\">#</TYPE.main>\r\n          </Flex>\r\n        )}\r\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\r\n          <TYPE.main area=\"name\">Account</TYPE.main>\r\n        </Flex>\r\n        {/* {!below1080 && (\r\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n            <TYPE.main area=\"type\">Type</TYPE.main>\r\n          </Flex>\r\n        )} */}\r\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\r\n        </Flex>\r\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\r\n          <TYPE.main area=\"value\">Value</TYPE.main>\r\n        </Flex>\r\n      </DashGrid>\r\n      <Divider />\r\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\r\n      <PageButtons>\r\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\r\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\r\n        </div>\r\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\r\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\r\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\r\n        </div>\r\n      </PageButtons>\r\n    </ListWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(LPList)\r\n","import React, { useEffect } from 'react'\r\nimport 'feather-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TYPE } from '../Theme'\r\nimport { PageWrapper, FullWrapper } from '../components'\r\nimport Panel from '../components/Panel'\r\nimport LPList from '../components/LPList'\r\nimport styled from 'styled-components'\r\nimport AccountSearch from '../components/AccountSearch'\r\nimport { useTopLps } from '../contexts/GlobalData'\r\nimport LocalLoader from '../components/LocalLoader'\r\nimport { RowBetween } from '../components/Row'\r\nimport { useMedia } from 'react-use'\r\nimport Search from '../components/Search'\r\n\r\nconst AccountWrapper = styled.div`\r\n  @media screen and (max-width: 600px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nfunction AccountLookup() {\r\n  // scroll to top\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  const topLps = useTopLps()\r\n\r\n  const below600 = useMedia('(max-width: 600px)')\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <FullWrapper>\r\n        <RowBetween>\r\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\r\n          {!below600 && <Search small={true} />}\r\n        </RowBetween>\r\n        <AccountWrapper>\r\n          <AccountSearch />\r\n        </AccountWrapper>\r\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\r\n          Top Liquidity Positions\r\n        </TYPE.main>\r\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\r\n      </FullWrapper>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default withRouter(AccountLookup)\r\n","import { useEffect } from 'react'\r\nimport ReactGA from 'react-ga'\r\n\r\n// fires a GA pageview every time the route changes\r\nexport default function GoogleAnalyticsReporter({ location: { pathname, search } }) {\r\n  useEffect(() => {\r\n    ReactGA.pageview(`${pathname}${search}`)\r\n  }, [pathname, search])\r\n  return null\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Component } from 'react';\r\n\r\nimport styled from 'styled-components'\r\nimport { ApolloProvider } from 'react-apollo'\r\nimport { client } from './apollo/client'\r\nimport { Route, Switch, BrowserRouter, Redirect } from 'react-router-dom'\r\nimport GlobalPage from './pages/GlobalPage'\r\nimport TokenPage from './pages/TokenPage'\r\nimport PairPage from './pages/PairPage'\r\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\r\nimport { isAddress } from './utils'\r\nimport AccountPage from './pages/AccountPage'\r\nimport AllTokensPage from './pages/AllTokensPage'\r\nimport AllPairsPage from './pages/AllPairsPage'\r\nimport PinnedData from './components/PinnedData'\r\n\r\nimport SideNav from './components/SideNav'\r\nimport AccountLookup from './pages/AccountLookup'\r\nimport LocalLoader from './components/LocalLoader'\r\nimport { useLatestBlocks } from './contexts/Application'\r\nimport GoogleAnalyticsReporter from './components/analytics/GoogleAnalyticsReporter'\r\nimport { PAIR_BLACKLIST, TOKEN_BLACKLIST } from './constants'\r\n\r\nconst AppWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n`\r\nconst ContentWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${({ open }) => (open ? '220px 1fr 200px' : '220px 1fr 64px')};\r\n\r\n  @media screen and (max-width: 1400px) {\r\n    grid-template-columns: 220px 1fr;\r\n  }\r\n\r\n  @media screen and (max-width: 1080px) {\r\n    grid-template-columns: 1fr;\r\n    max-width: 100vw;\r\n    overflow: hidden;\r\n    grid-gap: 0;\r\n  }\r\n`\r\n\r\nconst Right = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0rem;\r\n  z-index: 99;\r\n  width: ${({ open }) => (open ? '220px' : '64px')};\r\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\r\n  overflow: auto;\r\n  background-color: ${({ theme }) => theme.bg1};\r\n  @media screen and (max-width: 1400px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Center = styled.div`\r\n  height: 100%;\r\n  z-index: 9999;\r\n  transition: width 0.25s ease;\r\n  \r\n  background-color: ${({ theme }) => theme.onlyLight};\r\n`\r\n\r\nconst WarningWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\n\r\nconst WarningBanner = styled.div`\r\n  background-color: #ff6871;\r\n  padding: 1.5rem;\r\n  color: white;\r\n  width: 100%;\r\n  text-align: center;\r\n  font-weight: 500;\r\n`\r\n\r\n/**\r\n * Wrap the component with the header and sidebar pinned tab\r\n */\r\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\r\n  return (\r\n    <>\r\n      <ContentWrapper open={savedOpen}>\r\n        <SideNav />\r\n        <Center id=\"center\">{children}</Center>\r\n        <Right open={savedOpen}>\r\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\r\n        </Right>\r\n      </ContentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\r\n\r\nfunction App() {\r\n  const [savedOpen, setSavedOpen] = useState(false)\r\n\r\n  const globalData = useGlobalData()\r\n  const globalChartData = useGlobalChartData()\r\n  const [latestBlock, headBlock] = useLatestBlocks()\r\n\r\n\r\n  // show warning\r\n  const showWarning = headBlock && latestBlock ? headBlock - latestBlock > BLOCK_DIFFERENCE_THRESHOLD : false\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <AppWrapper>\r\n\r\n        {showWarning && (\r\n          <WarningWrapper>\r\n            <WarningBanner>\r\n              {`Warning: The data on this site has only synced to Ethereum block ${latestBlock} (out of ${headBlock}). Please check back soon.`}\r\n            </WarningBanner>\r\n          </WarningWrapper>\r\n        )}\r\n        {globalData &&\r\n          Object.keys(globalData).length > 0 &&\r\n          globalChartData &&\r\n          Object.keys(globalChartData).length > 0 ? (\r\n          <BrowserRouter>\r\n            <Route component={GoogleAnalyticsReporter} />\r\n            <Switch>\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/token/:tokenAddress\"\r\n                render={({ match }) => {\r\n                  if (\r\n                    isAddress(match.params.tokenAddress.toLowerCase()) &&\r\n                    !Object.keys(TOKEN_BLACKLIST).includes(match.params.tokenAddress.toLowerCase())\r\n                  ) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/pair/:pairAddress\"\r\n                render={({ match }) => {\r\n                  if (\r\n                    isAddress(match.params.pairAddress.toLowerCase()) &&\r\n                    !Object.keys(PAIR_BLACKLIST).includes(match.params.pairAddress.toLowerCase())\r\n                  ) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n              <Route\r\n                exacts\r\n                strict\r\n                path=\"/account/:accountAddress\"\r\n                render={({ match }) => {\r\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\r\n                    return (\r\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\r\n                      </LayoutWrapper>\r\n                    )\r\n                  } else {\r\n                    return <Redirect to=\"/home\" />\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Route path=\"/home\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <GlobalPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/tokens\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllTokensPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/pairs\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AllPairsPage />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Route path=\"/accounts\">\r\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\r\n                  <AccountLookup />\r\n                </LayoutWrapper>\r\n              </Route>\r\n\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        ) : (\r\n          <LocalLoader fill=\"true\" />\r\n        )}\r\n      </AppWrapper>\r\n    </ApolloProvider>\r\n\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ReactGA from 'react-ga'\r\nimport { isMobile } from 'react-device-detect'\r\nimport ThemeProvider, { GlobalStyle } from './Theme'\r\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\r\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\r\nimport GlobalDataContextProvider from './contexts/GlobalData'\r\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\r\nimport ApplicationContextProvider from './contexts/Application'\r\nimport UserContextProvider from './contexts/User'\r\nimport App from './App'\r\n\r\n// initialize GA\r\nconst GOOGLE_ANALYTICS_ID = process.env.REACT_APP_GOOGLE_ANALYTICS_ID\r\n\r\nif (typeof GOOGLE_ANALYTICS_ID === 'string') {\r\n  ReactGA.initialize(GOOGLE_ANALYTICS_ID, {\r\n    gaOptions: {\r\n      storage: 'none',\r\n      storeGac: false,\r\n    },\r\n  })\r\n  ReactGA.set({\r\n    anonymizeIp: true,\r\n    customBrowserType: !isMobile\r\n      ? 'desktop'\r\n      : 'web3' in window || 'ethereum' in window\r\n      ? 'mobileWeb3'\r\n      : 'mobileRegular',\r\n  })\r\n} else {\r\n  ReactGA.initialize('test', { testMode: true, debug: true })\r\n}\r\n\r\nfunction ContextProviders({ children }) {\r\n  return (\r\n    <LocalStorageContextProvider>\r\n      <ApplicationContextProvider>\r\n        <TokenDataContextProvider>\r\n          <GlobalDataContextProvider>\r\n            <PairDataContextProvider>\r\n              <UserContextProvider>{children}</UserContextProvider>\r\n            </PairDataContextProvider>\r\n          </GlobalDataContextProvider>\r\n        </TokenDataContextProvider>\r\n      </ApplicationContextProvider>\r\n    </LocalStorageContextProvider>\r\n  )\r\n}\r\n\r\nfunction Updaters() {\r\n  return (\r\n    <>\r\n      <LocalStorageContextUpdater />\r\n      <PairDataContextUpdater />\r\n      <TokenDataContextUpdater />\r\n    </>\r\n  )\r\n}\r\n\r\nReactDOM.render(\r\n  <ContextProviders>\r\n    <Updaters />\r\n    <ThemeProvider>\r\n      <>\r\n        <GlobalStyle />\r\n        <App />\r\n      </>\r\n    </ThemeProvider>\r\n  </ContextProviders>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}